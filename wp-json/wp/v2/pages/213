{"id":213,"date":"2016-08-07T19:51:52","date_gmt":"2016-08-08T02:51:52","guid":{"rendered":"http:\/\/www.javascripttutorial.net\/?page_id=213"},"modified":"2022-01-15T23:37:09","modified_gmt":"2022-01-16T07:37:09","slug":"javascript-recursive-function","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/","title":{"rendered":"JavaScript Recursive Function"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the recursion technique to develop a JavaScript recursive function, which is a function that calls itself.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the JavaScript recursive functions<\/h2>\n\n\n\n<p>A recursive function is a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-function\/\">function<\/a> that calls itself until it doesn&#8217;t. And this technique is called recursion.<\/p>\n\n\n\n<p>Suppose that you have a function called <code>recurse()<\/code>. The <code>recurse()<\/code> is a recursive function if it calls itself inside its body, like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">recurse<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-comment\">\/\/ ...<\/span>\n    recurse();\n    <span class=\"hljs-comment\">\/\/ ...<\/span>\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>A recursive function always has a condition to stop calling itself. Otherwise, it will call itself indefinitely. So a recursive function typically looks like the following:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">recurse<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">if<\/span>(condition) {\n        <span class=\"hljs-comment\">\/\/ stop calling itself<\/span>\n        <span class=\"hljs-comment\">\/\/...<\/span>\n    } <span class=\"hljs-keyword\">else<\/span> {\n        recurse();\n    }\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Generally, you use recursive functions to break down a big problem into smaller ones. Typically, you will find the recursive functions in data structures like binary trees and graphs and algorithms such as binary search and quicksort.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript recursive function examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using recursive functions.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) A simple JavaScript recursive function example<\/h3>\n\n\n\n<p>Suppose that you need to develop a function that counts down from a specified number to 1. For example, to count down from 3 to 1:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">3\n2\n1<\/code><\/span><\/pre>\n\n\n<p>The following shows the <code>countDown()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">countDown<\/span>(<span class=\"hljs-params\">fromNumber<\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(fromNumber);\n}\n\ncountDown(<span class=\"hljs-number\">3<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This <code>countDown(3)<\/code> shows only the number 3.<\/p>\n\n\n\n<p>To count down from the number 3 to 1, you can:<\/p>\n\n\n\n<ol><li>show the number 3.<\/li><li>and call the <code>countDown(2)<\/code> that shows the number 2.<\/li><li>and call the <code>countDown(1)<\/code> that shows the number 1.<\/li><\/ol>\n\n\n\n<p>The following changes the <code>countDown()<\/code> to a recursive function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">countDown<\/span>(<span class=\"hljs-params\">fromNumber<\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(fromNumber);\n    countDown(fromNumber<span class=\"hljs-number\">-1<\/span>);\n}\n\ncountDown(<span class=\"hljs-number\">3<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This <code>countDown(3)<\/code> will run until the call stack size is exceeded, like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">Uncaught <span class=\"hljs-built_in\">RangeError<\/span>: Maximum call stack size exceeded.<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>&#8230; because it doesn&#8217;t have the condition to stop calling itself.<\/p>\n\n\n\n<p>The count down will stop when the next number is zero. Therefore, you add an <a href=\"https:\/\/www.javascripttutorial.net\/javascript-if\/\">if condition<\/a> as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">countDown<\/span>(<span class=\"hljs-params\">fromNumber<\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(fromNumber);\n\n    <span class=\"hljs-keyword\">let<\/span> nextNumber = fromNumber - <span class=\"hljs-number\">1<\/span>;\n\n    <span class=\"hljs-keyword\">if<\/span> (nextNumber &gt; <span class=\"hljs-number\">0<\/span>) {\n        countDown(nextNumber);\n    }\n}\ncountDown(<span class=\"hljs-number\">3<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">3\n2\n1<\/code><\/span><\/pre>\n\n\n<p>The <code>countDown()<\/code> seems to work as expected.<\/p>\n\n\n\n<p>However, as mentioned in the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-function-type\/\">Function type tutorial<\/a>, the function&#8217;s name is a reference to the actual function object.<\/p>\n\n\n\n<p>If the function name is set to <code>null<\/code> somewhere in the code, the recursive function will stop working.<\/p>\n\n\n\n<p>For example, the following code will result in an error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> newYearCountDown = countDown;\n<span class=\"hljs-comment\">\/\/ somewhere in the code<\/span>\ncountDown = <span class=\"hljs-literal\">null<\/span>;\n<span class=\"hljs-comment\">\/\/ the following function call will cause an error<\/span>\nnewYearCountDown(<span class=\"hljs-number\">10<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">Uncaught <span class=\"hljs-built_in\">TypeError<\/span>: countDown is not a <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How the script works:<\/p>\n\n\n\n<ul><li>First, assign the <code>countDown<\/code> function name to the variable <code>newYearCountDown<\/code>.<\/li><li>Second, set the <code>countDown<\/code> function reference to <code>null<\/code>.<\/li><li>Third, call the <code>newYearCountDown<\/code> function.<\/li><\/ul>\n\n\n\n<p>The code causes an error because the body of the <code>countDown()<\/code> function references the <code>countDown<\/code> function name, which was set to <code>null<\/code> at the time of calling the function.<\/p>\n\n\n\n<p>To fix it, you can use a named function expression as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> countDown = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">f<\/span>(<span class=\"hljs-params\">fromNumber<\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(fromNumber);\n\n    <span class=\"hljs-keyword\">let<\/span> nextNumber = fromNumber - <span class=\"hljs-number\">1<\/span>;\n\n    <span class=\"hljs-keyword\">if<\/span> (nextNumber &gt; <span class=\"hljs-number\">0<\/span>) {\n        f(nextNumber);\n    }\n}\n\n<span class=\"hljs-keyword\">let<\/span> newYearCountDown = countDown;\ncountDown = <span class=\"hljs-literal\">null<\/span>;\nnewYearCountDown(<span class=\"hljs-number\">10<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">2) Calculate the sum of n natural numbers example<\/h3>\n\n\n\n<p>Suppose you need to calculate the sum of natural numbers from 1 to n using the recursion technique. To do that, you need to define the <code>sum()<\/code> recursively as follows:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">sum(n) = n + sum(n-1)\nsum(n-1) = n - 1 + sum(n-2)\n...\nsum(1) = 1<\/code><\/span><\/pre>\n\n\n<p>The following illustrates the <code>sum()<\/code> recursive function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">sum<\/span>(<span class=\"hljs-params\">n<\/span>) <\/span>{\n  <span class=\"hljs-keyword\">if<\/span> (n &lt;= <span class=\"hljs-number\">1<\/span>) {\n    <span class=\"hljs-keyword\">return<\/span> n;\n  }\n  <span class=\"hljs-keyword\">return<\/span> n + sum(n - <span class=\"hljs-number\">1<\/span>);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>A recursive function is a function that calls itself until it doesn&#8217;t<\/li><li>A recursive function always has a condition that stops the function from calling itself.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"213\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/\"\n\t\t\t\tdata-post-title=\"JavaScript Recursive Function\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"213\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/\"\n\t\t\t\tdata-post-title=\"JavaScript Recursive Function\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the recursion technique to develop a JavaScript recursive function, which is a function that calls itself.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":41,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Recursive Function By Examples<\/title>\n<meta name=\"description\" content=\"This tutorial shows you how to use the recursion technique to develop a JavaScript recursive function, which is a function that calls itself.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Recursive Function By Examples\" \/>\n<meta property=\"og:description\" content=\"This tutorial shows you how to use the recursion technique to develop a JavaScript recursive function, which is a function that calls itself.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-16T07:37:09+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/\",\"name\":\"JavaScript Recursive Function By Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2016-08-08T02:51:52+00:00\",\"dateModified\":\"2022-01-16T07:37:09+00:00\",\"description\":\"This tutorial shows you how to use the recursion technique to develop a JavaScript recursive function, which is a function that calls itself.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Recursive Function\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Recursive Function By Examples","description":"This tutorial shows you how to use the recursion technique to develop a JavaScript recursive function, which is a function that calls itself.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Recursive Function By Examples","og_description":"This tutorial shows you how to use the recursion technique to develop a JavaScript recursive function, which is a function that calls itself.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-01-16T07:37:09+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/","url":"https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/","name":"JavaScript Recursive Function By Examples","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2016-08-08T02:51:52+00:00","dateModified":"2022-01-16T07:37:09+00:00","description":"This tutorial shows you how to use the recursion technique to develop a JavaScript recursive function, which is a function that calls itself.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-recursive-function\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript Recursive Function"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/213"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=213"}],"version-history":[{"count":5,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/213\/revisions"}],"predecessor-version":[{"id":89011,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/213\/revisions\/89011"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=213"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
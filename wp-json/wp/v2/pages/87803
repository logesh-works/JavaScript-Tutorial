{"id":87803,"date":"2020-09-23T21:48:47","date_gmt":"2020-09-24T04:48:47","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=87803"},"modified":"2022-03-04T20:06:18","modified_gmt":"2022-03-05T04:06:18","slug":"javascript-cookies","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/","title":{"rendered":"JavaScript Cookies"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about HTTP cookies and how to use JavaScript to manage the cookies effectively.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">What is a cookie<\/h2>\n\n\n\n<p>An HTTP cookie is a piece of data that a server sends to a web browser. Then, the web browser stores the HTTP cookie on the user&#8217;s computer and sends it back to the same server in the later requests.<\/p>\n\n\n\n<p>An HTTP cookie is also known as a web cookie or browser cookie. And it is commonly called a cookie.<\/p>\n\n\n\n<p>For example, the header of an HTTP response may look like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">HTTP\/<span class=\"hljs-number\">1.1<\/span> <span class=\"hljs-number\">200<\/span> OK\nContent-type: text\/html\n<span class=\"hljs-built_in\">Set<\/span>-Cookie:username=admin\n...<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The HTTP response sets a cookie with the name of <code>\"username\"<\/code> and value of <code>\"admin\"<\/code>. The server encodes both name and value when sending the cookie to the web browser. <\/p>\n\n\n\n<p>The web browser stores this information and sends it back to the server via the Cookie HTTP header for the next request as follows:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">GET \/index.html HTTP\/1.1\nCookie: username=admin\n...<\/code><\/span><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Why cookies<\/h2>\n\n\n\n<p>It&#8217;s important to understand that <strong>HTTP is stateless<\/strong>. When you send two subsequent HTTP requests to the server, there is no link between them. In other words, the server cannot know if the two requests are from the same web browser.<\/p>\n\n\n\n<p>Therefore, a cookie is used to tell if the two requests came from the same web browser. <\/p>\n\n\n\n<p>In practice, cookies serve the following purposes:<\/p>\n\n\n\n<ul><li>Session management &#8211; cookies allow you to manage any information that the server should remember. For example, logins, shopping carts, etc.<\/li><li>Personalization &#8211; cookies allow you to store user preferences, themes, and setting specific to a user.<\/li><li>Tracking &#8211; cookies help record and analyze user behaviors in advertising.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Cookie details <\/h2>\n\n\n\n<p>A cookie consists of the following information stored by the web browser:<\/p>\n\n\n\n<ul><li>Name &#8211; a unique name that identifies the cookie. The cookie names are case-insensitive. It means that <code>Username<\/code> and <code>username<\/code> are the same cookies. <\/li><li>Value &#8211; string value of the cookie. It must be URL-encoded.<\/li><li>Domain &#8211; a domain for which the cookie is valid.<\/li><li>Path &#8211; path without the domain for which the cookie should be sent to the server. For example, you can specify that the cookie is accessible only from the <code>https:\/\/www.javascripttutorial.net\/dom\/<\/code> so pages at <code>https:\/\/www.javascripttutoiral.net\/<\/code> won&#8217;t send the cookie information. <\/li><li>Expiration &#8211; timestamp that indicates when the web browser should delete the cookie (or when the browser should stop sending the cookie to the server). The expiration date is set as a date in GMT format: <code>Wdy, DD-Mon-YYYY HH:MM:SS GMT<\/code>. The expiration date allows the cookies to be stored in the user&#8217;s web browsers even after users close the web browsers.<\/li><li>Secure flag &#8211; if specified, the web browser only sends the cookie to the server only via an SSL connection (<code>https<\/code>, not <code>http<\/code>)<\/li><\/ul>\n\n\n\n<p>The name, value, domain, path, expiration, and secure flag are separated by a semicolon and space. For example:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">HTTP\/1.1 200 OK\nContent-type: text\/html\nSet-Cookie:user=john\n; expire=Tue, 12-December-2030 12:10:00 GMT; domain=javascripttutorial.net; path=\/dom; secure\n...<\/code><\/span><\/pre>\n\n\n<p>Note that the <code>secure<\/code> flag is the only part that is not a name-value pair.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Cookies in JavaScript<\/h2>\n\n\n\n<p>To manage cookies in JavaScript, you use the <code>document.cookie<\/code> property.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Get a cookie value<\/h3>\n\n\n\n<p>The following example returns a string of all cookies available to the page:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> str = <span class=\"hljs-built_in\">document<\/span>.cookie;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>document.cookie<\/code> returns a series of name-value pairs separated by semicolons like this:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">name1=value1;name2=value2;...<\/code><\/span><\/pre>\n\n\n<p>The following example shows the cookies of a webpage:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\"><span class=\"hljs-string\">\"_ga=GA1.2.336374160.1600215156; dwf_sg_task_completion=False; _gid=GA1.2.33408724.1600901684\"<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Since all the names and values are URL-encoded, you need to use the <code>decodeURIComponent()<\/code> to decode them.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">2) Set a cookie<\/h3>\n\n\n\n<p>To set a value for a cookie, you compose the cookie text in the following format:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">name=value; expires=expirationTime; path=domainPath; domain=domainName; secure<\/code><\/span><\/pre>\n\n\n<p>&#8230;and append it to the cookie:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">document<\/span>.cookie = cookieText;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>A cookie requires only name and value. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">document<\/span>.cookie = <span class=\"hljs-string\">\"username=admin\"<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This example creates a cookie called <code>username<\/code> that has a value of <code>admin<\/code>. The web browser will send this cookie every time it makes a request to the server. <\/p>\n\n\n\n<p>Since the cookie doesn&#8217;t specify the expired time, it will be deleted when the web browser is closed.<\/p>\n\n\n\n<p>The cookie text <code>\"username=admin\"<\/code> doesn&#8217;t have any character that needs to be encoded. <\/p>\n\n\n\n<p>However, it&#8217;s a good practice to always use the <code>encodeURIComponent()<\/code> function when setting a cookie like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">document<\/span>.cookie = <span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-built_in\">encodeURIComponent<\/span>(<span class=\"hljs-string\">\"username\"<\/span>)}<\/span>=<span class=\"hljs-subst\">${<span class=\"hljs-built_in\">encodeURIComponent<\/span>(<span class=\"hljs-string\">\"admin\"<\/span>)}<\/span>`<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">3) Remove a cookie<\/h3>\n\n\n\n<p>To remove a cookie, you need to set the cookie again with the same name, path, domain, and secure option. And you need to set the expiration date to some time in the past.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript Cookie class<\/h2>\n\n\n\n<p>The following Cookie class sets, gets, and removes a cookie:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Cookie<\/span> <\/span>{\r\n  <span class=\"hljs-keyword\">static<\/span> <span class=\"hljs-keyword\">get<\/span>(name) {\r\n    <span class=\"hljs-keyword\">const<\/span> cookieName = <span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-built_in\">encodeURIComponent<\/span>(name)}<\/span>=`<\/span>;\r\n    <span class=\"hljs-keyword\">const<\/span> cookie = <span class=\"hljs-built_in\">document<\/span>.cookie;\r\n    <span class=\"hljs-keyword\">let<\/span> value = <span class=\"hljs-literal\">null<\/span>;\r\n\r\n    <span class=\"hljs-keyword\">const<\/span> startIndex = cookie.indexOf(cookieName);\r\n    <span class=\"hljs-keyword\">if<\/span> (startIndex &gt; <span class=\"hljs-number\">-1<\/span>) {\r\n      <span class=\"hljs-keyword\">const<\/span> endIndex = cookie.indexOf(<span class=\"hljs-string\">';'<\/span>, startIndex);\r\n      <span class=\"hljs-keyword\">if<\/span> (endIndex == <span class=\"hljs-number\">-1<\/span>) {\r\n        endIndex = cookie.length;\r\n      }\r\n      value = <span class=\"hljs-built_in\">decodeURIComponent<\/span>(\r\n        cookie.substring(startIndex + name.length, endIndex)\r\n      );\r\n    }\r\n    <span class=\"hljs-keyword\">return<\/span> value;\r\n  }\r\n\r\n  <span class=\"hljs-keyword\">static<\/span> <span class=\"hljs-keyword\">set<\/span>(name, value, expires, path, domain, secure) {\r\n    <span class=\"hljs-keyword\">let<\/span> cookieText = <span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-built_in\">encodeURIComponent<\/span>(name)}<\/span>=<span class=\"hljs-subst\">${<span class=\"hljs-built_in\">encodeURIComponent<\/span>(value)}<\/span>`<\/span>;\r\n    <span class=\"hljs-keyword\">if<\/span> (expires <span class=\"hljs-keyword\">instanceof<\/span> <span class=\"hljs-built_in\">Date<\/span>) {\r\n      cookieText += <span class=\"hljs-string\">`; expires=<span class=\"hljs-subst\">${expires.toGMTString()}<\/span>`<\/span>;\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">if<\/span> (path) cookieText += <span class=\"hljs-string\">`; path=<span class=\"hljs-subst\">${path}<\/span>`<\/span>;\r\n    <span class=\"hljs-keyword\">if<\/span> (domain) cookieText += <span class=\"hljs-string\">`; domain=<span class=\"hljs-subst\">${domain}<\/span>`<\/span>;\r\n    <span class=\"hljs-keyword\">if<\/span> (secure) cookieText += <span class=\"hljs-string\">`; secure`<\/span>;\r\n\r\n    <span class=\"hljs-built_in\">document<\/span>.cookie = cookieText;\r\n  }\r\n\r\n  <span class=\"hljs-keyword\">static<\/span> remove(name, path, domain, secure) {\r\n    Cookie.set(name, <span class=\"hljs-string\">''<\/span>, <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Date<\/span>(<span class=\"hljs-number\">0<\/span>), path, domain, secure);\r\n  }\r\n}\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<p>The <code>Cookie<\/code> class has three static methods: <code>get()<\/code>, <code>set()<\/code>, and <code>remove()<\/code>.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) The get() method<\/h3>\n\n\n\n<p>The <code>get()<\/code> method returns the value of a cookie with a specified name. To do so, it performs the following steps:<\/p>\n\n\n\n<ul><li>First, find the occurrence of the cookie name by an equal sign in the <code>document.cookie<\/code> property.<\/li><li>Second, if the cookie is available, it uses the <code>indexOf()<\/code> to find the end of the cookie, which is specified by the next semicolon (<code>;<\/code>) after that location. If the semicolon isn&#8217;t available, this means that the cookie is the last one in the string.<\/li><li>Third, decode the value of the cookie using the <code>decodeURIComponent()<\/code> function and return the decoded value.<\/li><\/ul>\n\n\n\n<h3 class=\"wp-block-heading\">2) The set() method<\/h3>\n\n\n\n<p>The <code>set()<\/code> method sets a cookie on the page. It accepts the arguments required to construct a cookie.<\/p>\n\n\n\n<p>The <code>set()<\/code> method requires the first two arguments: name and value. The other arguments aren&#8217;t mandatory.<\/p>\n\n\n\n<p>The <code>set()<\/code> method composes a cookie text and sets it to the <code>document.cookie<\/code> property.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">3) The remove() method <\/h3>\n\n\n\n<p>To remove a cookie, the <code>remove()<\/code> method sets the cookie again with the expiration date set to January 1, 1970. Note that the new <code>Date(0)<\/code> returns a date object whose date is January 1, 1970.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Using the Cookie class<\/h2>\n\n\n\n<p>The following shows how to use the Cookie class to set, get, and remove a cookie whose name is username and value is admin:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/\/ set a cookie<\/span>\nCookie.set(<span class=\"hljs-string\">'username'<\/span>, <span class=\"hljs-string\">'admin'<\/span>);\n\n<span class=\"hljs-comment\">\/\/ get a cookie<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(Cookie.get(<span class=\"hljs-string\">'username'<\/span>)); <span class=\"hljs-comment\">\/\/ admin<\/span>\n\n<span class=\"hljs-comment\">\/\/ remove a cookie by a name<\/span>\nCookie.remove(<span class=\"hljs-string\">'username'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">View cookies with web browsers<\/h2>\n\n\n\n<p>To view the cookies on the web browser, you use the devtools.<\/p>\n\n\n\n<ul><li>First, click the application tab.<\/li><li>Second, select <strong>Cookies <\/strong>node under the <strong>Storage<\/strong>.<\/li><\/ul>\n\n\n\n<p>The following picture shows the cookies of Google.com:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"984\" height=\"318\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Cookies.png\" alt=\"\" class=\"wp-image-87816\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Cookies.png 984w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Cookies-300x97.png 300w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Cookies-768x248.png 768w\" sizes=\"(max-width: 984px) 100vw, 984px\" \/><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>A cookie is a piece of data that a server sends to a web browser. The web browser then stores it in the user&#8217;s computer and sends the cookie back to the same server in the subsequent requests.<\/li><li>The server uses cookies for identifying if two successive requests came from the same web browser.<\/li><li>To manage cookies, you use the <code>document.cookie<\/code> object. To make it more efficient, you can use the Cookie utility class.<\/li><li>Use the <code>encodeURIComponent()<\/code> and <code>decodeURIComponent()<\/code> function to encode and decode the cookie values.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"87803\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/\"\n\t\t\t\tdata-post-title=\"JavaScript Cookies\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"87803\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/\"\n\t\t\t\tdata-post-title=\"JavaScript Cookies\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn about HTTP cookies and how to use JavaScript to manage the cookies effectively.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":87825,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>An Essential Guide to JavaScript Cookies<\/title>\n<meta name=\"description\" content=\"In this tutorial, you&#039;ll learn about the HTTP cookies and how to use JavaScript to manage the cookies more effectively.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"An Essential Guide to JavaScript Cookies\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you&#039;ll learn about the HTTP cookies and how to use JavaScript to manage the cookies more effectively.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-03-05T04:06:18+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Cookies.png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"6 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/\",\"name\":\"An Essential Guide to JavaScript Cookies\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-09-24T04:48:47+00:00\",\"dateModified\":\"2022-03-05T04:06:18+00:00\",\"description\":\"In this tutorial, you'll learn about the HTTP cookies and how to use JavaScript to manage the cookies more effectively.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Web API\",\"item\":\"https:\/\/www.javascripttutorial.net\/web-apis\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Cookies\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"An Essential Guide to JavaScript Cookies","description":"In this tutorial, you'll learn about the HTTP cookies and how to use JavaScript to manage the cookies more effectively.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/","og_locale":"en_US","og_type":"article","og_title":"An Essential Guide to JavaScript Cookies","og_description":"In this tutorial, you'll learn about the HTTP cookies and how to use JavaScript to manage the cookies more effectively.","og_url":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-03-05T04:06:18+00:00","og_image":[{"url":"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Cookies.png"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"6 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/","url":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/","name":"An Essential Guide to JavaScript Cookies","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-09-24T04:48:47+00:00","dateModified":"2022-03-05T04:06:18+00:00","description":"In this tutorial, you'll learn about the HTTP cookies and how to use JavaScript to manage the cookies more effectively.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-cookies\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"Web API","item":"https:\/\/www.javascripttutorial.net\/web-apis\/"},{"@type":"ListItem","position":3,"name":"JavaScript Cookies"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87803"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=87803"}],"version-history":[{"count":4,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87803\/revisions"}],"predecessor-version":[{"id":90170,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87803\/revisions\/90170"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87825"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=87803"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
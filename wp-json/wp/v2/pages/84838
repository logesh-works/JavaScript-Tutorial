{"id":84838,"date":"2019-12-29T03:08:32","date_gmt":"2019-12-29T11:08:32","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=84838"},"modified":"2022-01-22T00:19:33","modified_gmt":"2022-01-22T08:19:33","slug":"javascript-reflection","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/","title":{"rendered":"JavaScript Reflection"},"content":{"rendered":"<p><strong>Summary<\/strong>: in this tutorial, you will learn about the JavaScript reflection and Reflect API in ES6.<\/p>\r\n<h2>What is reflection<\/h2>\r\n<p>In computer programming, reflection is the ability of a program to manipulate <a href=\"https:\/\/www.javascripttutorial.net\/javascript-variables\/\">variables<\/a>, properties, and methods of <a href=\"https:\/\/www.javascripttutorial.net\/javascript-objects\/\">objects<\/a> at runtime.<\/p>\r\n<p>Prior to ES6, JavaScript already has reflection features even though they were not officially called that by the community or the specification. For example, methods like <code>Object.keys()<\/code>, <code>Object.getOwnPropertyDescriptor()<\/code>, and <code>Array.isArray()<\/code> are the classic reflection features.<\/p>\r\n<p>ES6 introduces a new global object called <code>Reflect<\/code> that allows you to call methods, construct objects, get and set properties, manipulate and extend properties.<\/p>\r\n<p>The <code>Reflect<\/code> API is important because it allows you to develop programs and frameworks that are able to handle dynamic code.<\/p>\r\n<h2>Reflect API<\/h2>\r\n<p>Unlike the most global objects, the <code>Reflect<\/code> is not a constructor. It means that you cannot use <code>Reflect<\/code> with the <code>new<\/code> operator or invoke the <code>Reflect<\/code> as a function.&nbsp; It is similar to the <code>Math<\/code> and <code>JSON<\/code> objects. All the methods of the <code>Reflect<\/code> object are static.<\/p>\r\n<ul>\r\n<li><code>Reflect.apply()<\/code> &#8211; call a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-function\/\">function<\/a> with specified arguments.<\/li>\r\n<li><code>Reflect.construct()<\/code> &#8211; act like the <code>new<\/code> operator, but as a function. It is equivalent to calling <code>new target(...args)<\/code>.<\/li>\r\n<li><code>Reflect.defineProperty()<\/code> &#8211; is similar to <code>Object.defineProperty()<\/code>, but return a Boolean value indicating whether or not the property was successfully defined on the object.<\/li>\r\n<li><code>Reflect.deleteProperty()<\/code> &#8211; behave like the <code>delete<\/code> operator, but as a function. It&#8217;s equivalent to calling the&nbsp; <code>delete objectName[propertyName]<\/code>.<\/li>\r\n<li><code>Reflect.get()<\/code> &#8211; return the value of a property.<\/li>\r\n<li><code>Reflect.getOwnPropertyDescriptor()<\/code> &#8211; is similar to <code>Object.getOwnPropertyDescriptor()<\/code>. It returns a property descriptor of a property if the property exists on the object, or <code>undefined<\/code> otherwise.<\/li>\r\n<li><code>Reflect.getPrototypeOf()<\/code> &#8211; is the same as <code>Object.getPrototypeOf()<\/code>.<\/li>\r\n<li><code>Reflect.has()<\/code> &#8211; work like the <code>in<\/code> operator, but as a function. It returns a boolean indicating whether an property (either owned or inherited) exists.<br>\r\n<code>Reflect.isExtensible()<\/code> &#8211; is the same as <code>Object.isExtensible()<\/code>.<\/li>\r\n<li><code>Reflect.ownKeys()<\/code> &#8211; return an array of the owned property keys (not inherited) of an object.<\/li>\r\n<li><code>Reflect.preventExtensions()<\/code> &#8211; is similar to <code>Object.preventExtensions()<\/code>. It returns a Boolean.<\/li>\r\n<li><code>Reflect.set()<\/code> &#8211; assign a value to a property and return a Boolean value which is true if the property is set successfully.<\/li>\r\n<li><code>Reflect.setPrototypeOf()<\/code> &#8211; set the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-prototype\/\">prototype<\/a> of an object.<\/li>\r\n<\/ul>\r\n<p>Let&#8217;s take some examples of using the Reflect API:<\/p>\r\n<h3>Creating objects: Reflect.construct()<\/h3>\r\n<p>The <code>Reflect.construct()<\/code> method behaves like the <code>new<\/code> operator, but as a function. It is equivalent to calling the <code>new target(...args)<\/code> with the possibility to specify a different prototype:<\/p>\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">Reflect<\/span><span class=\"hljs-selector-class\">.construct<\/span>(<span class=\"hljs-selector-tag\">target<\/span>, <span class=\"hljs-selector-tag\">args<\/span> <span class=\"hljs-selector-attr\">&#91;, newTarget]<\/span>)\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n<p>The <code>Reflect.construct()<\/code> returns the new instance of the <code>target<\/code>, or the <code>newTarget<\/code> if specified, initialized by the <code>target<\/code> as a constructor with the given array-like object args. See the following example:<\/p>\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Person<\/span> <\/span>{\r\n    <span class=\"hljs-keyword\">constructor<\/span>(firstName, lastName) {\r\n        <span class=\"hljs-keyword\">this<\/span>.firstName = firstName;\r\n        <span class=\"hljs-keyword\">this<\/span>.lastName = lastName;\r\n    }\r\n    <span class=\"hljs-keyword\">get<\/span> fullName() {\r\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this<\/span>.firstName}<\/span> <span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this<\/span>.lastName}<\/span>`<\/span>;\r\n    }\r\n};\r\n\r\n<span class=\"hljs-keyword\">let<\/span> args = &#91;<span class=\"hljs-string\">'John'<\/span>, <span class=\"hljs-string\">'Doe'<\/span>];\r\n\r\n<span class=\"hljs-keyword\">let<\/span> john = <span class=\"hljs-built_in\">Reflect<\/span>.construct(\r\n    Person,\r\n    args\r\n);\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(john <span class=\"hljs-keyword\">instanceof<\/span> Person);\r\n<span class=\"hljs-built_in\">console<\/span>.log(john.fullName); <span class=\"hljs-comment\">\/\/ John Doe<\/span>\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n<p>Output<\/p>\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-literal\">true<\/span>\r\nJohn Doe\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n<p>In this example:<\/p>\r\n<ul>\r\n<li>First, define a class called <code>Person<\/code>.<\/li>\r\n<li>Second, declare an <code>args<\/code> array that contains two strings.<\/li>\r\n<li>Third, create a new instance of the <code>Person<\/code> class using the <code>Reflect.construct()<\/code> method. The <code>john<\/code> object is an instance of the <code>Person<\/code> class so it has the <code>fullName<\/code> property.<\/li>\r\n<\/ul>\r\n<h3>Calling a function: <code>Reflect.apply()<\/code><\/h3>\r\n<p>Prior to ES6, you call a function with a specified <code>this<\/code> value and <code>arguments<\/code> by using the <code>Function.prototype.apply()<\/code> method. For example:<\/p>\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> result = <span class=\"hljs-built_in\">Function<\/span>.prototype.apply.call(<span class=\"hljs-built_in\">Math<\/span>.max, <span class=\"hljs-built_in\">Math<\/span>, &#91;<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span>]);\r\n<span class=\"hljs-built_in\">console<\/span>.log(result);\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n<p>Output:<\/p>\r\n\r\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">30\r\n<\/code><\/span><\/pre>\r\n\r\n<p>This syntax is quite verbose.<\/p>\r\n<p>The <code>Reflect.apply()<\/code> provides the same feature as the <code>Function.prototype.apply()<\/code> but less verbose and easier to understand:<\/p>\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> result = <span class=\"hljs-built_in\">Reflect<\/span>.apply(<span class=\"hljs-built_in\">Math<\/span>.max, <span class=\"hljs-built_in\">Math<\/span>, &#91;<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span>]);\r\n<span class=\"hljs-built_in\">console<\/span>.log(result);\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n<p>Here is the syntax of the <code>Reflect.apply()<\/code> method:<\/p>\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">Reflect<\/span>.apply(target, thisArg, args)\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n<h3>Defining a property: <code>Reflect.defineProperty()<\/code><\/h3>\r\n<p>The <code>Reflect.defineProperty()<\/code> is like the <code>Object.defineProperty()<\/code>. However, it returns a Boolean indicating whether or not the property was defined successfully instead of throwing an exception:<\/p>\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">Reflect<\/span>.defineProperty(target, propertyName, propertyDescriptor)\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n<p>See the following example:<\/p>\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {\r\n    <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'John Doe'<\/span>\r\n};\r\n\r\n<span class=\"hljs-keyword\">if<\/span> (<span class=\"hljs-built_in\">Reflect<\/span>.defineProperty(person, <span class=\"hljs-string\">'age'<\/span>, {\r\n        <span class=\"hljs-attr\">writable<\/span>: <span class=\"hljs-literal\">true<\/span>,\r\n        <span class=\"hljs-attr\">configurable<\/span>: <span class=\"hljs-literal\">true<\/span>,\r\n        <span class=\"hljs-attr\">enumerable<\/span>: <span class=\"hljs-literal\">false<\/span>,\r\n        <span class=\"hljs-attr\">value<\/span>: <span class=\"hljs-number\">25<\/span>,\r\n    })) {\r\n    <span class=\"hljs-built_in\">console<\/span>.log(person.age);\r\n} <span class=\"hljs-keyword\">else<\/span> {\r\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Cannot define the age property on the person object.'<\/span>);\r\n\r\n}\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n<p>In this tutorial, you have learned about the JavaScript reflection and the Reflect API that contains a number of reflective methods.<\/p><div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"84838\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/\"\n\t\t\t\tdata-post-title=\"JavaScript Reflection\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"84838\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/\"\n\t\t\t\tdata-post-title=\"JavaScript Reflection\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn about the JavaScript reflection and Reflect API in ES6.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":117,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Reflection and Reflect API in ES6 By Practical Examples<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn about the JavaScript reflection and Reflect API in ES6.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Reflection and Reflect API in ES6 By Practical Examples\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn about the JavaScript reflection and Reflect API in ES6.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-22T08:19:33+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/\",\"name\":\"JavaScript Reflection and Reflect API in ES6 By Practical Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2019-12-29T11:08:32+00:00\",\"dateModified\":\"2022-01-22T08:19:33+00:00\",\"description\":\"In this tutorial, you will learn about the JavaScript reflection and Reflect API in ES6.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Reflection\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Reflection and Reflect API in ES6 By Practical Examples","description":"In this tutorial, you will learn about the JavaScript reflection and Reflect API in ES6.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Reflection and Reflect API in ES6 By Practical Examples","og_description":"In this tutorial, you will learn about the JavaScript reflection and Reflect API in ES6.","og_url":"https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-01-22T08:19:33+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/","url":"https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/","name":"JavaScript Reflection and Reflect API in ES6 By Practical Examples","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2019-12-29T11:08:32+00:00","dateModified":"2022-01-22T08:19:33+00:00","description":"In this tutorial, you will learn about the JavaScript reflection and Reflect API in ES6.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/es6\/javascript-reflection\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript Reflection"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/84838"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=84838"}],"version-history":[{"count":1,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/84838\/revisions"}],"predecessor-version":[{"id":85900,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/84838\/revisions\/85900"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=84838"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
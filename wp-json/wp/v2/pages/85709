{"id":85709,"date":"2020-02-24T20:36:10","date_gmt":"2020-02-25T04:36:10","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=85709"},"modified":"2022-01-07T21:34:01","modified_gmt":"2022-01-08T05:34:01","slug":"javascript-form","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/","title":{"rendered":"JavaScript Form"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about JavaScript form API: accessing the form, getting values of the elements, validating form data, and submitting the form.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Form basics<\/h2>\n\n\n\n<p>To create a form in HTML, you use the <code>&lt;form&gt;<\/code> element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form<\/span> <span class=\"hljs-attr\">action<\/span>=<span class=\"hljs-string\">\"\/signup\"<\/span> <span class=\"hljs-attr\">method<\/span>=<span class=\"hljs-string\">\"post\"<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"signup\"<\/span>&gt;<\/span> \n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">form<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>&lt;form&gt;<\/code> element has two important attributes: <code>action<\/code> and <code>method<\/code>.<\/p>\n\n\n\n<ul><li>The <code>action<\/code> attribute specifies a URL that will process the form submission. In this example, the action is the <code>\/signup<\/code> URL.<\/li><li>The <code>method<\/code> attribute specifies the HTTP method to submit the form with. Usually, the method is either <code>post<\/code> or <code>get<\/code>.<\/li><\/ul>\n\n\n\n<p>Generally, you use the <code>get<\/code> method when you want to retrieve data from the server and the <code>post<\/code> method when you want to change data on the server.<\/p>\n\n\n\n<p>JavaScript uses the <code>HTMLFormElement<\/code> object to represent a form. The <code>HTMLFormElement<\/code> has the following properties that correspond to the HTML attributes:<\/p>\n\n\n\n<ul><li><code>action<\/code> &#8211; is the URL that processes the form data. It is equivalent to the <code>action<\/code> attribute of the <code>&lt;form&gt;<\/code> element.<\/li><li><code>method<\/code> &#8211; is the HTTP method which is equivalent to the <code>method<\/code> attribute of the <code>&lt;form&gt;<\/code> element.<\/li><\/ul>\n\n\n\n<p>The <code>HTMLFormElement<\/code> element also provides the following useful methods:<\/p>\n\n\n\n<ul><li><code>submit()<\/code> &#8211; submit the form.<\/li><li><code>reset()<\/code> &#8211; reset the form.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Referencing forms<\/h2>\n\n\n\n<p>To reference the <code>&lt;form&gt;<\/code> element, you can use DOM selecting methods such as <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-getelementbyid\/\">getElementById()<\/a><\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> form = <span class=\"hljs-built_in\">document<\/span>.getElementById(<span class=\"hljs-string\">'subscribe'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>An HTML document can have multiple forms. The <code>document.forms<\/code> property returns a collection of forms (<code>HTMLFormControlsCollection<\/code>) on the document:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">document<\/span>.forms<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To reference a form, you use an index. For example, the following statement returns the first form of the HTML document:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">document<\/span><span class=\"hljs-selector-class\">.forms<\/span><span class=\"hljs-selector-attr\">&#91;0]<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Submitting a form<\/h2>\n\n\n\n<p>Typically, a form has a submit button. When you click it, the browser sends the form data to the server. To create a submit button, you use <code>&lt;input><\/code> or <code>&lt;button><\/code> element with the type <code>submit<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input<\/span> <span class=\"hljs-attr\">type<\/span>=<span class=\"hljs-string\">\"submit\"<\/span> <span class=\"hljs-attr\">value<\/span>=<span class=\"hljs-string\">\"Subscribe\"<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Or<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button<\/span> <span class=\"hljs-attr\">type<\/span>=<span class=\"hljs-string\">\"submit\"<\/span>&gt;<\/span>Subscribe<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">button<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If the submit button has focus and you press the <code>Enter<\/code> key, the browser also submits the form data.<\/p>\n\n\n\n<p>When you submit the form, the <code>submit<\/code> event is fired before the request is sent to the server. This gives you a chance to validate the form data. If the form data is invalid, you can stop submitting the form.<\/p>\n\n\n\n<p>To attach an event listener to the <code>submit<\/code> event, you use the <code>addEventListener()<\/code> method of the form element as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> form  = <span class=\"hljs-built_in\">document<\/span>.getElementById(<span class=\"hljs-string\">'signup'<\/span>);\n\nform.addEventListener(<span class=\"hljs-string\">'submit'<\/span>, (event) =&gt; {\n    <span class=\"hljs-comment\">\/\/ handle the form data<\/span>\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To stop the form from being submitted, you call the <code>preventDefault()<\/code> method of the <code>event<\/code> object inside the <code>submit<\/code> event handler like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">form.addEventListener(<span class=\"hljs-string\">'submit'<\/span>, (event) =&gt; {\n    <span class=\"hljs-comment\">\/\/ stop form submission<\/span>\n    event.preventDefault();\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Typically, you call the <code>event.preventDefault()<\/code> method if the form data is invalid. To submit the form in JavaScript, you call the <code>submit()<\/code> method of the form object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">form<\/span><span class=\"hljs-selector-class\">.submit<\/span>();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Note that the <code>form.submit()<\/code> does not fire the <code>submit<\/code> event. Therefore, you should always <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form-validation\/\">validate the form<\/a> before calling this method.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Accessing form fields<\/h2>\n\n\n\n<p>To access form fields, you can use DOM methods like <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-getelementsbyname\/\">getElementsByName()<\/a><\/code>, <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-getelementbyid\/\">getElementById()<\/a><\/code>, <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-queryselector\/\">querySelector()<\/a><\/code>, etc.<\/p>\n\n\n\n<p>Also, you can use the <code>elements<\/code> property of the <code>form<\/code> object. The <code>form.elements<\/code> property stores a collection of the form elements.<\/p>\n\n\n\n<p>JavaScript allows you to access an element by index, id, or name. Suppose that you have the following signup form with two <code>&lt;input&gt;<\/code> elements:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form<\/span> <span class=\"hljs-attr\">action<\/span>=<span class=\"hljs-string\">\"signup.html\"<\/span> <span class=\"hljs-attr\">method<\/span>=<span class=\"hljs-string\">\"post\"<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"signup\"<\/span>&gt;<\/span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1<\/span>&gt;<\/span>Sign Up<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">h1<\/span>&gt;<\/span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"field\"<\/span>&gt;<\/span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label<\/span> <span class=\"hljs-attr\">for<\/span>=<span class=\"hljs-string\">\"name\"<\/span>&gt;<\/span>Name:<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">label<\/span>&gt;<\/span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input<\/span> <span class=\"hljs-attr\">type<\/span>=<span class=\"hljs-string\">\"text\"<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"name\"<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"name\"<\/span> <span class=\"hljs-attr\">placeholder<\/span>=<span class=\"hljs-string\">\"Enter your fullname\"<\/span> \/&gt;<\/span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">small<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">small<\/span>&gt;<\/span>\n\t<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"field\"<\/span>&gt;<\/span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label<\/span> <span class=\"hljs-attr\">for<\/span>=<span class=\"hljs-string\">\"email\"<\/span>&gt;<\/span>Email:<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">label<\/span>&gt;<\/span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input<\/span> <span class=\"hljs-attr\">type<\/span>=<span class=\"hljs-string\">\"text\"<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"email\"<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"email\"<\/span> <span class=\"hljs-attr\">placeholder<\/span>=<span class=\"hljs-string\">\"Enter your email address\"<\/span> \/&gt;<\/span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">small<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">small<\/span>&gt;<\/span>\n\t<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button<\/span> <span class=\"hljs-attr\">type<\/span>=<span class=\"hljs-string\">\"submit\"<\/span>&gt;<\/span>Subscribe<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">button<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">form<\/span>&gt;<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To access the elements of the form, you get the form element first:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> form = <span class=\"hljs-built_in\">document<\/span>.getElementById(<span class=\"hljs-string\">'signup'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>And use index, id, or name to access the element. The following accesses the first form element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">form.elements&#91;<span class=\"hljs-number\">0<\/span>]; <span class=\"hljs-comment\">\/\/ by index<\/span>\nform.elements&#91;<span class=\"hljs-string\">'name'<\/span>]; <span class=\"hljs-comment\">\/\/ by name<\/span>\nform.elements&#91;<span class=\"hljs-string\">'name'<\/span>]; <span class=\"hljs-comment\">\/\/ by id (name &amp; id are the same in this case)<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following accesses the second input element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">form.elements&#91;<span class=\"hljs-number\">1<\/span>]; <span class=\"hljs-comment\">\/\/ by index<\/span>\nform.elements&#91;<span class=\"hljs-string\">'email'<\/span>]; <span class=\"hljs-comment\">\/\/  by name<\/span>\nform.elements&#91;<span class=\"hljs-string\">'email'<\/span>]; <span class=\"hljs-comment\">\/\/ by id<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>After accessing a form field, you can use the <code>value<\/code> property to access its value, for example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> form = <span class=\"hljs-built_in\">document<\/span>.getElementById(<span class=\"hljs-string\">'signup'<\/span>);\n<span class=\"hljs-keyword\">const<\/span> name = form.elements&#91;<span class=\"hljs-string\">'name'<\/span>];\n<span class=\"hljs-keyword\">const<\/span> email = form.elements&#91;<span class=\"hljs-string\">'email'<\/span>];\n\n<span class=\"hljs-comment\">\/\/ getting the element's value<\/span>\n<span class=\"hljs-keyword\">let<\/span> fullName = name.value;\n<span class=\"hljs-keyword\">let<\/span> emailAddress = email.value;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Put it all together: signup form<\/h2>\n\n\n\n<p>The following illustrates the HTML document that has a signup form. <a href=\"https:\/\/https://jsprifix.netlify.app/\/sample\/dom\/form\/signup.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the live demo here<\/a>.<\/p>\n\n\n\n<div class=\"output\"><iframe loading=\"lazy\" src=\"https:\/\/https://jsprifix.netlify.app/\/sample\/dom\/form\/signup.html\" width=\"500px\" height=\"400px\"><\/iframe>\n<\/div>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span> <span class=\"hljs-attr\">lang<\/span>=<span class=\"hljs-string\">\"en\"<\/span>&gt;<\/span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>JavaScript Form Demo<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"viewport\"<\/span> <span class=\"hljs-attr\">content<\/span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"<\/span> \/&gt;<\/span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link<\/span> <span class=\"hljs-attr\">rel<\/span>=<span class=\"hljs-string\">\"stylesheet\"<\/span> <span class=\"hljs-attr\">href<\/span>=<span class=\"hljs-string\">\"css\/style.css\"<\/span> \/&gt;<\/span>\n\t<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"container\"<\/span>&gt;<\/span>\n\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form<\/span> <span class=\"hljs-attr\">action<\/span>=<span class=\"hljs-string\">\"signup.html\"<\/span> <span class=\"hljs-attr\">method<\/span>=<span class=\"hljs-string\">\"post\"<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"signup\"<\/span>&gt;<\/span>\n\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1<\/span>&gt;<\/span>Sign Up<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">h1<\/span>&gt;<\/span>\n\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"field\"<\/span>&gt;<\/span>\n\t\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label<\/span> <span class=\"hljs-attr\">for<\/span>=<span class=\"hljs-string\">\"name\"<\/span>&gt;<\/span>Name:<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">label<\/span>&gt;<\/span>\n\t\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input<\/span> <span class=\"hljs-attr\">type<\/span>=<span class=\"hljs-string\">\"text\"<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"name\"<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"name\"<\/span> <span class=\"hljs-attr\">placeholder<\/span>=<span class=\"hljs-string\">\"Enter your fullname\"<\/span> \/&gt;<\/span>\n\t\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">small<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">small<\/span>&gt;<\/span>\n\t\t\t\t<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"field\"<\/span>&gt;<\/span>\n\t\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label<\/span> <span class=\"hljs-attr\">for<\/span>=<span class=\"hljs-string\">\"email\"<\/span>&gt;<\/span>Email:<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">label<\/span>&gt;<\/span>\n\t\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input<\/span> <span class=\"hljs-attr\">type<\/span>=<span class=\"hljs-string\">\"text\"<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"email\"<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"email\"<\/span> <span class=\"hljs-attr\">placeholder<\/span>=<span class=\"hljs-string\">\"Enter your email address\"<\/span> \/&gt;<\/span>\n\t\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">small<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">small<\/span>&gt;<\/span>\n\t\t\t\t<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"field\"<\/span>&gt;<\/span>\n\t\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button<\/span> <span class=\"hljs-attr\">type<\/span>=<span class=\"hljs-string\">\"submit\"<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"full\"<\/span>&gt;<\/span>Subscribe<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">button<\/span>&gt;<\/span>\n\t\t\t\t<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n\t\t\t<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">form<\/span>&gt;<\/span>\n\t\t<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span> <span class=\"hljs-attr\">src<\/span>=<span class=\"hljs-string\">\"js\/app.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\n\t<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The HTML document references the <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/sample\/dom\/form\/css\/style.css\" target=\"_blank\" rel=\"noreferrer noopener\">style.css<\/a><\/code> and <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/sample\/dom\/form\/js\/app.js\" target=\"_blank\" rel=\"noreferrer noopener\">app.js<\/a><\/code> files. It uses the <code>&lt;small><\/code> element to display an error message in case the <code>&lt;input><\/code> element has invalid data.<\/p>\n\n\n\n<p>Submitting the form without providing any information will result in the following error:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2021\/07\/JavaScript-Form-Example.png\"><img decoding=\"async\" loading=\"lazy\" width=\"376\" height=\"339\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2021\/07\/JavaScript-Form-Example.png\" alt=\"\" class=\"wp-image-88530\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2021\/07\/JavaScript-Form-Example.png 376w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2021\/07\/JavaScript-Form-Example-300x270.png 300w\" sizes=\"(max-width: 376px) 100vw, 376px\" \/><\/a><\/figure><\/div>\n\n\n\n<p>Submitting the form with the name but invalid email address format will result in the following error:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2021\/07\/JavaScript-Form-validate-email-address.png\"><img decoding=\"async\" loading=\"lazy\" width=\"370\" height=\"319\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2021\/07\/JavaScript-Form-validate-email-address.png\" alt=\"\" class=\"wp-image-88529\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2021\/07\/JavaScript-Form-validate-email-address.png 370w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2021\/07\/JavaScript-Form-validate-email-address-300x259.png 300w\" sizes=\"(max-width: 370px) 100vw, 370px\" \/><\/a><\/figure><\/div>\n\n\n\n<p>The following shows the complete <code>app.js<\/code> file:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/\/ show a message with a type of the input<\/span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">showMessage<\/span>(<span class=\"hljs-params\">input, message, type<\/span>) <\/span>{\n\t<span class=\"hljs-comment\">\/\/ get the small element and set the message<\/span>\n\t<span class=\"hljs-keyword\">const<\/span> msg = input.parentNode.querySelector(<span class=\"hljs-string\">\"small\"<\/span>);\n\tmsg.innerText = message;\n\t<span class=\"hljs-comment\">\/\/ update the class for the input<\/span>\n\tinput.className = type ? <span class=\"hljs-string\">\"success\"<\/span> : <span class=\"hljs-string\">\"error\"<\/span>;\n\t<span class=\"hljs-keyword\">return<\/span> type;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">showError<\/span>(<span class=\"hljs-params\">input, message<\/span>) <\/span>{\n\t<span class=\"hljs-keyword\">return<\/span> showMessage(input, message, <span class=\"hljs-literal\">false<\/span>);\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">showSuccess<\/span>(<span class=\"hljs-params\">input<\/span>) <\/span>{\n\t<span class=\"hljs-keyword\">return<\/span> showMessage(input, <span class=\"hljs-string\">\"\"<\/span>, <span class=\"hljs-literal\">true<\/span>);\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">hasValue<\/span>(<span class=\"hljs-params\">input, message<\/span>) <\/span>{\n\t<span class=\"hljs-keyword\">if<\/span> (input.value.trim() === <span class=\"hljs-string\">\"\"<\/span>) {\n\t\t<span class=\"hljs-keyword\">return<\/span> showError(input, message);\n\t}\n\t<span class=\"hljs-keyword\">return<\/span> showSuccess(input);\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">validateEmail<\/span>(<span class=\"hljs-params\">input, requiredMsg, invalidMsg<\/span>) <\/span>{\n\t<span class=\"hljs-comment\">\/\/ check if the value is not empty<\/span>\n\t<span class=\"hljs-keyword\">if<\/span> (!hasValue(input, requiredMsg)) {\n\t\t<span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">false<\/span>;\n\t}\n\t<span class=\"hljs-comment\">\/\/ validate email format<\/span>\n\t<span class=\"hljs-keyword\">const<\/span> emailRegex =\n\t\t<span class=\"hljs-regexp\">\/^((&#91;^&lt;&gt;()\\&#91;\\]\\\\.,;:\\s@\"]+(\\.&#91;^&lt;&gt;()\\&#91;\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\&#91;&#91;0-9]{1,3}\\.&#91;0-9]{1,3}\\.&#91;0-9]{1,3}\\.&#91;0-9]{1,3}\\])|((&#91;a-zA-Z\\-0-9]+\\.)+&#91;a-zA-Z]{2,}))$\/<\/span>;\n\n\t<span class=\"hljs-keyword\">const<\/span> email = input.value.trim();\n\t<span class=\"hljs-keyword\">if<\/span> (!emailRegex.test(email)) {\n\t\t<span class=\"hljs-keyword\">return<\/span> showError(input, invalidMsg);\n\t}\n\t<span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">true<\/span>;\n}\n\n<span class=\"hljs-keyword\">const<\/span> form = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">\"#signup\"<\/span>);\n\n<span class=\"hljs-keyword\">const<\/span> NAME_REQUIRED = <span class=\"hljs-string\">\"Please enter your name\"<\/span>;\n<span class=\"hljs-keyword\">const<\/span> EMAIL_REQUIRED = <span class=\"hljs-string\">\"Please enter your email\"<\/span>;\n<span class=\"hljs-keyword\">const<\/span> EMAIL_INVALID = <span class=\"hljs-string\">\"Please enter a correct email address format\"<\/span>;\n\nform.addEventListener(<span class=\"hljs-string\">\"submit\"<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">event<\/span>) <\/span>{\n\t<span class=\"hljs-comment\">\/\/ stop form submission<\/span>\n\tevent.preventDefault();\n\n\t<span class=\"hljs-comment\">\/\/ validate the form<\/span>\n\t<span class=\"hljs-keyword\">let<\/span> nameValid = hasValue(form.elements&#91;<span class=\"hljs-string\">\"name\"<\/span>], NAME_REQUIRED);\n\t<span class=\"hljs-keyword\">let<\/span> emailValid = validateEmail(form.elements&#91;<span class=\"hljs-string\">\"email\"<\/span>], EMAIL_REQUIRED, EMAIL_INVALID);\n\t<span class=\"hljs-comment\">\/\/ if valid, submit the form.<\/span>\n\t<span class=\"hljs-keyword\">if<\/span> (nameValid &amp;&amp; emailValid) {\n\t\talert(<span class=\"hljs-string\">\"Demo only. No form was posted.\"<\/span>);\n\t}\n});\n\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">The showMessage() function<\/h3>\n\n\n\n<p>The <code>showMessage()<\/code> function accepts an input element, a message, and a type:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/\/ show a message with a type of the input<\/span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">showMessage<\/span>(<span class=\"hljs-params\">input, message, type<\/span>) <\/span>{\n\t<span class=\"hljs-comment\">\/\/ get the &lt;small&gt; element and set the message<\/span>\n\t<span class=\"hljs-keyword\">const<\/span> msg = input.parentNode.querySelector(<span class=\"hljs-string\">\"small\"<\/span>);\n\tmsg.innerText = message;\n\t<span class=\"hljs-comment\">\/\/ update the class for the input<\/span>\n\tinput.className = type ? <span class=\"hljs-string\">\"success\"<\/span> : <span class=\"hljs-string\">\"error\"<\/span>;\n\t<span class=\"hljs-keyword\">return<\/span> type;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following shows the name input field on the form:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-18\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"field\"<\/span>&gt;<\/span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label<\/span> <span class=\"hljs-attr\">for<\/span>=<span class=\"hljs-string\">\"name\"<\/span>&gt;<\/span>Name:<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">label<\/span>&gt;<\/span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input<\/span> <span class=\"hljs-attr\">type<\/span>=<span class=\"hljs-string\">\"text\"<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"name\"<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"name\"<\/span> <span class=\"hljs-attr\">placeholder<\/span>=<span class=\"hljs-string\">\"Enter your fullname\"<\/span> \/&gt;<\/span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">small<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">small<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-18\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If the name&#8217;s value is blank, you need to get its parent first which is the <code>&lt;div&gt;<\/code> with the class &#8220;field&#8221;.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-19\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">input<\/span><span class=\"hljs-selector-class\">.parentNode<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-19\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Next, you need to select the <code>&lt;small&gt;<\/code> element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-20\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> msg = input.parentNode.querySelector(<span class=\"hljs-string\">\"small\"<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-20\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Then, update the message:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">msg.innerText = message;<\/code><\/span><\/pre>\n\n\n<p>After that, we change the CSS class of the input field based on the value of the type parameter. If the type is true, we change the class of the input to success. Otherwise, we change the class to error.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-21\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">input.className = type ? <span class=\"hljs-string\">\"success\"<\/span> : <span class=\"hljs-string\">\"error\"<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-21\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Finally, return the value of the type:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-22\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">return<\/span> type;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-22\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">The showError() and showSuccess() functions<\/h3>\n\n\n\n<p>The the <code>showError()<\/code> and <code>showSuccess()<\/code> functions call the <code>showMessage()<\/code> function. The <code>showError()<\/code> function always returns <code>false<\/code> whereas the <code>showSuccess()<\/code> function always returns <code>true<\/code>. Also, the <code>showSuccess()<\/code> function sets the error message to an empty string.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-23\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">showError<\/span>(<span class=\"hljs-params\">input, message<\/span>) <\/span>{\n\t<span class=\"hljs-keyword\">return<\/span> showMessage(input, message, <span class=\"hljs-literal\">false<\/span>);\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">showSuccess<\/span>(<span class=\"hljs-params\">input<\/span>) <\/span>{\n\t<span class=\"hljs-keyword\">return<\/span> showMessage(input, <span class=\"hljs-string\">\"\"<\/span>, <span class=\"hljs-literal\">true<\/span>);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-23\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">The hasValue() function<\/h3>\n\n\n\n<p>The <code>hasValue()<\/code> function checks if an input element has a value or not and show an error message using the <code>showError()<\/code> or <code>showSuccess()<\/code> function accordingly:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-24\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">hasValue<\/span>(<span class=\"hljs-params\">input, message<\/span>) <\/span>{\n\t<span class=\"hljs-keyword\">if<\/span> (input.value.trim() === <span class=\"hljs-string\">\"\"<\/span>) {\n\t\t<span class=\"hljs-keyword\">return<\/span> showError(input, message);\n\t}\n\t<span class=\"hljs-keyword\">return<\/span> showSuccess(input);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-24\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">The validateEmail() function<\/h3>\n\n\n\n<p>The <code>validateEmail()<\/code> function validates if an email field contains a valid email address:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-25\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">validateEmail<\/span><span class=\"hljs-params\">(input, requiredMsg, invalidMsg)<\/span> <\/span>{\n\t<span class=\"hljs-comment\">\/\/ check if the value is not empty<\/span>\n\t<span class=\"hljs-keyword\">if<\/span> (!hasValue(input, requiredMsg)) {\n\t\t<span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">false<\/span>;\n\t}\n\t<span class=\"hljs-comment\">\/\/ validate email format<\/span>\n\t<span class=\"hljs-keyword\">const<\/span> emailRegex =\n\t\t\/^((&#91;^&lt;&gt;()\\&#91;\\]\\\\.,;:\\s@<span class=\"hljs-string\">\"]+(\\.&#91;^&lt;&gt;()\\&#91;\\]\\\\.,;:\\s@\"<\/span>]+)*)|(<span class=\"hljs-string\">\".+\"<\/span>))@((\\&#91;&#91;<span class=\"hljs-number\">0<\/span><span class=\"hljs-number\">-9<\/span>]{<span class=\"hljs-number\">1<\/span>,<span class=\"hljs-number\">3<\/span>}\\.&#91;<span class=\"hljs-number\">0<\/span><span class=\"hljs-number\">-9<\/span>]{<span class=\"hljs-number\">1<\/span>,<span class=\"hljs-number\">3<\/span>}\\.&#91;<span class=\"hljs-number\">0<\/span><span class=\"hljs-number\">-9<\/span>]{<span class=\"hljs-number\">1<\/span>,<span class=\"hljs-number\">3<\/span>}\\.&#91;<span class=\"hljs-number\">0<\/span><span class=\"hljs-number\">-9<\/span>]{<span class=\"hljs-number\">1<\/span>,<span class=\"hljs-number\">3<\/span>}\\])|((&#91;a-zA-Z\\<span class=\"hljs-number\">-0<\/span><span class=\"hljs-number\">-9<\/span>]+\\.)+&#91;a-zA-Z]{<span class=\"hljs-number\">2<\/span>,}))$\/;\n\n\t<span class=\"hljs-keyword\">const<\/span> email = input.value.trim();\n\t<span class=\"hljs-keyword\">if<\/span> (!emailRegex.test(email)) {\n\t\t<span class=\"hljs-keyword\">return<\/span> showError(input, invalidMsg);\n\t}\n\t<span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">true<\/span>;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-25\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>validateEmail()<\/code> function calls the <code>hasValue()<\/code> function to check if the field value is empty. If the input field is empty, it shows the <code>requiredMsg<\/code>.<\/p>\n\n\n\n<p>To validate the email, it uses a <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-regular-expression\/\">regular expression<\/a>. If the email is invalid, the <code>validateEmail()<\/code> function shows the <code>invalidMsg<\/code>.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">The submit event handler<\/h3>\n\n\n\n<p>First, select the signup form by its id using the <code>querySelector()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-26\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> form = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">\"#signup\"<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-26\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, define some constants to store the error messages:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-27\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> NAME_REQUIRED = <span class=\"hljs-string\">\"Please enter your name\"<\/span>;\n<span class=\"hljs-keyword\">const<\/span> EMAIL_REQUIRED = <span class=\"hljs-string\">\"Please enter your email\"<\/span>;\n<span class=\"hljs-keyword\">const<\/span> EMAIL_INVALID = <span class=\"hljs-string\">\"Please enter a correct email address format\"<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-27\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, add the <code>submit<\/code> event listener of the signup form using the <code>addEventListener()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-28\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">form.addEventListener(<span class=\"hljs-string\">\"submit\"<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">event<\/span>) <\/span>{\n\t<span class=\"hljs-comment\">\/\/ stop form submission<\/span>\n\tevent.preventDefault();\n\n\t<span class=\"hljs-comment\">\/\/ validate the form<\/span>\n\t<span class=\"hljs-keyword\">let<\/span> nameValid = hasValue(form.elements&#91;<span class=\"hljs-string\">\"name\"<\/span>], NAME_REQUIRED);\n\t<span class=\"hljs-keyword\">let<\/span> emailValid = validateEmail(form.elements&#91;<span class=\"hljs-string\">\"email\"<\/span>], EMAIL_REQUIRED, EMAIL_INVALID);\n\t<span class=\"hljs-comment\">\/\/ if valid, submit the form.<\/span>\n\t<span class=\"hljs-keyword\">if<\/span> (nameValid &amp;&amp; emailValid) {\n\t\talert(<span class=\"hljs-string\">\"Demo only. No form was posted.\"<\/span>);\n\t}\n});\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-28\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In the submit event handler:<\/p>\n\n\n\n<ol><li>Stop the form submission by calling the <code>event.preventDefault()<\/code> method.<\/li><li>Validate the name and email fields using the <code>hasValue()<\/code> and <code>validateEmail()<\/code> functions.<\/li><li>If both name and email are valid, show an alert. In a real-world application, you need to call the <code>form.submit()<\/code> method to submit the form.<\/li><\/ol>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Use the <code>&lt;form><\/code> element to create an HTML form.<\/li><li>Use DOM methods such as <code>getElementById()<\/code> and <code>querySelector()<\/code> to select a <code>&lt;form><\/code> element. The <code>document.forms[index]<\/code> also returns the form element by a numerical index.<\/li><li>Use <code>form.elements<\/code> to access form elements.<\/li><li>The <code>submit<\/code> event fires when users click the submit button on the form.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"85709\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/\"\n\t\t\t\tdata-post-title=\"JavaScript Form\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"85709\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/\"\n\t\t\t\tdata-post-title=\"JavaScript Form\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn about JavaScript form API: accessing the form, getting values of the elements, validating form data, and submitting the form.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":85107,"menu_order":50,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Form<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn about JavaScript form API: accessing the form, getting values of the elements, validating data, and submitting the form.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Form\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn about JavaScript form API: accessing the form, getting values of the elements, validating data, and submitting the form.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-08T05:34:01+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2021\/07\/JavaScript-Form-Example.png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"8 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/\",\"name\":\"JavaScript Form\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2020-02-25T04:36:10+00:00\",\"dateModified\":\"2022-01-08T05:34:01+00:00\",\"description\":\"In this tutorial, you will learn about JavaScript form API: accessing the form, getting values of the elements, validating data, and submitting the form.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript DOM\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Form\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Form","description":"In this tutorial, you will learn about JavaScript form API: accessing the form, getting values of the elements, validating data, and submitting the form.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Form","og_description":"In this tutorial, you will learn about JavaScript form API: accessing the form, getting values of the elements, validating data, and submitting the form.","og_url":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-01-08T05:34:01+00:00","og_image":[{"url":"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2021\/07\/JavaScript-Form-Example.png"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"8 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/","url":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/","name":"JavaScript Form","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2020-02-25T04:36:10+00:00","dateModified":"2022-01-08T05:34:01+00:00","description":"In this tutorial, you will learn about JavaScript form API: accessing the form, getting values of the elements, validating data, and submitting the form.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-form\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"JavaScript DOM","item":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/"},{"@type":"ListItem","position":3,"name":"JavaScript Form"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85709"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=85709"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85709\/revisions"}],"predecessor-version":[{"id":88712,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85709\/revisions\/88712"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85107"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=85709"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
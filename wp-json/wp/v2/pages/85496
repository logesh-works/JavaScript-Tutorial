{"id":85496,"date":"2020-02-07T07:57:18","date_gmt":"2020-02-07T15:57:18","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=85496"},"modified":"2020-04-23T18:47:11","modified_gmt":"2020-04-24T01:47:11","slug":"javascript-getcomputedstyle","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/","title":{"rendered":"JavaScript getComputedStyle"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the JavaScript <code>getComputedStyle()<\/code> to get the computed CSS properties of an element.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to JavaScript <code>getComputedStyle()<\/code> method<\/h2>\n\n\n\n<p>The <code>getComputedStyle()<\/code> is a method of the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-bom\/javascript-window\/\">window<\/a><\/code> object, which returns an object that contains the computed style an element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> style = <span class=\"hljs-built_in\">window<\/span>.getComputedStyle(element &#91;,pseudoElement]);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Parameters<\/h3>\n\n\n\n<p>The <code>getComputedStyle()<\/code> method accepts two arguments:<\/p>\n\n\n\n<ul><li><code>element<\/code> is the element that you want to return the computed styles. If you pass another node type e.g., Text node, the method will throw an error.<\/li><li><code>pseudoElement<\/code> specifies the pseudo-element to match. It defaults to <code>null<\/code>.<\/li><\/ul>\n\n\n\n<p>For example, if you want to get the computed value of all the CSS properties of a link with the hover state, you pass the following arguments to the <code>getComputedStyle()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> link = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'a'<\/span>);\n<span class=\"hljs-keyword\">let<\/span> style = getComputedStyle(link,<span class=\"hljs-string\">':hover'<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(style);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Note that <code>window<\/code> is the global object, therefore, you can omit it when calling get the <code>getComputedStyle()<\/code> method.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Return value<\/h3>\n\n\n\n<p>The <code>getComputedStyle()<\/code> method returns a live style object which is an instance of the <code>CSSStyleDeclaration<\/code> object. The style is automatically updated when the styles of the element are changed.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript <code>getComputedStyle()<\/code> examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the <code>getComputedStyle()<\/code> method.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Simple <code>getComputedStyle()<\/code> example<\/h3>\n\n\n\n<p>Consider the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span>&gt;<\/span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">charset<\/span>=<span class=\"hljs-string\">\"utf-8\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>JS getComputedStyle() Demo<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style<\/span> <span class=\"hljs-attr\">type<\/span>=<span class=\"hljs-string\">\"text\/css\"<\/span>&gt;<\/span><span class=\"css\">\n        <span class=\"hljs-selector-class\">.message<\/span> {\n            <span class=\"hljs-attribute\">background-color<\/span>: <span class=\"hljs-number\">#fff3d4<\/span>;\n            <span class=\"hljs-attribute\">border<\/span>: solid <span class=\"hljs-number\">1px<\/span> <span class=\"hljs-number\">#f6b73c<\/span>;\n            <span class=\"hljs-attribute\">padding<\/span>: <span class=\"hljs-number\">20px<\/span>;\n            <span class=\"hljs-attribute\">color<\/span>: black;\n        }\n    <\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">style<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"message\"<\/span> <span class=\"hljs-attr\">style<\/span>=<span class=\"hljs-string\">\"color:red\"<\/span>&gt;<\/span>\n        This is a JS getComputedStyle() Demo!\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">p<\/span>&gt;<\/span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span>&gt;<\/span><span class=\"javascript\">\n        <span class=\"hljs-keyword\">let<\/span> message = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'.message'<\/span>);\n        <span class=\"hljs-keyword\">let<\/span> style = getComputedStyle(message);\n\n        <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'color:'<\/span>, style.color);\n        <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'background color:'<\/span>, style.backgroundColor);\n    <\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Note that for the demonstration purpose, we mix all CSS and JavaScript with HTML. In practice, you should separate them in different files.<\/p>\n\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">color: rgb(255, 0, 0)\nbackground color: rgb(255, 243, 212)\n<\/code><\/span><\/pre>\n\n\n<p>How it works:<\/p>\n\n\n\n<ul><li>First, define CSS rules for the <code>message<\/code> class in the head section of the HTML file. The text color is black.<\/li><li>Second, declare a paragraph element whose text color is red as defined in the inline style. This rule will override the one defined in the head section.<\/li><li>Third, use the <code>getComputedStyle()<\/code> method to get all the computed style of the paragraph element. The color property is red as indicated in the Console window ( <code>rgb(255, 0, 0)<\/code>) as expected.<\/li><\/ul>\n\n\n\n<h3 class=\"wp-block-heading\">2) The <code>getComputedStyle()<\/code> for pseudo-elements example<\/h3>\n\n\n\n<p>The following example uses the <code>getComputedStyle()<\/code> method to pull style information from a pseudo-element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>JavaScript getComputedStyle() Demo<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style<\/span>&gt;<\/span><span class=\"css\">\n        <span class=\"hljs-selector-tag\">body<\/span> {\n            <span class=\"hljs-attribute\">font<\/span>: arial, sans-serif;\n            <span class=\"hljs-attribute\">font-size<\/span>: <span class=\"hljs-number\">1em<\/span>;\n            <span class=\"hljs-attribute\">line-height<\/span>: <span class=\"hljs-number\">1.6<\/span>;\n        }\n\n        <span class=\"hljs-selector-tag\">p<\/span><span class=\"hljs-selector-pseudo\">::first-letter<\/span> {\n            <span class=\"hljs-attribute\">font-size<\/span>: <span class=\"hljs-number\">1.5em<\/span>;\n            <span class=\"hljs-attribute\">font-weight<\/span>: normal\n        }\n    <\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">style<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">'main'<\/span>&gt;<\/span>JavaScript getComputedStyle() Demo for pseudo-elements<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">p<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span>&gt;<\/span><span class=\"javascript\">\n        <span class=\"hljs-keyword\">let<\/span> p = <span class=\"hljs-built_in\">document<\/span>.getElementById(<span class=\"hljs-string\">'main'<\/span>);\n        <span class=\"hljs-keyword\">let<\/span> style = getComputedStyle(p, <span class=\"hljs-string\">'::first-letter'<\/span>);\n        <span class=\"hljs-built_in\">console<\/span>.log(style.fontSize);\n    <\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">24px\n<\/code><\/span><\/pre>\n\n\n<p>How it works:<\/p>\n\n\n\n<ul><li>First, define CSS rules for the first letter of any paragraph element in the head section of the HTML file.<\/li><li>Then, use the <code>getComputedStyle()<\/code> method to pull the computed style of the pseudo-element. The font-size of the first letter of the paragraph with the id is 24px.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>The <code>getComputedStyle()<\/code> is a method of the <code>window<\/code> object.<\/li><li>The <code>getComputedStyle()<\/code> method returns an object that contains the computed style of an element.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"85496\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/\"\n\t\t\t\tdata-post-title=\"JavaScript getComputedStyle\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"85496\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/\"\n\t\t\t\tdata-post-title=\"JavaScript getComputedStyle\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the JavaScript getComputedStyle() to get the computed CSS properties of an element.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":85107,"menu_order":29,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript getComputedStyle(): Get Computed Style of an Element<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to use the JavaScript getComputedStyle() to get the computed CSS properties of an element.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript getComputedStyle(): Get Computed Style of an Element\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn how to use the JavaScript getComputedStyle() to get the computed CSS properties of an element.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2020-04-24T01:47:11+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/\",\"name\":\"JavaScript getComputedStyle(): Get Computed Style of an Element\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-02-07T15:57:18+00:00\",\"dateModified\":\"2020-04-24T01:47:11+00:00\",\"description\":\"In this tutorial, you will learn how to use the JavaScript getComputedStyle() to get the computed CSS properties of an element.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript DOM\",\"item\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript getComputedStyle\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript getComputedStyle(): Get Computed Style of an Element","description":"In this tutorial, you will learn how to use the JavaScript getComputedStyle() to get the computed CSS properties of an element.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript getComputedStyle(): Get Computed Style of an Element","og_description":"In this tutorial, you will learn how to use the JavaScript getComputedStyle() to get the computed CSS properties of an element.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/","og_site_name":"PriFix Tutorial","article_modified_time":"2020-04-24T01:47:11+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/","url":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/","name":"JavaScript getComputedStyle(): Get Computed Style of an Element","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-02-07T15:57:18+00:00","dateModified":"2020-04-24T01:47:11+00:00","description":"In this tutorial, you will learn how to use the JavaScript getComputedStyle() to get the computed CSS properties of an element.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-getcomputedstyle\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"JavaScript DOM","item":"https:\/\/www.javascripttutorial.net\/javascript-dom\/"},{"@type":"ListItem","position":3,"name":"JavaScript getComputedStyle"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85496"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=85496"}],"version-history":[{"count":1,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85496\/revisions"}],"predecessor-version":[{"id":86672,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85496\/revisions\/86672"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85107"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=85496"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
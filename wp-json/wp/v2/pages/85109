{"id":85109,"date":"2020-01-14T03:57:45","date_gmt":"2020-01-14T11:57:45","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=85109"},"modified":"2022-01-07T19:27:59","modified_gmt":"2022-01-08T03:27:59","slug":"document-object-model-in-javascript","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/","title":{"rendered":"Document Object Model in JavaScript"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about the Document Object Model in JavaScript.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">What is Document Object Model (DOM)<\/h2>\n\n\n\n<p>The Document Object Model (DOM) is an application programming interface (API) for manipulating HTML documents.<\/p>\n\n\n\n<p>The DOM represents an HTML document as a tree of nodes. The DOM provides functions that allow you to add, remove, and modify parts of the document effectively.<\/p>\n\n\n\n<p>Note that the DOM is cross-platform and language-independent ways of manipulating HTML and XML documents.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">A document as a hierarchy of nodes<\/h2>\n\n\n\n<p>The DOM represents an HTML document as a hierarchy of nodes. Consider the following HTML document:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>JavaScript DOM<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p<\/span>&gt;<\/span>Hello DOM!<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">p<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following tree represents the above HTML document:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" loading=\"lazy\" width=\"420\" height=\"421\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/JavaScript-DOM.png\" alt=\"JavaScript DOM\" class=\"wp-image-85110\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/JavaScript-DOM.png 420w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/JavaScript-DOM-300x300.png 300w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/JavaScript-DOM-150x150.png 150w\" sizes=\"(max-width: 420px) 100vw, 420px\" \/><\/figure>\n\n\n\n<p>In this DOM tree, the document is the root node. The root node has one child node which is the <code>&lt;html><\/code> element. The <code>&lt;html><\/code>\u00a0element is called the <em>document element<\/em>.<\/p>\n\n\n\n<p>Each document can have only one <code>document<\/code> element. In an HTML document, the <code>document<\/code> element is the <code>&lt;html><\/code> element. Each markup can be represented by a node in the tree.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Node Types<\/h3>\n\n\n\n<p>Each node in the DOM tree is identified by a node type. JavaScript uses integer numbers to determine the node types. The following table illustrates the node type constants:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th>Constant<\/th><th>Value<\/th><th>Description<\/th><\/tr><\/thead><tbody><tr><td><code>Node.ELEMENT_NODE<\/code><\/td><td><code>1<\/code><\/td><td>An <code>Element<\/code> node like <code>&lt;p&gt;<\/code> or <code>&lt;div&gt;<\/code>.<\/td><\/tr><tr><td><code>Node.TEXT_NODE<\/code><\/td><td><code>3<\/code><\/td><td>The actual <code>Text<\/code> inside an <code>Element<\/code> or <code>Attr<\/code>.<\/td><\/tr><tr><td><code>Node.CDATA_SECTION_NODE<\/code><\/td><td><code>4<\/code><\/td><td>A <code>CDATASection<\/code>, such as <code>&lt;!CDATA[[ \u2026 ]]&gt;<\/code>.<\/td><\/tr><tr><td><code>Node.PROCESSING_INSTRUCTION_NODE<\/code><\/td><td><code>7<\/code><\/td><td>A <code>ProcessingInstruction<\/code> of an XML document, such as <code>&lt;?xml-stylesheet \u2026 ?&gt;<\/code>.<\/td><\/tr><tr><td><code>Node.COMMENT_NODE<\/code><\/td><td><code>8<\/code><\/td><td>A <code>Comment<\/code> node, such as <code>&lt;!-- \u2026 --&gt;<\/code>.<\/td><\/tr><tr><td><code>Node.DOCUMENT_NODE<\/code><\/td><td><code>9<\/code><\/td><td>A <code>Document<\/code> node.<\/td><\/tr><tr><td><code>Node.DOCUMENT_TYPE_NODE<\/code><\/td><td><code>10<\/code><\/td><td>A <code>DocumentType<\/code> node, such as <code>&lt;!DOCTYPE html&gt;<\/code>.<\/td><\/tr><tr><td><code>Node.DOCUMENT_FRAGMENT_NODE<\/code><\/td><td><code>11<\/code><\/td><td>A <code>DocumentFragment<\/code> node.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p>To get the type of node, you use the <code>nodeType<\/code> property:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">node<\/span><span class=\"hljs-selector-class\">.nodeType<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>You can compare the <code>nodeType<\/code> property with the above constants to determine the node type. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">if<\/span> (node.nodeType == Node.ELEMENT_NODE) {\n    <span class=\"hljs-comment\">\/\/ node is the element node<\/span>\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">The <code>nodeName<\/code> and <code>nodeValue<\/code> properties<\/h3>\n\n\n\n<p>A node has two important properties: <code>nodeName<\/code> and <code>nodeValue<\/code> that provide specific information about the node.<\/p>\n\n\n\n<p>The values of these properties depend on the node type. For example, if the node type is the element node, the <code>nodeName<\/code> is always the same as the element&#8217;s tag name and <code>nodeValue<\/code> is always <code>null<\/code>.<\/p>\n\n\n\n<p>For this reason, it&#8217;s better to test node type before using these properties:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">if<\/span> (node.nodeType == Node.ELEMENT_NODE) {\n    <span class=\"hljs-keyword\">let<\/span> name = node.nodeName; <span class=\"hljs-comment\">\/\/ tag name like &lt;p&gt;<\/span>\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Node and Element<\/h3>\n\n\n\n<p>Sometimes it&#8217;s easy to confuse between the <code>Node<\/code> and the <code>Element<\/code>.<\/p>\n\n\n\n<p>A node is a generic name of any object in the DOM tree. It can be any built-in DOM element such as the document. Or it can be any HTML tag specified in the HTML document like <code>&lt;div&gt;<\/code> or <code>&lt;p&gt;<\/code>.&nbsp;<\/p>\n\n\n\n<p>An element is a node with a specific node type <code>Node.ELEMENT_NODE<\/code>, which is equal to 1.<\/p>\n\n\n\n<p>In other words, the node is the generic type of element. The element is a specific type of the node with the node type <code>Node.ELEMENT_NODE<\/code>.<\/p>\n\n\n\n<p>The following picture illustrates the relationship between the <code>Node<\/code> and <code>Element<\/code> types:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" loading=\"lazy\" width=\"488\" height=\"386\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/Document-Object-Model-in-JavaScript.png\" alt=\"Document Object Model in JavaScript\" class=\"wp-image-85165\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/Document-Object-Model-in-JavaScript.png 488w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/Document-Object-Model-in-JavaScript-300x237.png 300w\" sizes=\"(max-width: 488px) 100vw, 488px\" \/><\/figure>\n\n\n\n<p>Note that the <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-getelementbyid\/\">getElementById()<\/a><\/code> and <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-queryselector\/\">querySelector()<\/a><\/code> returns an object with the <code>Element<\/code> type while <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-getelementsbytagname\/\">getElementsByTagName()<\/a><\/code> or <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-queryselector\/\"><code>querySelectorAll()<\/code><\/a> returns <code>NodeList<\/code> which is a collection of nodes.&nbsp;<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Node Relationships<\/h3>\n\n\n\n<p>Any node has relationships to other nodes in the DOM tree. The relationships are the same as the ones described in a traditional family tree.<\/p>\n\n\n\n<p>For example, <code>&lt;body&gt;<\/code> is a <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-get-child-element\/\">child node<\/a> of the <code>&lt;html&gt;<\/code> node, and <code>&lt;html&gt;<\/code> is the <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-get-parent-element-parentnode\/\">parent<\/a> of the <code>&lt;body&gt;<\/code> node.<\/p>\n\n\n\n<p>The <code>&lt;body&gt;<\/code> node is the <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-siblings\/\">sibling<\/a> of the <code>&lt;head&gt;<\/code> node because they share the same immediate parent, which is the <code>&lt;html&gt;<\/code> element.<\/p>\n\n\n\n<p>The following picture illustrates the relationships between nodes:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" loading=\"lazy\" width=\"522\" height=\"358\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/JavaScript-DOM-Node-Relationships.png\" alt=\"JavaScript DOM Node Relationships\" class=\"wp-image-85166\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/JavaScript-DOM-Node-Relationships.png 522w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/JavaScript-DOM-Node-Relationships-300x206.png 300w\" sizes=\"(max-width: 522px) 100vw, 522px\" \/><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>An HTML or XML document can be represented as a tree of nodes, like a traditional family tree.<\/li><li>Each markup can be represented as a node with a specific node type.<\/li><li>Element is a specific type of node with the node type <code>Node.ELEMENT_NODE<\/code>.<\/li><li>In the DOM tree, a node has relationships with other nodes.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"85109\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/\"\n\t\t\t\tdata-post-title=\"Document Object Model in JavaScript\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"85109\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/\"\n\t\t\t\tdata-post-title=\"Document Object Model in JavaScript\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn about the Document Object Model in JavaScript that represents an HTML or XML document as a tree of nodes.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":85107,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Understanding Document Object Model in JavaScript<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn about the Document Object Model in JavaScript that represents an HTML or XML document as a tree of nodes.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Understanding Document Object Model in JavaScript\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn about the Document Object Model in JavaScript that represents an HTML or XML document as a tree of nodes.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-08T03:27:59+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/JavaScript-DOM.png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/\",\"name\":\"Understanding Document Object Model in JavaScript\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2020-01-14T11:57:45+00:00\",\"dateModified\":\"2022-01-08T03:27:59+00:00\",\"description\":\"In this tutorial, you will learn about the Document Object Model in JavaScript that represents an HTML or XML document as a tree of nodes.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript DOM\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Document Object Model in JavaScript\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Understanding Document Object Model in JavaScript","description":"In this tutorial, you will learn about the Document Object Model in JavaScript that represents an HTML or XML document as a tree of nodes.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/","og_locale":"en_US","og_type":"article","og_title":"Understanding Document Object Model in JavaScript","og_description":"In this tutorial, you will learn about the Document Object Model in JavaScript that represents an HTML or XML document as a tree of nodes.","og_url":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-01-08T03:27:59+00:00","og_image":[{"url":"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/JavaScript-DOM.png"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/","url":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/","name":"Understanding Document Object Model in JavaScript","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2020-01-14T11:57:45+00:00","dateModified":"2022-01-08T03:27:59+00:00","description":"In this tutorial, you will learn about the Document Object Model in JavaScript that represents an HTML or XML document as a tree of nodes.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/document-object-model-in-javascript\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"JavaScript DOM","item":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/"},{"@type":"ListItem","position":3,"name":"Document Object Model in JavaScript"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85109"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=85109"}],"version-history":[{"count":4,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85109\/revisions"}],"predecessor-version":[{"id":88689,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85109\/revisions\/88689"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85107"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=85109"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
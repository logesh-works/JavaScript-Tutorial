{"id":87836,"date":"2020-09-24T04:58:30","date_gmt":"2020-09-24T11:58:30","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=87836"},"modified":"2022-08-18T17:43:08","modified_gmt":"2022-08-19T00:43:08","slug":"javascript-localstorage","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/","title":{"rendered":"JavaScript localStorage"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the <code>Storage<\/code> type and how to use the JavaScript <code>localStorage<\/code> to store persistent data.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the <code>Storage<\/code> type<\/h2>\n\n\n\n<p>The <code>Storage<\/code> type is designed to store name-value pairs. The <code>Storage<\/code> type is an <code>Object<\/code> with the following additional methods:<\/p>\n\n\n\n<ul><li><code>setItem(name, value)<\/code> &#8211; set the value for a name<\/li><li><code>removeItem(name)<\/code> &#8211; remove the name-value pair identified by name.<\/li><li><code>getItem(name)<\/code> &#8211; get the value for a given name.<\/li><li><code>key(index)<\/code> &#8211; get the name of the value in the given numeric position.<\/li><li><code>clear()<\/code> &#8211; remove all values.<\/li><\/ul>\n\n\n\n<p>To get the number of name-value pairs in a <code>Storage<\/code> object, you can use the <code>length<\/code> property.<\/p>\n\n\n\n<p>The <code>Storage<\/code> object can store only strings. It&#8217;ll automatically convert non-string data into a string before storing it.<\/p>\n\n\n\n<p>When you retrieve data from a <code>Storage<\/code> object, you&#8217;ll always get the string data.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">The JavaScript localStorage object<\/h2>\n\n\n\n<p>HTML5 specification introduces the <code>localStorage<\/code> as a way to store data with no expiration date in web browsers. <\/p>\n\n\n\n<p>In other words, the data stored in the browsers will persist even after you close the browser windows.<\/p>\n\n\n\n<p>The data stored in the <code>localStorage<\/code> is bound to an origin. It means that the <code>localStorage<\/code> is unique per <code>protocol:\/\/host:port<\/code>.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">localStorage vs. cookies<\/h3>\n\n\n\n<p>First, the data stored in the <code>localStorage<\/code> isn&#8217;t sent to the server in every request like <a href=\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-cookies\/\">cookies<\/a>. For this reason, you can store more data in the <code>localStorage<\/code>.<\/p>\n\n\n\n<p>Most modern web browsers allow you to store up to 5MB of data in the <code>localStorage<\/code>. Note that you can store up to 4KB in cookies.<\/p>\n\n\n\n<p>Second, the data stored in the <code>localStorage<\/code> can be managed by the client, specifically JavaScript in the web browser. It cannot be accessible by the servers. <\/p>\n\n\n\n<p>However, cookies can be managed by both JavaScript in web browsers and servers.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Accessing the localStorage<\/h3>\n\n\n\n<p>You can access the <code>localStorage<\/code> via the property of the <code>window<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">window<\/span>.localStorage<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Since the <code>localStorage<\/code> is an instance of the <code>Storage<\/code> type, you can invoke the methods of the <code>Storage<\/code> type to manage data.<\/p>\n\n\n\n<p>When you type the following code in the Console:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">window<\/span>.localStorage<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>&#8230; you&#8217;ll see the following object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">Storage<\/span>\u00a0{<span class=\"hljs-attribute\">length<\/span>: <span class=\"hljs-number\">0<\/span>}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">1) The setItem() method<\/h3>\n\n\n\n<p>The following uses the <code>setItem()<\/code> method to store a name-value pair in the <code>localStorage<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">window<\/span>.localStorage.setItem(<span class=\"hljs-string\">'theme'<\/span>,<span class=\"hljs-string\">'dark'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">2) The length property<\/h3>\n\n\n\n<p>To get the number of name-value pairs, you use the <code>length<\/code> property like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-built_in\">window<\/span>.localStorage.length); <span class=\"hljs-comment\">\/\/ 1<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Since the <code>window<\/code> object is <a href=\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-globalthis\/\">global<\/a>, you don&#8217;t need to explicitly specify it. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(localStorage.length); <span class=\"hljs-comment\">\/\/ 1<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">3) The getItem() method<\/h3>\n\n\n\n<p>To get the value by a key, you use the <code>getItem()<\/code> method. The following example uses the <code>getItem()<\/code> method to get the value of <code>theme<\/code> key:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">localStorage.getItem(<span class=\"hljs-string\">'theme'<\/span>); <span class=\"hljs-comment\">\/\/ 'dark'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">4) The removeItem() method<\/h3>\n\n\n\n<p>To remove a name-value pair by a key, you use the <code>removeItem()<\/code> method. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">localStorage.removeItem(<span class=\"hljs-string\">'theme'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">5) Loop over keys of the localStorage object<\/h3>\n\n\n\n<p>The following stores three name-value pairs to the <code>localStorage<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">localStorage.setItem(<span class=\"hljs-string\">'theme'<\/span>,<span class=\"hljs-string\">'light'<\/span>);\nlocalStorage.setItem(<span class=\"hljs-string\">'backgroundColor'<\/span>,<span class=\"hljs-string\">'white'<\/span>);\nlocalStorage.setItem(<span class=\"hljs-string\">'color'<\/span>,<span class=\"hljs-string\">'#111'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To iterate over name-value pairs stored in the <code>localStorage<\/code>, you use the  <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/object\/iterate-object-in-javascript\/\">Object.keys()<\/a><\/code> method with <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/\">for...of<\/a><\/code> loop:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> keys = <span class=\"hljs-built_in\">Object<\/span>.keys(localStorage);\n<span class=\"hljs-keyword\">for<\/span>(<span class=\"hljs-keyword\">let<\/span> key <span class=\"hljs-keyword\">of<\/span> keys) {\n  <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${key}<\/span>: <span class=\"hljs-subst\">${localStorage.getItem(key)}<\/span>`<\/span>);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p> Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"HTTP\" data-shcb-language-slug=\"http\"><span><code class=\"hljs language-http\"><span class=\"hljs-attribute\">color<\/span>: #111\n<span class=\"hljs-attribute\">theme<\/span>: light\n<span class=\"hljs-attribute\">backgroundColor<\/span>: white<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTTP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">http<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Storing objects<\/h2>\n\n\n\n<p>The <code>Storage<\/code> type stores only string data. To store objects, you need to convert them into strings using the <code>JSON.stringify()<\/code> method. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> settings = {\n    <span class=\"hljs-attr\">backgroundColor<\/span>: <span class=\"hljs-string\">'#fff'<\/span>,\n    <span class=\"hljs-attr\">color<\/span>: <span class=\"hljs-string\">'#111'<\/span>,\n    <span class=\"hljs-attr\">theme<\/span>: <span class=\"hljs-string\">'light'<\/span>\n};\n\nlocalStorage.setItem(<span class=\"hljs-string\">'settings'<\/span>, <span class=\"hljs-built_in\">JSON<\/span>.stringify(settings));\n\n<span class=\"hljs-built_in\">console<\/span>.log(localStorage.getItem(<span class=\"hljs-string\">'settings'<\/span>));<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output: (a string)<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-string\">'{\"backgroundColor\":\"#fff\",\"color\":\"#111\",\"theme\":\"light\"}'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following retrieves the value from the <code>localStorage<\/code> and converts it back to the object using the <code>JSON.parse()<\/code> method.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> storedSettings = <span class=\"hljs-built_in\">JSON<\/span>.parse(localStorage.getItem(<span class=\"hljs-string\">'settings'<\/span>));\n<span class=\"hljs-built_in\">console<\/span>.log(storedSettings);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">The storage event<\/h2>\n\n\n\n<p>When you make a change to the <code>Storage<\/code> object, the <code>storage<\/code> event is fired on the document.<\/p>\n\n\n\n<p>The <code>storage<\/code> event occurs in the following scenarios:<\/p>\n\n\n\n<ul><li>Store a name-value pair by calling the <code>setItem()<\/code> method.<\/li><li>Remove a name-value pair by calling the <code>removeItem()<\/code> method.<\/li><li>And remove all values by calling the <code>clear()<\/code> method.<\/li><\/ul>\n\n\n\n<p>The <code>storage<\/code> event has the following properties:<\/p>\n\n\n\n<ul><li><code>domain<\/code> &#8211; the domain which the storage changes for.<\/li><li><code>key<\/code> &#8211; the key that was set or removed.<\/li><li><code>newValue<\/code> &#8211; the value that the key was set to or <code>null<\/code> if the key was removed.<\/li><li><code>oldValue<\/code> &#8211; the value before the key was set or removed.<\/li><\/ul>\n\n\n\n<p>To listen for the <code>storage<\/code> event, you use the <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/dom\/events\/add-an-event-handler\/\">addEventListener()<\/a><\/code> method of  the <code>window<\/code> object like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">addEventListener(<span class=\"hljs-string\">'storage'<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>(<span class=\"hljs-params\">e<\/span>)<\/span>{\n   <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">`The value of the <span class=\"hljs-subst\">${e.key}<\/span> changed for the <span class=\"hljs-subst\">${e.domain}<\/span>.`<\/span>);\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>The <code>Storage<\/code> type provides you with the methods for storing and managing data in web browsers.<\/li><li>The <code>localStorage<\/code> is an instance of the <code>Storage<\/code> type that allows you to store persistent data in the web browsers.<\/li><li>The <code>localStorage<\/code> can store only strings. To store objects, you convert them to strings using the <code>JSON.stringify()<\/code> method. And you convert the strings into objects when you retrieve them from the <code>localStorage<\/code> using the <code>JSON.parse()<\/code> method.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"87836\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/\"\n\t\t\t\tdata-post-title=\"JavaScript localStorage\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"87836\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/\"\n\t\t\t\tdata-post-title=\"JavaScript localStorage\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn about the Storage type and how to use the JavaScript localStorage to store persistent data. Introduction to the Storage type The Storage type is designed to store name-value pairs. The Storage type is an Object with the following additional methods: setItem(name, value) &#8211; set the value for a name [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":87825,"menu_order":1,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript localStorage<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript localStorage\" \/>\n<meta property=\"og:description\" content=\"Summary: in this tutorial, you&#8217;ll learn about the Storage type and how to use the JavaScript localStorage to store persistent data. Introduction to the Storage type The Storage type is designed to store name-value pairs. The Storage type is an Object with the following additional methods: setItem(name, value) &#8211; set the value for a name [&hellip;]\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-08-19T00:43:08+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/\",\"name\":\"JavaScript localStorage\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2020-09-24T11:58:30+00:00\",\"dateModified\":\"2022-08-19T00:43:08+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Web API\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript localStorage\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript localStorage","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript localStorage","og_description":"Summary: in this tutorial, you&#8217;ll learn about the Storage type and how to use the JavaScript localStorage to store persistent data. Introduction to the Storage type The Storage type is designed to store name-value pairs. The Storage type is an Object with the following additional methods: setItem(name, value) &#8211; set the value for a name [&hellip;]","og_url":"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-08-19T00:43:08+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/","url":"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/","name":"JavaScript localStorage","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2020-09-24T11:58:30+00:00","dateModified":"2022-08-19T00:43:08+00:00","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"Web API","item":"https:\/\/https://jsprifix.netlify.app/\/web-apis\/"},{"@type":"ListItem","position":3,"name":"JavaScript localStorage"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/87836"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=87836"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/87836\/revisions"}],"predecessor-version":[{"id":90336,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/87836\/revisions\/90336"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/87825"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=87836"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
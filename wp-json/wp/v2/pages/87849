{"id":87849,"date":"2020-09-24T22:49:28","date_gmt":"2020-09-25T05:49:28","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=87849"},"modified":"2020-09-25T08:15:14","modified_gmt":"2020-09-25T15:15:14","slug":"javascript-sessionstorage","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/","title":{"rendered":"JavaScript sessionStorage"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the JavaScript <code>sessionStorage<\/code> to store data only for a session.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to JavaScript sessionStorage<\/h2>\n\n\n\n<p>The <code>sessionStorage<\/code> object stores data only for a session. It means that the data stored in the <code>sessionStorage<\/code> will be deleted when the browser is closed.<\/p>\n\n\n\n<p>A page session lasts as long as the web browser is open and survives over the page refresh.<\/p>\n\n\n\n<p>When you open a page in a new tab or window, the web browser creates a new session. <\/p>\n\n\n\n<p>If you open multiple tabs or windows with the same URL, the web browser creates a separate <code>sessionStorage<\/code> for each tab or window.  So data stored in one web browser tab cannot be accessible in another tab.<\/p>\n\n\n\n<p>When you close a tab or window, the web browser ends the session and clears data in the <code>sessionStorage<\/code>.<\/p>\n\n\n\n<p>Data stored in the <code>sessionStorage<\/code> is specific to the protocol of the page. For example, the same site <code>javascripttutorial.net<\/code> has different <code>sessionStorage<\/code> when accessing with the <code>http<\/code> and <code>https<\/code>.<\/p>\n\n\n\n<p>Since the <code>sessionStorage<\/code> data is tied to a server session, it&#8217;s only available when a page is requested from a server. The <code>sessionStorage<\/code> isn&#8217;t available when the page runs locally without a server.<\/p>\n\n\n\n<p>Because the <code>sessionStorage<\/code> is an instance of the <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-localstorage\/\">Storage<\/a><\/code> type, you can manage data using the Storage&#8217;s methods:<\/p>\n\n\n\n<ul><li><code>setItem(name, value)<\/code>&nbsp;\u2013 set the value for a name<\/li><li><code>removeItem(name)<\/code>&nbsp;\u2013 remove the name-value pair identified by name.<\/li><li><code>getItem(name)<\/code>&nbsp;\u2013 get the value for a given name.<\/li><li><code>key(index)<\/code>&nbsp;\u2013 get the name of the value in the given numeric position.<\/li><li><code>clear()<\/code>&nbsp;\u2013 remove all values in the <code>sessionStorage<\/code> .<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Managing data in the JavaScript sessionStorage<\/h2>\n\n\n\n<h3 class=\"wp-block-heading\">1) Accessing the sessionStorage<\/h3>\n\n\n\n<p>To access the <code>sessionStorage<\/code>, you use the <code>sessionStorage<\/code> property of the <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-window\/\">window<\/a><\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">window<\/span>.sessionStorage<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Since the <code>window<\/code> is the <a href=\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-globalthis\/\">global object<\/a>, you can simply access the <code>sessionStorage<\/code> like this:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">sessionStorage<\/code><\/span><\/pre>\n\n\n<h3 class=\"wp-block-heading\">2) Storing data in the sessionStorage<\/h3>\n\n\n\n<p>The following stores a name-value pair in the <code>sessionStorage<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">sessionStorage.setItem(<span class=\"hljs-string\">'mode'<\/span>,<span class=\"hljs-string\">'dark'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If the <code>sessionStorage<\/code> has an item with the name of <code>mode<\/code>, the <code>setItem()<\/code> method will update the value for the existing item to <code>dark<\/code>. Otherwise, it&#8217;ll insert a new item.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">3) Getting data from the sessionStorage <\/h3>\n\n\n\n<p>To get the value of an item by name, you use the <code>getItem()<\/code> method. The following example gets the value of the item  &#8216;<code>mode<\/code>&#8216;:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> mode = sessionStorage.getItem(<span class=\"hljs-string\">'mode'<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(mode); <span class=\"hljs-comment\">\/\/ 'dark'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If there is no item with the name <code>mode<\/code>, the <code>getItem()<\/code> method will return <code>null<\/code>.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">4) Removing an item by a name<\/h3>\n\n\n\n<p>To remove an item by the name, you use the <code>removeItem()<\/code> method. The following removes the item with the name of <code>'mode'<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">sessionStorage.removeItem(<span class=\"hljs-string\">'mode'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">5) Iterating over all items<\/h3>\n\n\n\n<p>To iterate over all items stored in the <code>sessionStorage<\/code>, you follow these steps:<\/p>\n\n\n\n<ul><li>Use <code>Object.keys()<\/code> to get all keys of the <code>sessionStorage<\/code> object.<\/li><li>Use <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/\">for...of<\/a><\/code> to iterate over the keys and get the items by keys.<\/li><\/ul>\n\n\n\n<p>The following code illustrates the steps:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> keys = <span class=\"hljs-built_in\">Object<\/span>.keys(sessionStorage);\n<span class=\"hljs-keyword\">for<\/span>(<span class=\"hljs-keyword\">let<\/span> key <span class=\"hljs-keyword\">of<\/span> keys) {\n  <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${key}<\/span>: <span class=\"hljs-subst\">${sessionStorage.getItem(key)}<\/span>`<\/span>);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">6) Deleting all items in the sessionStorage<\/h3>\n\n\n\n<p>The data stored in the <code>sessionStorage<\/code> are automatically deleted when the web browser tab\/window is closed.<\/p>\n\n\n\n<p>In addition, you can use the <code>clear()<\/code> method to programmatically delete all data stored in the <code>sessionStorage<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">sessionStorage<\/span><span class=\"hljs-selector-class\">.clear<\/span>();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Why JavaScript sessionStorage<\/h2>\n\n\n\n<p>The <code>sessionStorage<\/code> has many practical applications. And the following are the notable ones:j<\/p>\n\n\n\n<ul><li>The <code>sessionStorage<\/code> can be used to store the state of the user interface of the web application. Later, when the user comes back to the page, you can restore the user interface stored in the <code>sessionStorage<\/code>.<\/li><li>The <code>sessionStorage<\/code> can also be used to pass data between pages instead of using the hidden input fields or URL parameters.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript sessionStorage application<\/h2>\n\n\n\n<p>You&#8217;ll build a simple web application that allows users to select the mode, either dark or light mode. By default, it has a light mode. And you&#8217;ll use the <code>sessionStorage<\/code> to remember the mode when the page refreshes.<\/p>\n\n\n\n<p>If you refresh the page, the mode that you selected will restore since it&#8217;s stored in the <code>sessionStorage<\/code>.<\/p>\n\n\n\n<p>However, if you close the tab or window, the page will reset to the <code>dark<\/code> mode, which is the default mode.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Creating the project folder structure<\/h3>\n\n\n\n<p>First, create a new folder called <code>session-storage<\/code>. In the <code>session-storage<\/code> folder, create two subfolders: <code>js<\/code> and <code>css<\/code> that will store the JavaScript and CSS files.<\/p>\n\n\n\n<p>Second, create a new <code>index.html<\/code> in the <code>sessionStorage<\/code> folder, the <code>app.js<\/code> file in the <code>js<\/code> folder, and <code>style.css<\/code> file in the <code>css<\/code> folder.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">2) Building the HTML page<\/h3>\n\n\n\n<p>The following shows the <code>index.html<\/code> page:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span> <span class=\"hljs-attr\">lang<\/span>=<span class=\"hljs-string\">\"en\"<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">charset<\/span>=<span class=\"hljs-string\">\"UTF-8\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"viewport\"<\/span> <span class=\"hljs-attr\">content<\/span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>JavaScript sessionStorage Demo<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link<\/span> <span class=\"hljs-attr\">rel<\/span>=<span class=\"hljs-string\">\"stylesheet\"<\/span> <span class=\"hljs-attr\">href<\/span>=<span class=\"hljs-string\">\"css\/style.css\"<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"container\"<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1<\/span>&gt;<\/span>JavaScript sessionStorage Demo<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">h1<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p<\/span>&gt;<\/span>Click the button to switch to the dark\/light mode.<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">p<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p<\/span>&gt;<\/span>Refresh the page to check if the mode is saved.<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">p<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"theme-switcher\"<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"btn\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">a<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span> <span class=\"hljs-attr\">src<\/span>=<span class=\"hljs-string\">\"js\/app.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this <code>index.html<\/code> file, we place the <code>style.css<\/code> in the head section and <code>app.js<\/code> in the body section.<\/p>\n\n\n\n<p>The page has some elements. The most important one is the button with the id <code>theme-switcher<\/code>.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">3) Creating app.js file<\/h3>\n\n\n\n<p>First, declare two constants that will be used as the butotn&#8217;s label:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> MOON = <span class=\"hljs-string\">'\ud83c\udf19'<\/span>;\n<span class=\"hljs-keyword\">const<\/span> SUN = <span class=\"hljs-string\">'\u2600\ufe0f'<\/span>;\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>You&#8217;ll use the <code>SUN<\/code> as the label of the <code>theme-switcher<\/code> button in the dark mode and <code>MOON<\/code> in the light mode.<\/p>\n\n\n\n<p>Second, declare three constants for the dark, light, and default modes:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> DARK_MODE = <span class=\"hljs-string\">'dark'<\/span>;\n<span class=\"hljs-keyword\">const<\/span> LIGHT_MODE = <span class=\"hljs-string\">'light'<\/span>;\n<span class=\"hljs-keyword\">const<\/span> DEFAULT_MODE = DARK_MODE;\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, select the button <code>theme-switcher<\/code> by using the <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-queryselector\/\">querySelector()<\/a><\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> btn = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#theme-switcher'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Fourth, define a new function <code>setMode()<\/code> to change the mode:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">setMode<\/span>(<span class=\"hljs-params\">mode = DEFAULT_MODE<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">if<\/span> (mode === DARK_MODE) {\n        btn.textContent = SUN;\n        <span class=\"hljs-built_in\">document<\/span>.body.classList.add(DARK_MODE);\n\n    } <span class=\"hljs-keyword\">else<\/span> <span class=\"hljs-keyword\">if<\/span> (mode === LIGHT_MODE) {\n        btn.textContent = MOON;\n        <span class=\"hljs-built_in\">document<\/span>.body.classList.remove(DARK_MODE);\n    }\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In the dark mode, the <code>setMode()<\/code> changes the button to <code>SUN<\/code> and adds the <code>DARK_MODE<\/code> class to the body element<\/p>\n\n\n\n<p>And in the light mode, the <code>setMode()<\/code> changes the button label to <code>MOON<\/code> and removes the <code>DARK_MODE<\/code> class from the body element.<\/p>\n\n\n\n<p>The following shows the CSS of the light mode. The background color is white and the text color is black:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">\n<span class=\"hljs-selector-tag\">body<\/span> {\n    <span class=\"hljs-attribute\">font-family<\/span>: -apple-system, BlinkMacSystemFont, <span class=\"hljs-string\">'Segoe UI'<\/span>, Roboto, Oxygen, Ubuntu, Cantarell, <span class=\"hljs-string\">'Open Sans'<\/span>, <span class=\"hljs-string\">'Helvetica Neue'<\/span>, sans-serif;\n    <span class=\"hljs-attribute\">font-size<\/span>: <span class=\"hljs-number\">16px<\/span>;\n    <span class=\"hljs-attribute\">background-color<\/span>: <span class=\"hljs-number\">#fff<\/span>;\n    <span class=\"hljs-attribute\">color<\/span>: <span class=\"hljs-number\">#333<\/span>;\n    <span class=\"hljs-attribute\">line-height<\/span>: <span class=\"hljs-number\">1.7<\/span>;\n    <span class=\"hljs-attribute\">transition<\/span>: <span class=\"hljs-number\">0.2s<\/span> ease-in-out;\n    <span class=\"hljs-attribute\">padding<\/span>: <span class=\"hljs-number\">20px<\/span>;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In the dark mode, the background color is black and the text color is white:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.dark<\/span> {\n    <span class=\"hljs-attribute\">background-color<\/span>: black;\n    <span class=\"hljs-attribute\">color<\/span>: <span class=\"hljs-number\">#fff<\/span>;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To switch from the light to dark mode, you add the .dark class to the body element and vice versa.<\/p>\n\n\n\n<p>Fifth, define the <code>init()<\/code> function that will run when the page loads:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">init<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">let<\/span> storedMode = sessionStorage.getItem(<span class=\"hljs-string\">'mode'<\/span>);\n    <span class=\"hljs-keyword\">if<\/span> (!storedMode) {\n        storedMode = DEFAULT_MODE;\n        sessionStorage.setItem(<span class=\"hljs-string\">'mode'<\/span>, DEFAULT_MODE);\n    }\n    setMode(storedMode);\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this function, we use the <code>getItem()<\/code> method to retrieve the mode stored in the <code>sessionStorage<\/code>. <\/p>\n\n\n\n<p>If the <code>sessionStorage<\/code> doesn&#8217;t have the <code>mode<\/code> item, the <code>init()<\/code> function will switch the page to the default mode, which is the dark mode. Otherwise, it sets to the mode stored in the <code>sessionStorage<\/code>.<\/p>\n\n\n\n<p>Sixth, attach a click event handler to the <code>theme-switcher<\/code> button:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">btn.addEventListener(<span class=\"hljs-string\">'click'<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">let<\/span> mode = sessionStorage.getItem(<span class=\"hljs-string\">'mode'<\/span>);\n    <span class=\"hljs-keyword\">if<\/span> (mode) {\n        <span class=\"hljs-keyword\">let<\/span> newMode = mode == DARK_MODE ? LIGHT_MODE : DARK_MODE;\n        setMode(newMode);\n        sessionStorage.setItem(<span class=\"hljs-string\">'mode'<\/span>, newMode);\n    }\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The click event handler gets the mode stored in the sessionStorage. <\/p>\n\n\n\n<p>If the mode item exists, it toggles the mode. In other words, the light mode becomes the dark mode and vice versa. <\/p>\n\n\n\n<p>It then uses the <code>setItem()<\/code> method to update the mode item in the <code>sessionStorage<\/code> to the new one.<\/p>\n\n\n\n<p>The following shows a complete app.js file:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> MOON = <span class=\"hljs-string\">'\ud83c\udf19'<\/span>;\n<span class=\"hljs-keyword\">const<\/span> SUN = <span class=\"hljs-string\">'\u2600\ufe0f'<\/span>;\n<span class=\"hljs-keyword\">const<\/span> DARK_MODE = <span class=\"hljs-string\">'dark'<\/span>;\n<span class=\"hljs-keyword\">const<\/span> LIGHT_MODE = <span class=\"hljs-string\">'light'<\/span>;\n<span class=\"hljs-keyword\">const<\/span> DEFAULT_MODE = DARK_MODE;\n\n<span class=\"hljs-keyword\">const<\/span> btn = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#theme-switcher'<\/span>);\n\ninit();\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">init<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">let<\/span> storedMode = sessionStorage.getItem(<span class=\"hljs-string\">'mode'<\/span>);\n    <span class=\"hljs-keyword\">if<\/span> (!storedMode) {\n        storedMode = DEFAULT_MODE;\n        sessionStorage.setItem(<span class=\"hljs-string\">'mode'<\/span>, DEFAULT_MODE);\n    }\n    setMode(storedMode);\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">setMode<\/span>(<span class=\"hljs-params\">mode = DEFAULT_MODE<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">if<\/span> (mode === DARK_MODE) {\n        btn.textContent = SUN;\n        <span class=\"hljs-built_in\">document<\/span>.body.classList.add(DARK_MODE);\n\n    } <span class=\"hljs-keyword\">else<\/span> <span class=\"hljs-keyword\">if<\/span> (mode === LIGHT_MODE) {\n        btn.textContent = MOON;\n        <span class=\"hljs-built_in\">document<\/span>.body.classList.remove(DARK_MODE);\n    }\n}\n\nbtn.addEventListener(<span class=\"hljs-string\">'click'<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">let<\/span> mode = sessionStorage.getItem(<span class=\"hljs-string\">'mode'<\/span>);\n    <span class=\"hljs-keyword\">if<\/span> (mode) {\n        <span class=\"hljs-keyword\">let<\/span> newMode = mode == DARK_MODE ? LIGHT_MODE : DARK_MODE;\n        setMode(newMode);\n        sessionStorage.setItem(<span class=\"hljs-string\">'mode'<\/span>, newMode);\n    }\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p><a href=\"https:\/\/https://jsprifix.netlify.app/\/sample\/webapis\/session-storage\/\" target=\"_blank\" rel=\"noreferrer noopener\">Here is the final application<\/a>.<\/p>\n\n\n\n<p>First, you select a mode e.g., light mode, the <code>sessionStorage<\/code> will save it.<\/p>\n\n\n\n<p>Then, you refresh the page. It&#8217;ll show the previously selected mode.<\/p>\n\n\n\n<p>To view the data stored in the session storage in the web browser, you click the Application tab and select the Session Storage:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"718\" height=\"348\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/09\/JavaScript-sessionStorage-DevTools.png\" alt=\"\" class=\"wp-image-87862\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/09\/JavaScript-sessionStorage-DevTools.png 718w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/09\/JavaScript-sessionStorage-DevTools-300x145.png 300w\" sizes=\"(max-width: 718px) 100vw, 718px\" \/><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>The <code>sessionStorage<\/code> allows you to store the data for session only. The browser will delete the <code>sessionStorage<\/code> data when you close the browser tab or window.<\/li><li>The <code>sessionStorage<\/code> is an instance of the <code>Storage<\/code> type, therefore, you can use the methods of the Storage type to manage data in the <code>sessionStorage<\/code>.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"87849\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/\"\n\t\t\t\tdata-post-title=\"JavaScript sessionStorage\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"87849\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/\"\n\t\t\t\tdata-post-title=\"JavaScript sessionStorage\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to use the JavaScript sessionStorage to store data only for a session.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":87825,"menu_order":2,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>A Practical Guide to JavaScript sessionStorage<\/title>\n<meta name=\"description\" content=\"In this tutorial, you&#039;ll learn how to use the JavaScript sessionStorage to store data only for a session.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"A Practical Guide to JavaScript sessionStorage\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you&#039;ll learn how to use the JavaScript sessionStorage to store data only for a session.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2020-09-25T15:15:14+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/09\/JavaScript-sessionStorage-DevTools.png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"8 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/\",\"name\":\"A Practical Guide to JavaScript sessionStorage\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2020-09-25T05:49:28+00:00\",\"dateModified\":\"2020-09-25T15:15:14+00:00\",\"description\":\"In this tutorial, you'll learn how to use the JavaScript sessionStorage to store data only for a session.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Web API\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/web-apis\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript sessionStorage\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"A Practical Guide to JavaScript sessionStorage","description":"In this tutorial, you'll learn how to use the JavaScript sessionStorage to store data only for a session.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/","og_locale":"en_US","og_type":"article","og_title":"A Practical Guide to JavaScript sessionStorage","og_description":"In this tutorial, you'll learn how to use the JavaScript sessionStorage to store data only for a session.","og_url":"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/","og_site_name":"PriFix Tutorial","article_modified_time":"2020-09-25T15:15:14+00:00","og_image":[{"url":"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/09\/JavaScript-sessionStorage-DevTools.png"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"8 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/","url":"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/","name":"A Practical Guide to JavaScript sessionStorage","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2020-09-25T05:49:28+00:00","dateModified":"2020-09-25T15:15:14+00:00","description":"In this tutorial, you'll learn how to use the JavaScript sessionStorage to store data only for a session.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/web-apis\/javascript-sessionstorage\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"Web API","item":"https:\/\/https://jsprifix.netlify.app/\/web-apis\/"},{"@type":"ListItem","position":3,"name":"JavaScript sessionStorage"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/87849"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=87849"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/87849\/revisions"}],"predecessor-version":[{"id":87866,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/87849\/revisions\/87866"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/87825"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=87849"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
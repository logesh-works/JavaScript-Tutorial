{"id":294,"date":"2016-08-11T01:58:47","date_gmt":"2016-08-11T08:58:47","guid":{"rendered":"http:\/\/https://jsprifix.netlify.app/\/?page_id=294"},"modified":"2022-02-14T18:01:07","modified_gmt":"2022-02-15T02:01:07","slug":"javascript-array-sort","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/","title":{"rendered":"JavaScript Array sort: Sorting Array Elements"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the JavaScript Array <code>sort()<\/code> method to sort arrays of numbers, string, and objects.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to JavaScript Array <code>sort()<\/code> method<\/h2>\n\n\n\n<p>The <code>sort()<\/code> method allows you to sort elements of an <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array\/\">array<\/a> in place. Besides returning the&nbsp;sorted array, the <code>sort()<\/code> method changes the positions of the elements in the original array.<\/p>\n\n\n\n<p>By default, the <code>sort()<\/code> method sorts the array elements in ascending order with the smallest value first and largest value last.<\/p>\n\n\n\n<p>The <code>sort()<\/code> method casts elements to strings and compares the strings to determine the orders.<\/p>\n\n\n\n<p>Consider the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> numbers = &#91;<span class=\"hljs-number\">0<\/span>, <span class=\"hljs-number\">1<\/span> , <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span> ];\nnumbers.sort();\n<span class=\"hljs-built_in\">console<\/span>.log(numbers);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The output is:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91; <span class=\"hljs-number\">0<\/span>, <span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">30<\/span> ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>sort()<\/code> method places 10 before 2 because the string &#8220;10&#8221; comes before &#8220;2&#8221; when doing a string comparison.<\/p>\n\n\n\n<p>To fix this, you need to pass a compare function to the <code>sort()<\/code> method. The <code>sort(<\/code>) method will use the compare function to determine the orders of elements.<\/p>\n\n\n\n<p>The following illustrates&nbsp;the syntax of the <code>sort()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">array<\/span><span class=\"hljs-selector-class\">.sort<\/span>(<span class=\"hljs-selector-tag\">comparefunction<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>sort()<\/code> method accepts an optional argument which&nbsp;is a <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-function\/\">function<\/a> that compares two elements of the array.<\/p>\n\n\n\n<p>If you omit the compare&nbsp;function, the <code>sort()<\/code> method sorts the elements with the sort order based on the Unicode code point values of elements as mentioned earlier.<\/p>\n\n\n\n<p>The&nbsp;compare function of the <code>sort()<\/code> method accepts two arguments and returns a value that determines the sort order. The following illustrates the syntax of the compare function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">compare<\/span>(<span class=\"hljs-params\">a,b<\/span>) <\/span>{\n  <span class=\"hljs-comment\">\/\/ ...<\/span>\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>compare()<\/code> function accepts two arguments <code>a<\/code> and <code>b<\/code>.&nbsp;The <code>sort()<\/code> method will sort elements based on the return value of the <code>compare()<\/code> function with the following rules:<\/p>\n\n\n\n<ol><li>If <code>compare(a,b)<\/code> is less than zero, the <code>sort()<\/code> method sorts <code>a<\/code> to a lower index than <code>b<\/code>. In other words, <code>a<\/code> will come first.<\/li><li>If <code>compare(a,b)<\/code> is greater than zero, the <code>sort()<\/code> method sort <code>b<\/code> to a lower index than <code>a<\/code>, i.e., b will come first.<\/li><li>If <code>compare(a,b)<\/code> returns zero, the <code>sort()<\/code> method considers a equals b and leaves their&nbsp;positions unchanged.<\/li><\/ol>\n\n\n\n<p>To fix the issue of sorting the number, you can use the following syntax:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> numbers = &#91;<span class=\"hljs-number\">0<\/span>, <span class=\"hljs-number\">1<\/span> , <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span> ];\nnumbers.sort( <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>(<span class=\"hljs-params\"> a , b<\/span>)<\/span>{\n    <span class=\"hljs-keyword\">if<\/span>(a &gt; b) <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-number\">1<\/span>;\n    <span class=\"hljs-keyword\">if<\/span>(a &lt; b) <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-number\">-1<\/span>;\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-number\">0<\/span>;\n});\n\n<span class=\"hljs-built_in\">console<\/span>.log(numbers);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91; <span class=\"hljs-number\">0<\/span>,  <span class=\"hljs-number\">1<\/span>,  <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span> ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Or you can define the comparison function using the <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-arrow-function\/\">arrow function<\/a> syntax:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> numbers = &#91;<span class=\"hljs-number\">0<\/span>, <span class=\"hljs-number\">1<\/span> , <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span> ];\nnumbers.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a,b<\/span>) =&gt;<\/span> {\n    <span class=\"hljs-keyword\">if<\/span>(a &gt; b) <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-number\">1<\/span>;\n    <span class=\"hljs-keyword\">if<\/span>(a &lt; b) <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-number\">-1<\/span>;\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-number\">0<\/span>;\n});\n\n<span class=\"hljs-built_in\">console<\/span>.log(numbers);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>And the following is the simplest since the elements of the array are numbers:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> numbers = &#91;<span class=\"hljs-number\">0<\/span>, <span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span>];\nnumbers.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b<\/span>) =&gt;<\/span> a - b);\n\n<span class=\"hljs-built_in\">console<\/span>.log(numbers);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Sorting an array of strings<\/h2>\n\n\n\n<p>Suppose you&nbsp;have an array of string named <code>animals<\/code> as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> animals = &#91;\n    <span class=\"hljs-string\">'cat'<\/span>, <span class=\"hljs-string\">'dog'<\/span>, <span class=\"hljs-string\">'elephant'<\/span>, <span class=\"hljs-string\">'bee'<\/span>, <span class=\"hljs-string\">'ant'<\/span>\n];<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To sort the elements of the <code>animals<\/code> array\u00a0in ascending order alphabetically, you use the <code>sort()<\/code> method without passing the compare function as shown in the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> animals = &#91;\n    <span class=\"hljs-string\">'cat'<\/span>, <span class=\"hljs-string\">'dog'<\/span>, <span class=\"hljs-string\">'elephant'<\/span>, <span class=\"hljs-string\">'bee'<\/span>, <span class=\"hljs-string\">'ant'<\/span>\n];\nanimals.sort();\n\n<span class=\"hljs-built_in\">console<\/span>.log(animals);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91; 'ant', 'bee', 'cat', 'dog', 'elephant' ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To sort the <code>animals<\/code> array in descending order, you need to change the logic of the compare function and pass it&nbsp;to the <code>sort()<\/code> method as the&nbsp;following example.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> animals = &#91;\n    <span class=\"hljs-string\">'cat'<\/span>, <span class=\"hljs-string\">'dog'<\/span>, <span class=\"hljs-string\">'elephant'<\/span>, <span class=\"hljs-string\">'bee'<\/span>, <span class=\"hljs-string\">'ant'<\/span>\n];\n\nanimals.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b<\/span>) =&gt;<\/span> {\n    <span class=\"hljs-keyword\">if<\/span> (a &gt; b)\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-number\">-1<\/span>;\n    <span class=\"hljs-keyword\">if<\/span> (a &lt; b)\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-number\">1<\/span>;\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-number\">0<\/span>;\n});\n\n<span class=\"hljs-built_in\">console<\/span>.log(animals);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91; 'elephant', 'dog', 'cat', 'bee', 'ant' ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Suppose you have an array that contains elements in both uppercase and lowercase as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/\/ sorting array with mixed cases<\/span>\n<span class=\"hljs-keyword\">let<\/span> mixedCaseAnimals = &#91;\n    <span class=\"hljs-string\">'Cat'<\/span>, <span class=\"hljs-string\">'dog'<\/span>, <span class=\"hljs-string\">'Elephant'<\/span>, <span class=\"hljs-string\">'bee'<\/span>, <span class=\"hljs-string\">'ant'<\/span>\n];<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To sort this array alphabetically, you need to use a custom compare function to convert all elements to the same case e.g., uppercase for comparison and pass that function to the <code>sort()<\/code> method.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> mixedCaseAnimals = &#91;\n    <span class=\"hljs-string\">'Cat'<\/span>, <span class=\"hljs-string\">'dog'<\/span>, <span class=\"hljs-string\">'Elephant'<\/span>, <span class=\"hljs-string\">'bee'<\/span>, <span class=\"hljs-string\">'ant'<\/span>\n];\n\nmixedCaseAnimals.sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">a, b<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">let<\/span> x = a.toUpperCase(),\n        y = b.toUpperCase();\n    <span class=\"hljs-keyword\">return<\/span> x == y ? <span class=\"hljs-number\">0<\/span> : x &gt; y ? <span class=\"hljs-number\">1<\/span> : <span class=\"hljs-number\">-1<\/span>;\n\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91; 'ant', 'bee', 'Cat', 'dog', 'Elephant' ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\" id=\"Sorting_non-ASCII_characters\">Sorting an array of strings with non-ASCII characters<\/h3>\n\n\n\n<p>The <code>sort()<\/code> method is working fine with the&nbsp;strings with&nbsp;ASCII characters. However, for the strings with non-ASCII characters e.g.,&nbsp;\u00e9, \u00e8, etc., the <code>sort()<\/code> method will not work correctly. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> animaux = &#91;<span class=\"hljs-string\">'z\u00e8bre'<\/span>, <span class=\"hljs-string\">'abeille'<\/span>, <span class=\"hljs-string\">'\u00e9cureuil'<\/span>, <span class=\"hljs-string\">'chat'<\/span>];\nanimaux.sort();\n\n<span class=\"hljs-built_in\">console<\/span>.log(animaux);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>As you see, the <code>\u00e9cureuil<\/code> string should come&nbsp;before the <code>z\u00e8bre<\/code> string.<\/p>\n\n\n\n<p>To resolve this, you use the <code>localeCompare()<\/code> method of the <code>String<\/code> object to compare strings in a specific locale, like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-18\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">animaux.sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">a, b<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> a.localeCompare(b);\n});\n<span class=\"hljs-built_in\">console<\/span>.log(animaux);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-18\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-19\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91; 'abeille', 'chat', '\u00e9cureuil', 'z\u00e8bre' ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-19\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The elements of the <code>animaux<\/code> array now are in the correct order.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Sorting an array of numbers<\/h2>\n\n\n\n<p>Suppose you have an array of numbers named <code>scores<\/code> as in the following example.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-20\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> scores = &#91;\n    <span class=\"hljs-number\">9<\/span>, <span class=\"hljs-number\">80<\/span>, <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">5<\/span>, <span class=\"hljs-number\">70<\/span>\n];<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-20\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To sort an array of numbers numerically, you need to pass into a custom comparison function that compares two numbers.<\/p>\n\n\n\n<p>The following example sorts the <code>scores<\/code> array numerically in ascending order.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-21\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> scores = &#91;\n    <span class=\"hljs-number\">9<\/span>, <span class=\"hljs-number\">80<\/span>, <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">5<\/span>, <span class=\"hljs-number\">70<\/span>\n];\n<span class=\"hljs-comment\">\/\/ sort numbers in ascending order<\/span>\nscores.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b<\/span>) =&gt;<\/span> a - b);\n\n<span class=\"hljs-built_in\">console<\/span>.log(scores);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-21\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-22\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91; <span class=\"hljs-number\">5<\/span>, <span class=\"hljs-number\">9<\/span>, <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">70<\/span>, <span class=\"hljs-number\">80<\/span> ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-22\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To sort an array of numbers numerically in descending order, you just need to reverse the logic in the compare&nbsp;function as shown in the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-23\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> scores = &#91;\n    <span class=\"hljs-number\">9<\/span>, <span class=\"hljs-number\">80<\/span>, <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">5<\/span>, <span class=\"hljs-number\">70<\/span>\n];\n<span class=\"hljs-comment\">\/\/ descending order<\/span>\nscores.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b<\/span>) =&gt;<\/span> b - a);\n<span class=\"hljs-built_in\">console<\/span>.log(scores);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-23\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-24\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91;<span class=\"hljs-number\">80<\/span>, <span class=\"hljs-number\">70<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">9<\/span>, <span class=\"hljs-number\">5<\/span>]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-24\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Sorting an array of objects by a specified property<\/h2>\n\n\n\n<p>The following is an array of <code>employee<\/code> objects, where each object contains three properties: <code>name<\/code>,<code>salary<\/code> and <code>hireDate<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-25\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> employees = &#91;\n    {<span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'John'<\/span>, <span class=\"hljs-attr\">salary<\/span>: <span class=\"hljs-number\">90000<\/span>, <span class=\"hljs-attr\">hireDate<\/span>: <span class=\"hljs-string\">\"July 1, 2010\"<\/span>},\n    {<span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'David'<\/span>, <span class=\"hljs-attr\">salary<\/span>: <span class=\"hljs-number\">75000<\/span>, <span class=\"hljs-attr\">hireDate<\/span>: <span class=\"hljs-string\">\"August 15, 2009\"<\/span>},\n    {<span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'Ana'<\/span>, <span class=\"hljs-attr\">salary<\/span>: <span class=\"hljs-number\">80000<\/span>, <span class=\"hljs-attr\">hireDate<\/span>: <span class=\"hljs-string\">\"December 12, 2011\"<\/span>}\n];<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-25\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Sorting objects by a numeric property<\/h3>\n\n\n\n<p>The following example shows how to sort the employees by <code>salary<\/code> in ascending order.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-26\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/\/ sort by salary<\/span>\nemployees.sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">x, y<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> x.salary - y.salary;\n});\n\n<span class=\"hljs-built_in\">console<\/span>.table(employees);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-26\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"359\" height=\"103\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/03\/javascript-array-sort-by-salary.png\" alt=\"\" class=\"wp-image-86005\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/03\/javascript-array-sort-by-salary.png 359w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/03\/javascript-array-sort-by-salary-300x86.png 300w\" sizes=\"(max-width: 359px) 100vw, 359px\" \/><\/figure>\n\n\n\n<p>This example is similar to the example of sorting an array of numbers in ascending order. The difference is that it compares the <code>salary<\/code> property of two objects instead.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Sorting objects by a string property<\/h3>\n\n\n\n<p>To sort the <code>employees<\/code> array by <code>name<\/code> property case-insensitively, you pass the compare&nbsp;function that compares two strings case-insensitively as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-27\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">employees.sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">x, y<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">let<\/span> a = x.name.toUpperCase(),\n        b = y.name.toUpperCase();\n    <span class=\"hljs-keyword\">return<\/span> a == b ? <span class=\"hljs-number\">0<\/span> : a &gt; b ? <span class=\"hljs-number\">1<\/span> : <span class=\"hljs-number\">-1<\/span>;\n});\n\n<span class=\"hljs-built_in\">console<\/span>.table(employees);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-27\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"359\" height=\"103\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/03\/javascript-array-sort-by-object-property.png\" alt=\"\" class=\"wp-image-86003\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/03\/javascript-array-sort-by-object-property.png 359w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/03\/javascript-array-sort-by-object-property-300x86.png 300w\" sizes=\"(max-width: 359px) 100vw, 359px\" \/><\/figure>\n\n\n\n<h3 class=\"wp-block-heading\">Sorting objects by the date property<\/h3>\n\n\n\n<p>Suppose, you wish to sort employees based on each employee&#8217;s hire date.<\/p>\n\n\n\n<p>The hire date data is stored\u00a0in the <code>hireDate<\/code> property of the employee object. However, it is just a string that represents a valid date, not the <code>Date<\/code> object.\u00a0<\/p>\n\n\n\n<p>Therefore, to sort employees by hire date, you first have to create a valid <code>Date<\/code> object from the date string, and then compare two dates, which is the same as comparing two numbers.<\/p>\n\n\n\n<p>Here is the solution:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-28\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">employees.sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">x, y<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">let<\/span> a = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Date<\/span>(x.hireDate),\n        b = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Date<\/span>(y.hireDate);\n    <span class=\"hljs-keyword\">return<\/span> a - b;\n});\n\n<span class=\"hljs-built_in\">console<\/span>.table(employees);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-28\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"359\" height=\"103\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/03\/javascript-array-sort-by-date.png\" alt=\"\" class=\"wp-image-86010\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/03\/javascript-array-sort-by-date.png 359w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/03\/javascript-array-sort-by-date-300x86.png 300w\" sizes=\"(max-width: 359px) 100vw, 359px\" \/><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">Optimizing JavaScript Array <code>sort()<\/code> method<\/h2>\n\n\n\n<p>In&nbsp;fact, the <code>sort()<\/code> method calls the compare function multiple times for each element in the array.<\/p>\n\n\n\n<p>See the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-29\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> rivers = &#91;<span class=\"hljs-string\">'Nile'<\/span>, <span class=\"hljs-string\">'Amazon'<\/span>, <span class=\"hljs-string\">'Congo'<\/span>, <span class=\"hljs-string\">'Mississippi'<\/span>, <span class=\"hljs-string\">'Rio-Grande'<\/span>];\n\nrivers.sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">a, b<\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(a, b);\n    <span class=\"hljs-keyword\">return<\/span> a.length - b.length;\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-29\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">Amazon Nile\nCongo Amazon\nCongo Amazon\nCongo Nile\nMississippi Congo\nMississippi Amazon\nRio-Grande Amazon\nRio-Grande Mississippi<\/code><\/span><\/pre>\n\n\n<p>How it works:<\/p>\n\n\n\n<ol><li>First, declare&nbsp;an array <code>rivers<\/code> that consists of the famous river names.<\/li><li>Second, sort&nbsp;the <code>rivers<\/code> array by the length of its element&nbsp;using the <code>sort()<\/code> method. We&nbsp;output the elements of the <code>rivers<\/code> array to the web console whenever the <code>sort()<\/code> method invokes the comparison function .<\/li><\/ol>\n\n\n\n<p>As shown in the output above, each element has been evaluated multiple times e.g., Amazon 4 times, Congo 2 times, etc.<\/p>\n\n\n\n<p>If the number of array elements is increasing, it will potentially decrease the performance.<\/p>\n\n\n\n<p>You cannot reduce the number of times that comparison function is executed. However, you can reduce the work that the comparison has to do. This technique is called <a href=\"http:\/\/en.wikipedia.org\/wiki\/Schwartzian_transform\">Schwartzian Transform<\/a>.<\/p>\n\n\n\n<p>To implement&nbsp;this, you follow these steps:<\/p>\n\n\n\n<ol><li>First, extract the actual values into a temporary&nbsp;array using the <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-map\/\">map()<\/a> method.<\/li><li>Second, sort the temporary array with&nbsp;the elements that are already evaluated (or transformed).<\/li><li>Third, walk the temporary array to get an array with the&nbsp;right order.<\/li><\/ol>\n\n\n\n<p>Here is the solution:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-30\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/\/ temporary array holds objects with position<\/span>\n<span class=\"hljs-comment\">\/\/ and length of element<\/span>\n<span class=\"hljs-keyword\">var<\/span> lengths = rivers.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">e, i<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> {<span class=\"hljs-attr\">index<\/span>: i, <span class=\"hljs-attr\">value<\/span>: e.length };\n});\n\n<span class=\"hljs-comment\">\/\/ sorting the lengths array containing the lengths of<\/span>\n<span class=\"hljs-comment\">\/\/ river names<\/span>\nlengths.sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">a, b<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> +(a.value &gt; b.value) || +(a.value === b.value) - <span class=\"hljs-number\">1<\/span>;\n});\n\n<span class=\"hljs-comment\">\/\/ copy element back to the array<\/span>\n<span class=\"hljs-keyword\">var<\/span> sortedRivers = lengths.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">e<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> rivers&#91;e.index];\n});\n\n<span class=\"hljs-built_in\">console<\/span>.log(sortedRivers);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-30\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-31\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91; 'Nile', 'Congo', 'Amazon', 'Rio-Grande', 'Mississippi' ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-31\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned how to use the JavaScript Array <code>sort()<\/code> method to sort arrays of strings, numbers, dates, and objects.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"294\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/\"\n\t\t\t\tdata-post-title=\"JavaScript Array sort: Sorting Array Elements\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"294\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/\"\n\t\t\t\tdata-post-title=\"JavaScript Array sort: Sorting Array Elements\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you will learn how to use the JavaScript Array sort() method to sort arrays of numbers, string, and objects. Introduction to JavaScript Array sort() method The sort() method allows you to sort elements of an array in place. Besides returning the&nbsp;sorted array, the sort() method changes the positions of the elements [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":89577,"menu_order":16,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Array sort: Sorting an Array More Effectively<\/title>\n<meta name=\"description\" content=\"This tutorial shows you how to use the JavaScript array sort method to sort arrays of numbers, arrays of strings, and arrays of objects by a property.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Array sort: Sorting an Array More Effectively\" \/>\n<meta property=\"og:description\" content=\"This tutorial shows you how to use the JavaScript array sort method to sort arrays of numbers, arrays of strings, and arrays of objects by a property.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-15T02:01:07+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/03\/javascript-array-sort-by-salary.png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"8 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/\",\"name\":\"JavaScript Array sort: Sorting an Array More Effectively\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2016-08-11T08:58:47+00:00\",\"dateModified\":\"2022-02-15T02:01:07+00:00\",\"description\":\"This tutorial shows you how to use the JavaScript array sort method to sort arrays of numbers, arrays of strings, and arrays of objects by a property.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript Array Methods\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-methods\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Array sort: Sorting Array Elements\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Array sort: Sorting an Array More Effectively","description":"This tutorial shows you how to use the JavaScript array sort method to sort arrays of numbers, arrays of strings, and arrays of objects by a property.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Array sort: Sorting an Array More Effectively","og_description":"This tutorial shows you how to use the JavaScript array sort method to sort arrays of numbers, arrays of strings, and arrays of objects by a property.","og_url":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-02-15T02:01:07+00:00","og_image":[{"url":"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/03\/javascript-array-sort-by-salary.png"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"8 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/","url":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/","name":"JavaScript Array sort: Sorting an Array More Effectively","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2016-08-11T08:58:47+00:00","dateModified":"2022-02-15T02:01:07+00:00","description":"This tutorial shows you how to use the JavaScript array sort method to sort arrays of numbers, arrays of strings, and arrays of objects by a property.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"JavaScript Array Methods","item":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-methods\/"},{"@type":"ListItem","position":3,"name":"JavaScript Array sort: Sorting Array Elements"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/294"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=294"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/294\/revisions"}],"predecessor-version":[{"id":87450,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/294\/revisions\/87450"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/89577"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=294"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
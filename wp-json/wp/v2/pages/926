{"id":926,"date":"2016-11-21T01:33:22","date_gmt":"2016-11-21T09:33:22","guid":{"rendered":"http:\/\/www.javascripttutorial.net\/?page_id=926"},"modified":"2022-08-31T00:50:56","modified_gmt":"2022-08-31T07:50:56","slug":"javascript-unary-operators","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/","title":{"rendered":"JavaScript Unary Operators Explained"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use JavaScript unary operators that take a single operand and performs an operation.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the JavaScript unary operators<\/h2>\n\n\n\n<p>Unary operators work on one value. The following table shows the unary operators and their meanings:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th>Unary Operators<\/th><th>Name<\/th><th>Meaning<\/th><\/tr><\/thead><tbody><tr><td>+x<\/td><td>Unary Plus<\/td><td>Convert a value into a number<\/td><\/tr><tr><td>-x<\/td><td>Unary Minus<\/td><td>Convert a value into a number and negate it<\/td><\/tr><tr><td>++x<\/td><td>Increment Operator (Prefix)<\/td><td>Add one to the value<\/td><\/tr><tr><td>&#8211;x<\/td><td>Decrement Operator (Prefix)<\/td><td>Subtract one from the value<\/td><\/tr><tr><td>x++<\/td><td>Increment Operator (Postfix)<\/td><td> Add one to the value <\/td><\/tr><tr><td>x&#8211;<\/td><td>Decrement Operator (Postfix)<\/td><td> Subtract one from the value <\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">Unary plus (+)<\/h2>\n\n\n\n<p>The unary plus operator is a simple plus sign (<code>+<\/code>). If you place the unary plus before a numeric value, it does nothing. For example<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> x = <span class=\"hljs-number\">10<\/span>;\n<span class=\"hljs-keyword\">let<\/span> y = +x;\n\n<span class=\"hljs-built_in\">console<\/span>.log(y); <span class=\"hljs-comment\">\/\/ 10<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>When you apply the unary plus operator to a non-numeric value, it performs a number conversion using the <code>Number()<\/code> function wit the rules in the following table:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th>Value<\/th><th>Result<\/th><\/tr><\/thead><tbody><tr><td>boolean<\/td><td><code>false<\/code> to <code>0<\/code>, <code>true<\/code> to <code>1<\/code><\/td><\/tr><tr><td>string<\/td><td>Convert the string value based on a set of specific rules<\/td><\/tr><tr><td>object<\/td><td>Call the <code>valueOf()<\/code> and\/or <code>toString()<\/code> method to get the value to convert into a number<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p>For example, the following uses the unary plus operator to convert the string <code>'10'<\/code> to the number <code>10<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> s = <span class=\"hljs-string\">'10'<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(+s); <span class=\"hljs-comment\">\/\/ 10<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example uses the unary plus operator (<code>+<\/code>) converts a boolean value into a number, <code>false<\/code> to <code>0<\/code> and <code>true<\/code> to <code>1<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> f = <span class=\"hljs-literal\">false<\/span>,\n    t = <span class=\"hljs-literal\">true<\/span>;\n\n<span class=\"hljs-built_in\">console<\/span>.log(+f); <span class=\"hljs-comment\">\/\/ 0<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(+t); <span class=\"hljs-comment\">\/\/ 1<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">0\n1<\/code><\/span><\/pre>\n\n\n<p>Suppose you have a <code>product<\/code> object with the <code>toString()<\/code> method as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {\n  <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'John'<\/span>,\n  <span class=\"hljs-attr\">toString<\/span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">'25'<\/span>;\n  },\n};\n\n<span class=\"hljs-built_in\">console<\/span>.log(+person);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">25<\/code><\/span><\/pre>\n\n\n<p>In this example, we apply the unary plus operator (<code>+<\/code>) on the <code>person<\/code> object that has the <code>toString()<\/code> method, JavaScript engine calls <code>toString()<\/code> method to get the value (<code>'25'<\/code>) and convert it into a number. The following adds the <code>valueOf()<\/code> method to the <code>person<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {\n  <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'John'<\/span>,\n  <span class=\"hljs-attr\">toString<\/span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">'25'<\/span>;\n  },\n  <span class=\"hljs-attr\">valueOf<\/span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">'30'<\/span>;\n  },\n};\n\n<span class=\"hljs-built_in\">console<\/span>.log(+person);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">30<\/code><\/span><\/pre>\n\n\n<p>In this example, the <code>person<\/code> object has the <code>valueOf()<\/code> method, the JavaScript engine calls it instead of the <code>toString()<\/code> method to get the value to convert.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Unary minus (-)<\/h2>\n\n\n\n<p>The unary minus operator is a single minus sign (<code>-<\/code>).  If you apply the unary minus operator to a number, it negates the number. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> x = <span class=\"hljs-number\">10<\/span>;\n<span class=\"hljs-keyword\">let<\/span> y = -x;\n\n<span class=\"hljs-built_in\">console<\/span>.log(y); <span class=\"hljs-comment\">\/\/ -10<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you apply the unary minus operator to a non-numeric value, it converts the value into a number using the same rules as the unary plus operator and then negates the value. <\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Increment \/ Decrement operators<\/h2>\n\n\n\n<p>The increment operator has two plus signs (<code>++<\/code>) while the decrement operator has two minus signs (<code>--<\/code>).<\/p>\n\n\n\n<p>Both increment and decrement operators have two versions: prefix and postfix. And you place the prefix and postfix versions of the increment or decrement operators before and after the variable to which they apply.<\/p>\n\n\n\n<p>The following example uses the prefix increment operator to add one to a variable:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> age = <span class=\"hljs-number\">25<\/span>;\n++age;\n\n<span class=\"hljs-built_in\">console<\/span>.log(age); <span class=\"hljs-comment\">\/\/ 26<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>It&#8217;s equivalent to the following:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> age = <span class=\"hljs-number\">25<\/span>;\nage = age + <span class=\"hljs-number\">1<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(age); <span class=\"hljs-comment\">\/\/ 26<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example uses the prefix decrement operator to subtract one from a variable:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> weight = <span class=\"hljs-number\">90<\/span>;\n--weight;\n\n<span class=\"hljs-built_in\">console<\/span>.log(weight); <span class=\"hljs-comment\">\/\/ 89<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>It is equivalent to the following:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> weight = <span class=\"hljs-number\">90<\/span>;\nweight = weight - <span class=\"hljs-number\">1<\/span>;\n\n<span class=\"hljs-built_in\">console<\/span>.log(weight); <span class=\"hljs-comment\">\/\/ 89<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>When you apply the prefix increment or decrement, JavaScript changes the variable before evaluating the statement. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> weight = <span class=\"hljs-number\">90<\/span>;\nweight = ++weight + <span class=\"hljs-number\">5<\/span>;\n\n<span class=\"hljs-built_in\">console<\/span>.log(weight); <span class=\"hljs-comment\">\/\/ 96<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example:<\/p>\n\n\n\n<ul><li>First, increase the weight on the right-hand side so ++weight is 91<\/li><li>Second, add five to the ++weight that returns 96<\/li><li>Third, assign the result to the weight on the left-hand side.<\/li><\/ul>\n\n\n\n<p>Likewise, the following example uses a prefix decrement operator:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> weight = <span class=\"hljs-number\">90<\/span>;\nweight = --weight + <span class=\"hljs-number\">5<\/span>;\n\n<span class=\"hljs-built_in\">console<\/span>.log(weight); <span class=\"hljs-comment\">\/\/ 94<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example:<\/p>\n\n\n\n<ul><li>First, subtract one from the weight, &#8211;weight returns 89<\/li><li>Second, add five to the &#8211;weight that returns 94<\/li><li>Third, assign the result to the weight on the left-hand side.<\/li><\/ul>\n\n\n\n<p>The postfix increment or decrement operator changes the value after the statement is evaluated. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> weight = <span class=\"hljs-number\">90<\/span>;\n<span class=\"hljs-keyword\">let<\/span> newWeight = weight++ + <span class=\"hljs-number\">5<\/span>;\n\n<span class=\"hljs-built_in\">console<\/span>.log(newWeight); <span class=\"hljs-comment\">\/\/ 95<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(weight); <span class=\"hljs-comment\">\/\/ 91<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>First, add five to <code>weight<\/code> (90) and assign the result to the <code>newWeight<\/code> (95)<\/li><li>Second, add one to the <code>weight<\/code> variable after the second statement completes, the weight becomes 91.<\/li><li>Third, output both <code>newWeight<\/code> and <code>weight<\/code> to the console.<\/li><\/ul>\n\n\n\n<p>When applying the increment\/decrement operator to a non-numeric value, it performs the following steps :<\/p>\n\n\n\n<ul><li>First, convert the value into a number using the same rules as the unary plus (+) operator. <\/li><li>Then, add one to or subtract one from the value.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Unary operators work on one value.<\/li><li>Unary plus (<code>+<\/code>) or minus (<code>-<\/code>) converts a non-numeric value into a number. The unary minus negates the value after the conversion.<\/li><li>The prefix increment operator adds one to a value. The value is changed before the statement is evaluated.<\/li><li>The postfix increment operator adds one to a value. The value is changed after the statement is evaluated.<\/li><li>The prefix decrement operator subtracts one from a value. The value is changed before the statement is evaluated.<\/li><li>The postfix decrement operator subtracts one from a value. The value is changed after the statement is evaluated.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"926\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/\"\n\t\t\t\tdata-post-title=\"JavaScript Unary Operators Explained\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"926\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/\"\n\t\t\t\tdata-post-title=\"JavaScript Unary Operators Explained\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use JavaScript unary operators that take a single operand and performs an operation.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":18,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Unary Operators Explained<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to use JavaScript Unary Operators to manipulate data values of any type including number, string, Boolean, and object.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Unary Operators Explained\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn how to use JavaScript Unary Operators to manipulate data values of any type including number, string, Boolean, and object.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-08-31T07:50:56+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"5 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/\",\"name\":\"JavaScript Unary Operators Explained\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2016-11-21T09:33:22+00:00\",\"dateModified\":\"2022-08-31T07:50:56+00:00\",\"description\":\"In this tutorial, you will learn how to use JavaScript Unary Operators to manipulate data values of any type including number, string, Boolean, and object.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Unary Operators Explained\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Unary Operators Explained","description":"In this tutorial, you will learn how to use JavaScript Unary Operators to manipulate data values of any type including number, string, Boolean, and object.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Unary Operators Explained","og_description":"In this tutorial, you will learn how to use JavaScript Unary Operators to manipulate data values of any type including number, string, Boolean, and object.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-08-31T07:50:56+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"5 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/","url":"https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/","name":"JavaScript Unary Operators Explained","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2016-11-21T09:33:22+00:00","dateModified":"2022-08-31T07:50:56+00:00","description":"In this tutorial, you will learn how to use JavaScript Unary Operators to manipulate data values of any type including number, string, Boolean, and object.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-unary-operators\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript Unary Operators Explained"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/926"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=926"}],"version-history":[{"count":5,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/926\/revisions"}],"predecessor-version":[{"id":90380,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/926\/revisions\/90380"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=926"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
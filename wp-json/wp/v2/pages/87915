{"id":87915,"date":"2020-09-27T21:29:40","date_gmt":"2020-09-28T04:29:40","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=87915"},"modified":"2022-01-08T00:59:44","modified_gmt":"2022-01-08T08:59:44","slug":"javascript-drag-and-drop","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/","title":{"rendered":"JavaScript Drag and Drop"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the JavaScript drag and drop API and how to use it to implement a simple drag&amp;drop application.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to JavaScript Drag and Drop API<\/h2>\n\n\n\n<p>HTML5 formally introduced the drag-and-drop specification. Most modern web browsers have implemented native drag-and-drop based on the HTML5 spec. <\/p>\n\n\n\n<p>By default, only image and text can be draggable. To drag an image, you simply hold the mouse button down and then move it. To drag the text, you need to highlight some text and drag it in the same way as you would drag an image.<\/p>\n\n\n\n<p>HTML5 spec specifies that almost all elements can be draggable. To make an element draggable, you add the <code>draggable<\/code> property with the value of  <code>true<\/code>  to its HTML tag. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"item\"<\/span> <span class=\"hljs-attr\">draggable<\/span>=<span class=\"hljs-string\">\"true\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Events on draggable elements<\/h2>\n\n\n\n<p>When you drag an element, these events fire in the following sequence:<\/p>\n\n\n\n<ul><li><code>dragstart<\/code><\/li><li><code>drag<\/code><\/li><li><code>dragend<\/code><\/li><\/ul>\n\n\n\n<p>When you hold a mouse button and begin to move the mouse, the <code>dragstart<\/code> event fires on the draggable element that you&#8217;re dragging. The cursor changes to a no-drop symbol (a circle with a line through it) to indicate that you cannot drop the element on itself.<\/p>\n\n\n\n<p>After the <code>dragstart<\/code> event fires, the <code>drag<\/code> event fires repeatedly as long as you drag the element. <\/p>\n\n\n\n<p>And The <code>dragend<\/code> event fires when you stop dragging the element. <\/p>\n\n\n\n<p>The target of all events (<code>e.target<\/code>) is the element that is being dragged. <\/p>\n\n\n\n<p>By default, the browser doesn&#8217;t change the appearance of the dragged element. Therefore, you can customize its appearance based on your preferences.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Events on drop targets<\/h2>\n\n\n\n<p>When you drag an element over a valid drop target, these events fire in the following sequence:<\/p>\n\n\n\n<ul><li><code>dragenter<\/code><\/li><li><code>dragover<\/code><\/li><li><code>dragleave<\/code> or <code>drop<\/code><\/li><\/ul>\n\n\n\n<p>The <code>dragenter<\/code> event fires as soon as you drag the element over a drop target.<\/p>\n\n\n\n<p>After the <code>dragenter<\/code> event fires, the <code>dragover<\/code> event fires repeatedly as long as you&#8217;re dragging the element within the boundary of the drop target.<\/p>\n\n\n\n<p>When you drag the element outside of the boundary of the drop target, the <code>dragover<\/code> event stops firing and the <code>dragleave<\/code> event fires.<\/p>\n\n\n\n<p>In case you drop the element on the target, the <code>drop<\/code> event fires instead of the <code>dragleave<\/code> event.<\/p>\n\n\n\n<p>The target (<code>e.target<\/code>) of the <code>dragenter<\/code>, <code>dragover<\/code>, <code>dragleave<\/code>, and <code>drop<\/code> events are the drop target elements.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Valid drop target<\/h2>\n\n\n\n<p>Almost all elements support the drop target events (<code>dragenter<\/code>, <code>dragover<\/code>, <code>dragleave<\/code>, and <code>drop<\/code>). However, they don&#8217;t allow dropping by default.<\/p>\n\n\n\n<p>If you drop an element over a drop target that doesn&#8217;t allow to drop, the <code>drop<\/code> event won&#8217;t fire.<\/p>\n\n\n\n<p>To turn an element into a valid drop target, you can override the default behavior of both <code>dragenter<\/code> and <code>dragover<\/code> events by calling the <code>event.preventDefault()<\/code> method in their corresponding event handlers. (See the example section for more information)<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Transfer data using dataTransfer object<\/h2>\n\n\n\n<p>To transfer data in a drag-and-drop action, you use the <code>dataTransfer<\/code> object.<\/p>\n\n\n\n<p>The <code>dataTransfer<\/code> object is a property of the event. It allows you to transfer data from the dragged element to the drop target.<\/p>\n\n\n\n<p>The <code>dataTransfer<\/code> object has two methods: <code>setData()<\/code> and <code>getData()<\/code>.<\/p>\n\n\n\n<p>The <code>setData()<\/code> allows you to set the drag operation&#8217;s data to the specified format and data:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">dataTransfer<\/span><span class=\"hljs-selector-class\">.setData<\/span>(<span class=\"hljs-selector-tag\">format<\/span>, <span class=\"hljs-selector-tag\">data<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The format can be <code>text\/plain<\/code> or <code>text\/uri-list<\/code>. And the data can be a string representing the data to add to the drag object.<\/p>\n\n\n\n<p>The <code>getData()<\/code> method retrieves the drag data stored by the <code>setData()<\/code> method. <\/p>\n\n\n\n<p>The <code>getData()<\/code> accepts one argument:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">dataTransfer(format)<\/code><\/span><\/pre>\n\n\n<p>The format can be <code>text\/plain<\/code> or <code>text\/uri-list<\/code>. The <code>getData()<\/code> returns a string stored by the <code>setData()<\/code> method or an empty string if the drag operation doesn&#8217;t include data.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript drag and drop example<\/h2>\n\n\n\n<p>We&#8217;ll develop the following <a href=\"https:\/\/www.javascripttutorial.net\/sample\/webapis\/drag-n-drop-basics\/\" target=\"_blank\" rel=\"noreferrer noopener\">simple drag-and-drop application<\/a> to demonstrate the JavaScript drag and drop API:<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Create the project structure<\/h3>\n\n\n\n<p>First, create a new folder called <code>drag-n-drop-basics<\/code>. Inside this folder, create two subfolders called <code>css<\/code> and <code>js<\/code>.<\/p>\n\n\n\n<p>Second, create a new file called <code>app.js<\/code> in the <code>js<\/code> folder, <code>style.css<\/code> in the <code>css<\/code> folder, and <code>index.html<\/code> in the <code>drag-n-drop-basics<\/code> folder.<\/p>\n\n\n\n<p>Third, place the link to the <code>style.css<\/code> and script tag that links to the <code>app.js<\/code> in the <code>index.html<\/code> file like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span> <span class=\"hljs-attr\">lang<\/span>=<span class=\"hljs-string\">\"en\"<\/span>&gt;<\/span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">charset<\/span>=<span class=\"hljs-string\">\"UTF-8\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"viewport\"<\/span> <span class=\"hljs-attr\">content<\/span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>JavaScript - Drag and Drop Demo<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link<\/span> <span class=\"hljs-attr\">rel<\/span>=<span class=\"hljs-string\">\"stylesheet\"<\/span> <span class=\"hljs-attr\">href<\/span>=<span class=\"hljs-string\">\"css\/style.css\"<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n   \n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span> <span class=\"hljs-attr\">src<\/span>=<span class=\"hljs-string\">\"js\/app.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>For the CSS, you can <a href=\"https:\/\/www.javascripttutorial.net\/sample\/webapis\/drag-n-drop-basics\/css\/style.css\" target=\"_blank\" rel=\"noreferrer noopener\">grab it from here<\/a>.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Build the index.html file<\/h3>\n\n\n\n<p>Place the following code in the <code>index.html<\/code> file:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span> <span class=\"hljs-attr\">lang<\/span>=<span class=\"hljs-string\">\"en\"<\/span>&gt;<\/span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">charset<\/span>=<span class=\"hljs-string\">\"UTF-8\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"viewport\"<\/span> <span class=\"hljs-attr\">content<\/span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>JavaScript - Drag and Drop Demo<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link<\/span> <span class=\"hljs-attr\">rel<\/span>=<span class=\"hljs-string\">\"stylesheet\"<\/span> <span class=\"hljs-attr\">href<\/span>=<span class=\"hljs-string\">\"css\/style.css\"<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"container\"<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1<\/span>&gt;<\/span>JavaScript - Drag and Drop<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">h1<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"drop-targets\"<\/span>&gt;<\/span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"box\"<\/span>&gt;<\/span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"item\"<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"item\"<\/span>&gt;<\/span>\n                <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n            <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"box\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"box\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span> <span class=\"hljs-attr\">src<\/span>=<span class=\"hljs-string\">\"js\/app.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this index.html file, we used the <code>.container<\/code> element to align the heading and <code>drop-targets<\/code> element.<\/p>\n\n\n\n<p>Inside the drop-targets element, we placed three <code>div<\/code> elements with the same class <code>box<\/code>. And we place another div element with the class <code>item<\/code> in the first box.<\/p>\n\n\n\n<p>If you open the <code>index.html<\/code> and try to drag the yellow box, you&#8217;ll see the cursor indicating that you cannot drag:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"490\" height=\"212\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-no-draggable.png\" alt=\"\" class=\"wp-image-87919\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-no-draggable.png 490w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-no-draggable-300x130.png 300w\" sizes=\"(max-width: 490px) 100vw, 490px\" \/><\/figure>\n\n\n\n<p>To make the element draggable, you add the <code>draggable<\/code> property with the value of <code>true<\/code> to its HTML tag as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span><\/span>=<span class=\"hljs-string\">\"item\"<\/span> id=<span class=\"hljs-string\">\"item\"<\/span> draggable=<span class=\"hljs-string\">\"true\"<\/span>&gt;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Now, if you save the <code>index.html<\/code>, open it in the browser again, you&#8217;ll see that you can drag the item element like this:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"490\" height=\"212\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-no-draggable-property.png\" alt=\"\" class=\"wp-image-87918\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-no-draggable-property.png 490w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-no-draggable-property-300x130.png 300w\" sizes=\"(max-width: 490px) 100vw, 490px\" \/><\/figure>\n\n\n\n<h3 class=\"wp-block-heading\">Handle events on the draggable element<\/h3>\n\n\n\n<p>The <code>style.css<\/code> file has the <code>.hide<\/code> class that hides an element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.hide<\/span> {\n    <span class=\"hljs-attribute\">display<\/span>: none;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In the <code>app.js<\/code> file, you add the following code:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/\/ select the item element<\/span>\n<span class=\"hljs-keyword\">const<\/span> item = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'.item'<\/span>);\n\n<span class=\"hljs-comment\">\/\/ attach the dragstart event handler<\/span>\nitem.addEventListener(<span class=\"hljs-string\">'dragstart'<\/span>, dragStart);\n\n<span class=\"hljs-comment\">\/\/ handle the dragstart<\/span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">dragStart<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n   <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'drag starts...'<\/span>);\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works:<\/p>\n\n\n\n<ul><li>First, select the draggable element using the <code>querySelector()<\/code>.<\/li><li>Second, attach a <code>dragstart<\/code> event handler to the draggable element.<\/li><li>Third, define the <code>dragStart()<\/code> function to handle the <code>dragstart<\/code> event.<\/li><\/ul>\n\n\n\n<p>If you open the index.html file and start dragging the draggable element, you&#8217;ll see the <code>drag starts...<\/code> message in the console.<\/p>\n\n\n\n<p>In the <code>dragStart<\/code> event handler, you need to store the <code>id<\/code> of the draggable element. And you need to hide it:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">dragStart<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n    e.dataTransfer.setData(<span class=\"hljs-string\">'text\/plain'<\/span>, e.target.id);\n    e.target.classList.add(<span class=\"hljs-string\">'hide'<\/span>);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you drag the element, you&#8217;ll see that it disappears once you start dragging.  <\/p>\n\n\n\n<p>To solve this, you use the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-bom\/javascript-settimeout\/\">setTimeout()<\/a><\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">dragStart<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n    e.dataTransfer.setData(<span class=\"hljs-string\">'text\/plain'<\/span>, e.target.id);\n    setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n        e.target.classList.add(<span class=\"hljs-string\">'hide'<\/span>);\n    }, <span class=\"hljs-number\">0<\/span>);\n\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Now, you can drag the draggable element out of its original position:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"490\" height=\"212\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-dragstart-event.png\" alt=\"\" class=\"wp-image-87921\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-dragstart-event.png 490w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-dragstart-event-300x130.png 300w\" sizes=\"(max-width: 490px) 100vw, 490px\" \/><\/figure>\n\n\n\n<h3 class=\"wp-block-heading\">Handle events on drop targets<\/h3>\n\n\n\n<p>The style.css file also has a CSS class called <code>.drag-over<\/code> that turns the border style of the drop target into dashed and red:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.drag-over<\/span> {\n    <span class=\"hljs-attribute\">border<\/span>: dashed <span class=\"hljs-number\">3px<\/span> red;\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In the app.js, you need to select the drop target elements and handle the <code>dragenter<\/code>, <code>dragover<\/code>, <code>dragleave<\/code>, and <code>drop<\/code> events of these elements:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> boxes = <span class=\"hljs-built_in\">document<\/span>.querySelectorAll(<span class=\"hljs-string\">'.box'<\/span>);\n\nboxes.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">box<\/span> =&gt;<\/span> {\n    box.addEventListener(<span class=\"hljs-string\">'dragenter'<\/span>, dragEnter)\n    box.addEventListener(<span class=\"hljs-string\">'dragover'<\/span>, dragOver);\n    box.addEventListener(<span class=\"hljs-string\">'dragleave'<\/span>, dragLeave);\n    box.addEventListener(<span class=\"hljs-string\">'drop'<\/span>, drop);\n});\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">dragEnter<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">dragOver<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">dragLeave<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">drop<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The border style of the drop target should change when the <code>dragenter<\/code> and <code>dragover<\/code> event occurs. It should restore the style when the <code>dragleave<\/code> and <code>drop<\/code> event occurs.<\/p>\n\n\n\n<p>To do it, you add and remove the <code>drag-over<\/code> class to the <code>drop<\/code> target like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">dragEnter<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n    e.target.classList.add(<span class=\"hljs-string\">'drag-over'<\/span>);\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">dragOver<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n    e.target.classList.add(<span class=\"hljs-string\">'drag-over'<\/span>);\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">dragLeave<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n    e.target.classList.remove(<span class=\"hljs-string\">'drag-over'<\/span>);\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">drop<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n    e.target.classList.remove(<span class=\"hljs-string\">'drag-over'<\/span>);\n\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Now, if you drag the draggable element to another drop target, you&#8217;ll see that the border of the drop target changes as shown in the following picture:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"490\" height=\"212\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-change-border-color.png\" alt=\"\" class=\"wp-image-87922\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-change-border-color.png 490w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-change-border-color-300x130.png 300w\" sizes=\"(max-width: 490px) 100vw, 490px\" \/><\/figure>\n\n\n\n<p>To make the drop target valid, you need to call <code>event.preventDefault()<\/code> in the <code>dragenter<\/code> and <code>dragover<\/code> event handlers like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">dragEnter<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n    e.preventDefault();\n    e.target.classList.add(<span class=\"hljs-string\">'drag-over'<\/span>);\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">dragOver<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n    e.preventDefault();\n    e.target.classList.add(<span class=\"hljs-string\">'drag-over'<\/span>);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you don&#8217;t do this, the <code>drop<\/code> event will never fire because the <code>div<\/code> element is not a valid drop target by default.<\/p>\n\n\n\n<p>If you drag the draggable element to a drop target, you&#8217;ll see that the cursor changes indicating that you can drop the element:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"490\" height=\"212\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-drop-event.png\" alt=\"\" class=\"wp-image-87924\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-drop-event.png 490w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-drop-event-300x130.png 300w\" sizes=\"(max-width: 490px) 100vw, 490px\" \/><\/figure>\n\n\n\n<p>Now, if you drop the item element, you&#8217;ll see that it disappears immediately.<\/p>\n\n\n\n<p>To solve this issue, you need to add handle the <code>drop<\/code> event.<\/p>\n\n\n\n<ul><li>First, get the <code>id<\/code> of the draggable element using the <code>getData()<\/code> method of the <code>dataTransfer<\/code> object.<\/li><li>Second, append the draggable element as a child element of the drop target element.<\/li><li>Third, remove the <code>hide<\/code> class from the <code>draggable<\/code> element.<\/li><\/ul>\n\n\n\n<p>The following code shows the complete <code>drop<\/code> event handler:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">drop<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n    e.target.classList.remove(<span class=\"hljs-string\">'drag-over'<\/span>);\n\n    <span class=\"hljs-comment\">\/\/ get the draggable element<\/span>\n    <span class=\"hljs-keyword\">const<\/span> id = e.dataTransfer.getData(<span class=\"hljs-string\">'text\/plain'<\/span>);\n    <span class=\"hljs-keyword\">const<\/span> draggable = <span class=\"hljs-built_in\">document<\/span>.getElementById(id);\n\n    <span class=\"hljs-comment\">\/\/ add it to the drop target<\/span>\n    e.target.appendChild(draggable);\n\n    <span class=\"hljs-comment\">\/\/ display the draggable element<\/span>\n    draggable.classList.remove(<span class=\"hljs-string\">'hide'<\/span>);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you drag and drop the draggable element now, it should work as expected.<\/p>\n\n\n\n<p>The following shows the complete app.js file:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/* draggable element *\/<\/span>\n<span class=\"hljs-keyword\">const<\/span> item = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'.item'<\/span>);\n\nitem.addEventListener(<span class=\"hljs-string\">'dragstart'<\/span>, dragStart);\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">dragStart<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n    e.dataTransfer.setData(<span class=\"hljs-string\">'text\/plain'<\/span>, e.target.id);\n    setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n        e.target.classList.add(<span class=\"hljs-string\">'hide'<\/span>);\n    }, <span class=\"hljs-number\">0<\/span>);\n}\n\n\n<span class=\"hljs-comment\">\/* drop targets *\/<\/span>\n<span class=\"hljs-keyword\">const<\/span> boxes = <span class=\"hljs-built_in\">document<\/span>.querySelectorAll(<span class=\"hljs-string\">'.box'<\/span>);\n\nboxes.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">box<\/span> =&gt;<\/span> {\n    box.addEventListener(<span class=\"hljs-string\">'dragenter'<\/span>, dragEnter)\n    box.addEventListener(<span class=\"hljs-string\">'dragover'<\/span>, dragOver);\n    box.addEventListener(<span class=\"hljs-string\">'dragleave'<\/span>, dragLeave);\n    box.addEventListener(<span class=\"hljs-string\">'drop'<\/span>, drop);\n});\n\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">dragEnter<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n    e.preventDefault();\n    e.target.classList.add(<span class=\"hljs-string\">'drag-over'<\/span>);\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">dragOver<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n    e.preventDefault();\n    e.target.classList.add(<span class=\"hljs-string\">'drag-over'<\/span>);\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">dragLeave<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n    e.target.classList.remove(<span class=\"hljs-string\">'drag-over'<\/span>);\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">drop<\/span>(<span class=\"hljs-params\">e<\/span>) <\/span>{\n    e.target.classList.remove(<span class=\"hljs-string\">'drag-over'<\/span>);\n\n    <span class=\"hljs-comment\">\/\/ get the draggable element<\/span>\n    <span class=\"hljs-keyword\">const<\/span> id = e.dataTransfer.getData(<span class=\"hljs-string\">'text\/plain'<\/span>);\n    <span class=\"hljs-keyword\">const<\/span> draggable = <span class=\"hljs-built_in\">document<\/span>.getElementById(id);\n\n    <span class=\"hljs-comment\">\/\/ add it to the drop target<\/span>\n    e.target.appendChild(draggable);\n\n    <span class=\"hljs-comment\">\/\/ display the draggable element<\/span>\n    draggable.classList.remove(<span class=\"hljs-string\">'hide'<\/span>);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>And <a href=\"https:\/\/www.javascripttutorial.net\/sample\/webapis\/drag-n-drop-basics\/\" target=\"_blank\" rel=\"noreferrer noopener\">here is the link to the demo<\/a>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Add the <code>draggable<\/code> property with the value of true to an element to make it draggable.<\/li><li>The <code>dragstart<\/code>, <code>drag<\/code>, and <code>dragend<\/code> events fire on the draggable element.<\/li><li>The <code>dragenter<\/code>, <code>dragover<\/code>, <code>dragleave<\/code> or <code>drop<\/code> events fire on the drop target.<\/li><li>Call the <code>event.preventDefault()<\/code> on the <code>dragenter<\/code> and <code>dragover<\/code> event handlers to make an element a valid drop target.<\/li><li>Use the <code>event.dataTransfer<\/code> object with the <code>setData()<\/code> and <code>getData()<\/code> methods to transfer data in the drag-and-drop operation.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"87915\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/\"\n\t\t\t\tdata-post-title=\"JavaScript Drag and Drop\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"87915\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/\"\n\t\t\t\tdata-post-title=\"JavaScript Drag and Drop\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>This tutorial introduces you to the JavaScript Drag and Drop API and shows you how to handle drag and drop events effectively.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":87825,"menu_order":5,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>An Essential Guide to JavaScript Drag and Drop By Examples<\/title>\n<meta name=\"description\" content=\"This tutorial introduces you to the JavaScript Drag and Drop API and shows you how to handle drag and drop events effectively.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"An Essential Guide to JavaScript Drag and Drop By Examples\" \/>\n<meta property=\"og:description\" content=\"This tutorial introduces you to the JavaScript Drag and Drop API and shows you how to handle drag and drop events effectively.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-08T08:59:44+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-no-draggable.png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"9 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/\",\"name\":\"An Essential Guide to JavaScript Drag and Drop By Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-09-28T04:29:40+00:00\",\"dateModified\":\"2022-01-08T08:59:44+00:00\",\"description\":\"This tutorial introduces you to the JavaScript Drag and Drop API and shows you how to handle drag and drop events effectively.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Web API\",\"item\":\"https:\/\/www.javascripttutorial.net\/web-apis\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Drag and Drop\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"An Essential Guide to JavaScript Drag and Drop By Examples","description":"This tutorial introduces you to the JavaScript Drag and Drop API and shows you how to handle drag and drop events effectively.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/","og_locale":"en_US","og_type":"article","og_title":"An Essential Guide to JavaScript Drag and Drop By Examples","og_description":"This tutorial introduces you to the JavaScript Drag and Drop API and shows you how to handle drag and drop events effectively.","og_url":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-01-08T08:59:44+00:00","og_image":[{"url":"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Drag-and-Drop-no-draggable.png"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"9 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/","url":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/","name":"An Essential Guide to JavaScript Drag and Drop By Examples","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-09-28T04:29:40+00:00","dateModified":"2022-01-08T08:59:44+00:00","description":"This tutorial introduces you to the JavaScript Drag and Drop API and shows you how to handle drag and drop events effectively.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-drag-and-drop\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"Web API","item":"https:\/\/www.javascripttutorial.net\/web-apis\/"},{"@type":"ListItem","position":3,"name":"JavaScript Drag and Drop"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87915"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=87915"}],"version-history":[{"count":4,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87915\/revisions"}],"predecessor-version":[{"id":88726,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87915\/revisions\/88726"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87825"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=87915"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
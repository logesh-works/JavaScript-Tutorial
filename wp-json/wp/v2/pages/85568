{"id":85568,"date":"2020-02-13T23:19:26","date_gmt":"2020-02-14T07:19:26","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=85568"},"modified":"2020-04-23T19:06:42","modified_gmt":"2020-04-24T02:06:42","slug":"javascript-event-delegation","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/","title":{"rendered":"JavaScript Event Delegation"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the JavaScript event delegation that adds a single event handler to the parent element instead of having to register multiple event handlers to the child elements.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to JavaScript Event Delegation<\/h2>\n\n\n\n<p>Suppose that you have the following menu:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"menu\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"home\"<\/span>&gt;<\/span>home<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">a<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">li<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"dashboard\"<\/span>&gt;<\/span>Dashboard<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">a<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">li<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"report\"<\/span>&gt;<\/span>report<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">a<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">li<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">ul<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To handle the <code>click<\/code> event of each menu item, you may add the corresponding <code>click<\/code> event handlers:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> home = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#home'<\/span>);\nhome.addEventListener(<span class=\"hljs-string\">'home'<\/span>,(event) =&gt; {\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Home menu item was clicked'<\/span>);\n});\n\n<span class=\"hljs-keyword\">let<\/span> dashboard = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#dashboard'<\/span>);\ndashboard.addEventListener(<span class=\"hljs-string\">'dashboard'<\/span>,(event) =&gt; {\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Dashboard menu item was clicked'<\/span>);\n});\n\n<span class=\"hljs-keyword\">let<\/span> report = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#report'<\/span>);\nreport.addEventListener(<span class=\"hljs-string\">'report'<\/span>,(event) =&gt; {\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Report menu item was clicked'<\/span>);\n});\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In JavaScript, if you have a large number of <a href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/handling-events-in-javascript\/\">event handlers<\/a> on a page, these event handlers will directly impact the performance because of the following reasons:<\/p>\n\n\n\n<ul><li>First, each event handler is a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-function\/\">function<\/a> which is also an <a href=\"https:\/\/www.javascripttutorial.net\/javascript-objects\/\">object<\/a> that takes up memory. The more objects in the memory, the slower the performance.<\/li><li>Second, it takes time to assign all the event handlers, which causes a delay in the interactivity of the page.<\/li><\/ul>\n\n\n\n<p>To solve this issue, you can leverage the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/\">event bubbling<\/a>.<\/p>\n\n\n\n<p>Instead of having multiple event handlers, you can assign a single event handler to handle all the <code>click<\/code> events:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> menu = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#menu'<\/span>);\n\nmenu.addEventListener(<span class=\"hljs-string\">'click'<\/span>, (event) =&gt; {\n    <span class=\"hljs-keyword\">let<\/span> target = event.target;\n\n    <span class=\"hljs-keyword\">switch<\/span>(target.id) {\n        <span class=\"hljs-keyword\">case<\/span> <span class=\"hljs-string\">'home'<\/span>:\n            <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Home menu item was clicked'<\/span>);\n            <span class=\"hljs-keyword\">break<\/span>;\n        <span class=\"hljs-keyword\">case<\/span> <span class=\"hljs-string\">'dashboard'<\/span>:\n            <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Dashboard menu item was clicked'<\/span>);\n            <span class=\"hljs-keyword\">break<\/span>;\n        <span class=\"hljs-keyword\">case<\/span> <span class=\"hljs-string\">'report'<\/span>:\n            <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Report menu item was clicked'<\/span>);\n            <span class=\"hljs-keyword\">break<\/span>;\n    }\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>When you click any <code>&lt;a&gt;<\/code> element inside the <code>&lt;ul&gt;<\/code> element with the id <code>menu<\/code>, the <code>click<\/code> event bubbles to the parent element which is the <code>&lt;ul&gt;<\/code> element. So instead of handling the <code>click<\/code> event of the individual <code>&lt;a&gt;<\/code> element, you can capture the <code>click<\/code> event at the parent element.<\/li><li>In the <code>click<\/code> event listener, you can access the <code>target<\/code> property which references the element that dispatches the event. To get the <code>id<\/code> of the element that the event actually fires, you use the <code>target.id<\/code> property.<\/li><li>Once having the <code>id<\/code> of the element that fires the <code>click<\/code> event, you can have code that handles the event correspondingly.<\/li><\/ul>\n\n\n\n<p>The way that we handle the too-many-event-handlers problem is called the event delegation.<\/p>\n\n\n\n<div class=\"entry-content\">\n<p>The event delegation refers to the technique of levering event bubbling to handle events at a higher level in the DOM than the element on which the event originated.<\/p>\n<\/div>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript event delegation benefits<\/h2>\n\n\n\n<p>When it is possible, you can have a single event handler on the <code>document<\/code> that will handle all the events of a particular type. By doing this, you gain the following benefits:<\/p>\n\n\n\n<ul><li>Less memory usage, better performance.<\/li><li>Less time required to set up event handlers on the page.<\/li><li>The <code>document<\/code> object is available immediately. As long as the element is rendered, it can start functioning correctly without delay. You don&#8217;t need to wait for the <code>DOMContentLoaded<\/code> or <code>load<\/code> events.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Having a large number of event handlers will take up memory and degrade the performance of a page.<\/li><li>The event delegation technique utilizes the event bubbling to handle event at a higher level in the DOM than the element on which the event originated.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"85568\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/\"\n\t\t\t\tdata-post-title=\"JavaScript Event Delegation\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"85568\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/\"\n\t\t\t\tdata-post-title=\"JavaScript Event Delegation\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the JavaScript event delegation that adds a single event handler to the parent element instead of having to register multiple event handlers to the child elements.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":85107,"menu_order":46,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Understanding JavaScript Event Delegation Technique By Examples<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to use the JavaScript event delegation that adds a single event handler to the parent element instead of having to register multiple event handlers to the child elements.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Understanding JavaScript Event Delegation Technique By Examples\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn how to use the JavaScript event delegation that adds a single event handler to the parent element instead of having to register multiple event handlers to the child elements.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2020-04-24T02:06:42+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/\",\"name\":\"Understanding JavaScript Event Delegation Technique By Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-02-14T07:19:26+00:00\",\"dateModified\":\"2020-04-24T02:06:42+00:00\",\"description\":\"In this tutorial, you will learn how to use the JavaScript event delegation that adds a single event handler to the parent element instead of having to register multiple event handlers to the child elements.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript DOM\",\"item\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Event Delegation\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Understanding JavaScript Event Delegation Technique By Examples","description":"In this tutorial, you will learn how to use the JavaScript event delegation that adds a single event handler to the parent element instead of having to register multiple event handlers to the child elements.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/","og_locale":"en_US","og_type":"article","og_title":"Understanding JavaScript Event Delegation Technique By Examples","og_description":"In this tutorial, you will learn how to use the JavaScript event delegation that adds a single event handler to the parent element instead of having to register multiple event handlers to the child elements.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/","og_site_name":"PriFix Tutorial","article_modified_time":"2020-04-24T02:06:42+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/","url":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/","name":"Understanding JavaScript Event Delegation Technique By Examples","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-02-14T07:19:26+00:00","dateModified":"2020-04-24T02:06:42+00:00","description":"In this tutorial, you will learn how to use the JavaScript event delegation that adds a single event handler to the parent element instead of having to register multiple event handlers to the child elements.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"JavaScript DOM","item":"https:\/\/www.javascripttutorial.net\/javascript-dom\/"},{"@type":"ListItem","position":3,"name":"JavaScript Event Delegation"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85568"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=85568"}],"version-history":[{"count":2,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85568\/revisions"}],"predecessor-version":[{"id":86689,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85568\/revisions\/86689"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85107"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=85568"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
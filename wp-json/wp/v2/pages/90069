{"id":90069,"date":"2022-02-17T23:29:53","date_gmt":"2022-02-18T07:29:53","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=90069"},"modified":"2022-02-17T23:30:48","modified_gmt":"2022-02-18T07:30:48","slug":"regex-alternation","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/","title":{"rendered":"Regex Alternation"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about JavaScript regex alternation, which is the &#8220;OR&#8221; operator in regular expressions.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"introduction-to-the-regex-alternation\">Introduction to the regex alternation<\/h2>\n\n\n\n<p>Regex uses the pipe operator (<code>|<\/code>) to represent an alternation, which is like the logical OR operator in regular expressions. The alternation allows you to match either A or B:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">A | B<\/code><\/span><\/pre>\n\n\n<p>The following example uses the alternation to match either the <code>JavaScript<\/code> or <code>JS<\/code> in the string <code>'JavaScript and JS'<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> s = <span class=\"hljs-string\">'JavaScript and JS'<\/span>;\n<span class=\"hljs-keyword\">const<\/span> pattern = <span class=\"hljs-regexp\">\/JavaScript|JS\/g<\/span>;\n<span class=\"hljs-keyword\">const<\/span> match = s.match(pattern);\n\n<span class=\"hljs-built_in\">console<\/span>.log(match);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"plaintext\" data-shcb-language-slug=\"plaintext\"><span><code class=\"hljs language-plaintext\">&#91; 'JavaScript', 'JS' ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">plaintext<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">plaintext<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\" id=\"regex-alternation-examples\">Regex alternation examples<\/h2>\n\n\n\n<p>The following example illustrates the practical applications of the regex alternation.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\" id=\"1-using-regex-alternation-to-match-time-string-in-the-hh-mm-format\">1) Using regex alternation to match time string in the hh:mm format<\/h3>\n\n\n\n<p>The following regular expression that combines the <code>\\d<\/code> <a href=\"https:\/\/www.pythontutorial.net\/python-regex\/python-regex-character-set\/\">character set<\/a> with the <a href=\"https:\/\/www.pythontutorial.net\/python-regex\/python-regex-quantifiers\/\">quantifiers<\/a> <code>{}<\/code> to match a time string in the format <code>hh:mm<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">\/\\d{<span class=\"hljs-number\">2<\/span>}:\\d{<span class=\"hljs-number\">2<\/span>}\/<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this regular expression:<\/p>\n\n\n\n<ul><li><code>\\d{2}<\/code> matches two digits.<\/li><li><code>:<\/code> matches the colon character<\/li><li><code>\\d{2}<\/code> matches two digits<\/li><\/ul>\n\n\n\n<p>But the rule <code>\\d{2}<\/code> also matches an invalid hour or minute for example <code>99<\/code>. To make it match more precisely, you can use an alternation. <\/p>\n\n\n\n<p>Since the valid hours are from <code>01<\/code> to <code>23<\/code>, you can use the following pattern to match the hour part:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">&#91;<span class=\"hljs-number\">01<\/span>]\\d|<span class=\"hljs-number\">2<\/span>&#91;<span class=\"hljs-number\">0<\/span><span class=\"hljs-number\">-3<\/span>]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this pattern:<\/p>\n\n\n\n<ul><li>The rule <code>[01]<\/code> matches a single digit 0 or 1 and the rule <code>\\d<\/code> matches a single digit from 0 to 9. Therefore, the rule <code>[01]\\d<\/code> matches 00, 01 to 19<\/li><li>The literal number <code>2<\/code> matches the digit 2 and the rule <code>[0-3]<\/code> matches a single digit from 0 to 3 including 0, 1, 2, 3. Therefore, the rule <code>2[0-3]<\/code> matches two digits 20, 21, 22, and 23.<\/li><\/ul>\n\n\n\n<p>Hence, the rule <code>[01]\\d|2[0-3]<\/code> matches two digits from 00 to 23 <\/p>\n\n\n\n<p>Similarly, you can use the following rule to match a valid minute that ranges from 00 to 59:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">&#91;<span class=\"hljs-number\">0<\/span><span class=\"hljs-number\">-5<\/span>]\\d<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following regular expression combines those rules to match a time string in the <code>hh:mm<\/code> format:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">\/&#91;<span class=\"hljs-number\">01<\/span>]\\d|<span class=\"hljs-number\">2<\/span>&#91;<span class=\"hljs-number\">0<\/span><span class=\"hljs-number\">-3<\/span>]:&#91;<span class=\"hljs-number\">0<\/span><span class=\"hljs-number\">-5<\/span>]\\d\/g<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, this regular expression will not work as expected. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> time = <span class=\"hljs-string\">'05:30 31:62 23:45 26:99'<\/span>;\n<span class=\"hljs-keyword\">const<\/span> pattern = <span class=\"hljs-regexp\">\/&#91;01]\\d|2&#91;0-3]:&#91;0-5]\\d\/g<\/span>;\n<span class=\"hljs-keyword\">const<\/span> match = time.match(pattern);\n\n<span class=\"hljs-built_in\">console<\/span>.log(match);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">&#91; <span class=\"hljs-string\">'05'<\/span>, <span class=\"hljs-string\">'23:45'<\/span> ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the regex engine treats the pattern <code>[01]\\d|2[0-3]:[0-5]\\d<\/code>  as two parts separated by the alternation:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">&#91;<span class=\"hljs-number\">01<\/span>]\\d\nOR\n<span class=\"hljs-number\">2<\/span>&#91;<span class=\"hljs-number\">0<\/span><span class=\"hljs-number\">-3<\/span>]):(&#91;<span class=\"hljs-number\">0<\/span><span class=\"hljs-number\">-5<\/span>]\\d)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To fix it, you use parentheses to wrap the alternation. It indicates that only the wrapped part is alternated, not the entire pattern:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">(&#91;<span class=\"hljs-number\">01<\/span>]\\d|<span class=\"hljs-number\">2<\/span>&#91;<span class=\"hljs-number\">0<\/span><span class=\"hljs-number\">-3<\/span>]):&#91;<span class=\"hljs-number\">0<\/span><span class=\"hljs-number\">-5<\/span>]\\d<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Now, the script works as expected:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> time = <span class=\"hljs-string\">'05:30 31:62 23:45 26:99'<\/span>;\n<span class=\"hljs-keyword\">const<\/span> pattern = <span class=\"hljs-regexp\">\/(&#91;01]\\d|2&#91;0-3]):&#91;0-5]\\d\/g<\/span>;\n<span class=\"hljs-keyword\">const<\/span> match = time.match(pattern);\n\n<span class=\"hljs-built_in\">console<\/span>.log(match);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">&#91; <span class=\"hljs-string\">'05:30'<\/span>, <span class=\"hljs-string\">'23:45'<\/span> ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\" id=\"summary\">Summary<\/h2>\n\n\n\n<ul><li>The alternation <code>A | B<\/code> matches either <code>A<\/code> or <code>B<\/code>. <\/li><li>The alternation is like an OR operator in regular expressions.<\/li><li>Use parentheses <code>()<\/code> to wrap the parts that you want to apply the alternation.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"90069\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/\"\n\t\t\t\tdata-post-title=\"Regex Alternation\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"90069\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/\"\n\t\t\t\tdata-post-title=\"Regex Alternation\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn about JavaScript regex alternation, which is the &#8220;OR&#8221; operator in regular expressions. Introduction to the regex alternation Regex uses the pipe operator (|) to represent an alternation, which is like the logical OR operator in regular expressions. The alternation allows you to match either A or B: The following [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":90024,"menu_order":10,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Regex Alternation<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Regex Alternation\" \/>\n<meta property=\"og:description\" content=\"Summary: in this tutorial, you&#8217;ll learn about JavaScript regex alternation, which is the &#8220;OR&#8221; operator in regular expressions. Introduction to the regex alternation Regex uses the pipe operator (|) to represent an alternation, which is like the logical OR operator in regular expressions. The alternation allows you to match either A or B: The following [&hellip;]\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-18T07:30:48+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/\",\"name\":\"Regex Alternation\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2022-02-18T07:29:53+00:00\",\"dateModified\":\"2022-02-18T07:30:48+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Javascript Regex\",\"item\":\"https:\/\/www.javascripttutorial.net\/javascript-regex\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Regex Alternation\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Regex Alternation","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/","og_locale":"en_US","og_type":"article","og_title":"Regex Alternation","og_description":"Summary: in this tutorial, you&#8217;ll learn about JavaScript regex alternation, which is the &#8220;OR&#8221; operator in regular expressions. Introduction to the regex alternation Regex uses the pipe operator (|) to represent an alternation, which is like the logical OR operator in regular expressions. The alternation allows you to match either A or B: The following [&hellip;]","og_url":"https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-02-18T07:30:48+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/","url":"https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/","name":"Regex Alternation","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2022-02-18T07:29:53+00:00","dateModified":"2022-02-18T07:30:48+00:00","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-regex\/regex-alternation\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"Javascript Regex","item":"https:\/\/www.javascripttutorial.net\/javascript-regex\/"},{"@type":"ListItem","position":3,"name":"Regex Alternation"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/90069"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=90069"}],"version-history":[{"count":5,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/90069\/revisions"}],"predecessor-version":[{"id":90074,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/90069\/revisions\/90074"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/90024"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=90069"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
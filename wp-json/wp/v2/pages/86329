{"id":86329,"date":"2020-04-03T21:12:25","date_gmt":"2020-04-04T04:12:25","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=86329"},"modified":"2022-02-14T18:23:33","modified_gmt":"2022-02-15T02:23:33","slug":"javascript-array-flatmap","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/","title":{"rendered":"JavaScript Array flatMap"},"content":{"rendered":"\r\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll about the JavaScript Array <code>flatMap()<\/code> method that maps each element in an array using a mapping function and flattens the result into a new array.<\/p>\r\n\r\n\r\n\r\n<h2 class=\"wp-block-heading\">Introduction to JavaScript Array <code>flatMap()<\/code> method<\/h2>\r\n\r\n\r\n\r\n<p>The <code><a href=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flat\/\">flat()<\/a><\/code> method creates a new <a href=\"https:\/\/www.javascripttutorial.net\/javascript-array\/\">array<\/a> with the elements of the subarrays concatenated into it.<\/p>\r\n\r\n\r\n\r\n<p>The <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-array-map\/\">map()<\/a><\/code> method creates a new array whose elements are the results of a mapping function.<\/p>\r\n\r\n\r\n\r\n<p>The <code>flatMap()<\/code> method is the combination of the <code>map()<\/code> method followed by the <code>flat()<\/code> method of depth 1.<\/p>\r\n\r\n\r\n\r\n<p>The <code>flatMap()<\/code> method first maps each element in an array using a mapping function and then flattens the results into a new array.<\/p>\r\n\r\n\r\n\r\n<p>The following shows the syntax of the <code>flatMap()<\/code> method:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> newArray = arrayObject.flatMap(callback,thisArg);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>The <code>flatMap()<\/code> method takes two parameters:<\/p>\r\n\r\n\r\n\r\n<h3 class=\"wp-block-heading\">1) The <code>callback<\/code> mapping function<\/h3>\r\n\r\n\r\n\r\n<p>The <code>callback<\/code> is the mapping function has the same syntax as the one in the <code>map()<\/code> method:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">callback<\/span>(<span class=\"hljs-params\">currentValue &#91;&#91;,index], array]<\/span>);<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<h3 class=\"wp-block-heading\">2) The <code>thisArg<\/code> argument<\/h3>\r\n\r\n\r\n\r\n<p>The optional <code>thisArg<\/code> argument is a value to use as <code>this<\/code> when executing the <code>callback<\/code>.<\/p>\r\n\r\n\r\n\r\n<p>Note that the <code>flatMap()<\/code> method doesn&#8217;t modify the original array.<\/p>\r\n\r\n\r\n\r\n<h2 class=\"wp-block-heading\">JavaScript Array <code>flatMap()<\/code> examples<\/h2>\r\n\r\n\r\n\r\n<p>Let&#8217;s take some examples of using the <code>flatMap()<\/code> method.<\/p>\r\n\r\n\r\n\r\n<h3 class=\"wp-block-heading\">1) Creating words from sentences example<\/h3>\r\n\r\n\r\n\r\n<p>Suppose that you have the following array:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> sentences = &#91;<span class=\"hljs-string\">\"JavaScript Array flatMap()\"<\/span>, <span class=\"hljs-string\">\" \"<\/span>, <span class=\"hljs-string\">\"is\"<\/span>, <span class=\"hljs-string\">\" \"<\/span>, <span class=\"hljs-string\">\"Awesome\"<\/span>];<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n<p>The following <code>map()<\/code> function splits the words of\u00a0 sentences:<\/p>\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> words = sentences.map(<span class=\"hljs-function\"><span class=\"hljs-params\">s<\/span> =&gt;<\/span> s.split(<span class=\"hljs-string\">' '<\/span>));\r\n<span class=\"hljs-built_in\">console<\/span>.log(words);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Output:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">&#91;\r\n    &#91; <span class=\"hljs-string\">'JavaScript'<\/span>, <span class=\"hljs-string\">'Array'<\/span>, <span class=\"hljs-string\">'flatMap()'<\/span> ],\r\n    &#91; <span class=\"hljs-string\">' '<\/span> ],\r\n    &#91; <span class=\"hljs-string\">'is'<\/span> ],\r\n    &#91; <span class=\"hljs-string\">' '<\/span> ],\r\n    &#91; <span class=\"hljs-string\">'Awesome'<\/span> ]\r\n]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>The result is an array of nested arrays filled by words. To flatten the result, you can use the <code>flat()<\/code> method on the result of the <code>map()<\/code> method. However, it&#8217;ll be more concise to use the <code>flatMap()<\/code> method.<\/p>\r\n\r\n\r\n\r\n<p>The <code>flatMap()<\/code> creates a flattened array by running each sentence in the array through a mapping function and flattening the mapped results:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> sentences = &#91;\r\n    <span class=\"hljs-string\">\"JavaScript Array flatMap()\"<\/span>, \r\n    <span class=\"hljs-string\">\" \"<\/span>, \r\n    <span class=\"hljs-string\">\"is\"<\/span>, \r\n    <span class=\"hljs-string\">\" \"<\/span>, \r\n    <span class=\"hljs-string\">\"Awesome\"<\/span>\r\n];\r\n\r\n<span class=\"hljs-keyword\">let<\/span> words = sentences.flatMap(<span class=\"hljs-function\"><span class=\"hljs-params\">s<\/span> =&gt;<\/span> s.split(<span class=\"hljs-string\">' '<\/span>));\r\n<span class=\"hljs-built_in\">console<\/span>.log(words);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Output:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91; 'JavaScript', 'Array', 'flatMap()', '', '', 'is', '', '', 'Awesome' ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<h3 class=\"wp-block-heading\">2) Adding and removing elements during mapping example<\/h3>\r\n\r\n\r\n\r\n<p>The <code>flatMap()<\/code> method allows you to add or remove elements during mapping. Consider the following example:<\/p>\r\n\r\n\r\n\r\n<p>Suppose that you have the following shopping cart:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> cart = &#91;{\r\n        <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'Smartphone'<\/span>,\r\n        <span class=\"hljs-attr\">qty<\/span>: <span class=\"hljs-number\">2<\/span>,\r\n        <span class=\"hljs-attr\">price<\/span>: <span class=\"hljs-number\">500<\/span>,\r\n        <span class=\"hljs-attr\">freeOfCharge<\/span>: <span class=\"hljs-literal\">false<\/span>\r\n    },\r\n    {\r\n        <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'Tablet'<\/span>,\r\n        <span class=\"hljs-attr\">qty<\/span>: <span class=\"hljs-number\">1<\/span>,\r\n        <span class=\"hljs-attr\">price<\/span>: <span class=\"hljs-number\">800<\/span>,\r\n        <span class=\"hljs-attr\">freeOfCharge<\/span>: <span class=\"hljs-literal\">false<\/span>\r\n    }\r\n];\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>If customers buy a smartphone, you want to give them a free screen protector.<\/p>\r\n\r\n\r\n\r\n<p>When the customer adds a smartphone to the cart, you can add a screen protector to the cart using the <code>flatMap()<\/code> method as follows:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> newCart = cart.flatMap(\r\n    <span class=\"hljs-function\">(<span class=\"hljs-params\">item<\/span>) =&gt;<\/span> {\r\n        <span class=\"hljs-keyword\">if<\/span> (item.name === <span class=\"hljs-string\">'Smartphone'<\/span>) {\r\n            <span class=\"hljs-keyword\">return<\/span> &#91;item, {\r\n                <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'Screen Protector'<\/span>,\r\n                <span class=\"hljs-attr\">qty<\/span>: item.qty,\r\n                <span class=\"hljs-attr\">price<\/span>: <span class=\"hljs-number\">5<\/span>,\r\n                <span class=\"hljs-attr\">freeOfCharge<\/span>: <span class=\"hljs-literal\">true<\/span>\r\n            }]\r\n        } <span class=\"hljs-keyword\">else<\/span> {\r\n            <span class=\"hljs-keyword\">return<\/span> &#91;item];\r\n        }\r\n    }\r\n);\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(newCart);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>The cart will look like this:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">&#91;\r\n    { <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'Smartphone'<\/span>, <span class=\"hljs-attr\">qty<\/span>: <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-attr\">price<\/span>: <span class=\"hljs-number\">500<\/span>, <span class=\"hljs-attr\">freeOfCharge<\/span>: <span class=\"hljs-literal\">false<\/span> },\r\n    { <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'Screen Protector'<\/span>, <span class=\"hljs-attr\">qty<\/span>: <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-attr\">price<\/span>: <span class=\"hljs-number\">5<\/span>, <span class=\"hljs-attr\">freeOfCharge<\/span>: <span class=\"hljs-literal\">true<\/span> },\r\n    { <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'Tablet'<\/span>, <span class=\"hljs-attr\">qty<\/span>: <span class=\"hljs-number\">1<\/span>, <span class=\"hljs-attr\">price<\/span>: <span class=\"hljs-number\">800<\/span>, <span class=\"hljs-attr\">freeOfCharge<\/span>: <span class=\"hljs-literal\">false<\/span> }\r\n]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>The following uses the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-array-reduce\/\">reduce()<\/a><\/code> method to calculate the total amount from the items in the cart. It ignores the free-of-charge items, like screen protectors:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> total = newCart.reduce(<span class=\"hljs-function\">(<span class=\"hljs-params\">sum, item<\/span>) =&gt;<\/span> {\r\n    <span class=\"hljs-keyword\">if<\/span> (!item.freeOfCharge)\r\n        sum += item.price * item.qty;\r\n    <span class=\"hljs-keyword\">return<\/span> sum;\r\n}, <span class=\"hljs-number\">0<\/span>);\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log({total});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Output:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">{ <span class=\"hljs-attr\">total<\/span>: <span class=\"hljs-number\">1800<\/span> }<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<h2 class=\"wp-block-heading\">Summary<\/h2>\r\n\r\n\r\n\r\n<ul><li>Use the <code>flatMap()<\/code> method to create a flattened array of elements by running each element in the collection through a mapping function and flattening the mapped results.<\/li><\/ul>\r\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"86329\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/\"\n\t\t\t\tdata-post-title=\"JavaScript Array flatMap\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"86329\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/\"\n\t\t\t\tdata-post-title=\"JavaScript Array flatMap\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll about the JavaScript Array flatMap() method that maps each element in an array using a mapping function and flattens the result into a new array.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":89577,"menu_order":22,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Array flatMap() By Practical Examples<\/title>\n<meta name=\"description\" content=\"in this tutorial, you&#039;ll about the JavaScript Array flatMap() method that maps each element in an array using a mapping function and flattens the result into a new array.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Array flatMap() By Practical Examples\" \/>\n<meta property=\"og:description\" content=\"in this tutorial, you&#039;ll about the JavaScript Array flatMap() method that maps each element in an array using a mapping function and flattens the result into a new array.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-15T02:23:33+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/\",\"name\":\"JavaScript Array flatMap() By Practical Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-04-04T04:12:25+00:00\",\"dateModified\":\"2022-02-15T02:23:33+00:00\",\"description\":\"in this tutorial, you'll about the JavaScript Array flatMap() method that maps each element in an array using a mapping function and flattens the result into a new array.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript Array Methods\",\"item\":\"https:\/\/www.javascripttutorial.net\/javascript-array-methods\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Array flatMap\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Array flatMap() By Practical Examples","description":"in this tutorial, you'll about the JavaScript Array flatMap() method that maps each element in an array using a mapping function and flattens the result into a new array.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Array flatMap() By Practical Examples","og_description":"in this tutorial, you'll about the JavaScript Array flatMap() method that maps each element in an array using a mapping function and flattens the result into a new array.","og_url":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-02-15T02:23:33+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/","url":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/","name":"JavaScript Array flatMap() By Practical Examples","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-04-04T04:12:25+00:00","dateModified":"2022-02-15T02:23:33+00:00","description":"in this tutorial, you'll about the JavaScript Array flatMap() method that maps each element in an array using a mapping function and flattens the result into a new array.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-array-flatmap\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"JavaScript Array Methods","item":"https:\/\/www.javascripttutorial.net\/javascript-array-methods\/"},{"@type":"ListItem","position":3,"name":"JavaScript Array flatMap"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86329"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=86329"}],"version-history":[{"count":4,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86329\/revisions"}],"predecessor-version":[{"id":86333,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86329\/revisions\/86333"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/89577"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=86329"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
{"id":533,"date":"2016-08-28T02:14:18","date_gmt":"2016-08-28T09:14:18","guid":{"rendered":"http:\/\/https://jsprifix.netlify.app/\/?page_id=533"},"modified":"2022-01-24T17:52:03","modified_gmt":"2022-01-25T01:52:03","slug":"javascript-for-of","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/","title":{"rendered":"JavaScript for&#8230;of Loop"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll how to use JavaScript <code>for...of<\/code> statement to iterate over iterable objects.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the JavaScript for&#8230;of loop<\/h2>\n\n\n\n<p>ES6 introduced a new statement <code>for...of<\/code> that iterates over an iterable object&nbsp;such as:<\/p>\n\n\n\n<ul><li>Built-in <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array\/\">Array<\/a>, <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-string\/\">String<\/a>, <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-map\/\">Map<\/a>, <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-set\/\">Set<\/a>, &#8230;<\/li><li>Array-like objects such as <code>arguments<\/code> or <code>NodeList<\/code> <\/li><li>User-defined objects that implement the <span class=\"unresolvedLink\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-iterator\/\">iterator protocol<\/a><\/span>.<\/li><\/ul>\n\n\n\n<p>The following illustrates the syntax of the <code>for...of<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">for<\/span> (variable <span class=\"hljs-keyword\">of<\/span> iterable) {\n   <span class=\"hljs-comment\">\/\/ ...<\/span>\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">variable<\/h3>\n\n\n\n<p>In each iteration, a property of the iterable object is assigned to the <code>variable<\/code>. You can use <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-variables\/\">var<\/a><\/code>, <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-let\/\">let<\/a><\/code>, or <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-const\/\">const<\/a><\/code> to declare the <code>variable<\/code>.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">iterable<\/h3>\n\n\n\n<p>The iterable is an object whose iterable properties are iterated.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript for of loop examples<\/h2>\n\n\n\n<p>Let&#8217;s take a look at some examples of using the <code>for...of<\/code> loop.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Iterating over arrays<\/h3>\n\n\n\n<p>The following example shows how to use the <code>for...of<\/code> to iterate over elements of an array:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> scores = &#91;<span class=\"hljs-number\">80<\/span>, <span class=\"hljs-number\">90<\/span>, <span class=\"hljs-number\">70<\/span>];\n\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> score <span class=\"hljs-keyword\">of<\/span> scores) {\n    score = score + <span class=\"hljs-number\">5<\/span>;\n    <span class=\"hljs-built_in\">console<\/span>.log(score);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">85\n95\n75<\/code><\/span><\/pre>\n\n\n<p>In this example, the <code>for...of<\/code> iterates over every element of the <code>scores<\/code> array. It assigns the element of the <code>scores<\/code> array to the variable <code>score<\/code> in each iteration.<\/p>\n\n\n\n<p>If you don&#8217;t change the variable&nbsp;inside the loop, you should use the&nbsp;<code><a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-const\/\">const<\/a><\/code> keyword instead of the <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-let\/\"><code>let<\/code><\/a> keyword as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> scores = &#91;<span class=\"hljs-number\">80<\/span>, <span class=\"hljs-number\">90<\/span>, <span class=\"hljs-number\">70<\/span>];\n\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">const<\/span> score <span class=\"hljs-keyword\">of<\/span> scores) {\n    <span class=\"hljs-built_in\">console<\/span>.log(score);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">80\n90\n70<\/code><\/span><\/pre>\n\n\n<p>To access the index of the array elements inside the loop, you can use the <code>for...of<\/code> statement with the <code>entries()<\/code> method of the array.<\/p>\n\n\n\n<p>The <code>array.entries()<\/code> method returns a pair of <code>[index, element]<\/code> in each iteration. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> colors = &#91;<span class=\"hljs-string\">'Red'<\/span>, <span class=\"hljs-string\">'Green'<\/span>, <span class=\"hljs-string\">'Blue'<\/span>];\n\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">const<\/span> &#91;index, color] <span class=\"hljs-keyword\">of<\/span> colors.entries()) {\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${color}<\/span> is at index <span class=\"hljs-subst\">${index}<\/span>`<\/span>);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">Red is at index 0\nGreen is at index 1\nBlue is at index 2<\/code><\/span><\/pre>\n\n\n<p>In this example, we used the <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/destructuring\/\">array destructuring <\/a>to assign the result of the <code>entries()<\/code> method to the <code>index<\/code> and <code>color<\/code> variables in each iteration:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">const<\/span> <span class=\"hljs-selector-attr\">&#91;index, color]<\/span> <span class=\"hljs-selector-tag\">of<\/span> <span class=\"hljs-selector-tag\">colors<\/span><span class=\"hljs-selector-class\">.entries<\/span>()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">2) In-place object destructuring with for&#8230;of <\/h3>\n\n\n\n<p>Consider the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> ratings = &#91;\n    {<span class=\"hljs-attr\">user<\/span>: <span class=\"hljs-string\">'John'<\/span>,<span class=\"hljs-attr\">score<\/span>: <span class=\"hljs-number\">3<\/span>},\n    {<span class=\"hljs-attr\">user<\/span>: <span class=\"hljs-string\">'Jane'<\/span>,<span class=\"hljs-attr\">score<\/span>: <span class=\"hljs-number\">4<\/span>},\n    {<span class=\"hljs-attr\">user<\/span>: <span class=\"hljs-string\">'David'<\/span>,<span class=\"hljs-attr\">score<\/span>: <span class=\"hljs-number\">5<\/span>},\n    {<span class=\"hljs-attr\">user<\/span>: <span class=\"hljs-string\">'Peter'<\/span>,<span class=\"hljs-attr\">score<\/span>: <span class=\"hljs-number\">2<\/span>},\n];\n\n<span class=\"hljs-keyword\">let<\/span> sum = <span class=\"hljs-number\">0<\/span>;\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">const<\/span> {score} <span class=\"hljs-keyword\">of<\/span> ratings) {\n    sum += score;\n}\n\n<span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">`Total scores: <span class=\"hljs-subst\">${sum}<\/span>`<\/span>); <span class=\"hljs-comment\">\/\/ 14<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">Total scores: 14<\/code><\/span><\/pre>\n\n\n<p>How it works:<\/p>\n\n\n\n<ul><li>The <code>ratings<\/code> is an array of objects. Each object has two properties user and score.<\/li><li>The <code>for...of<\/code> iterate over the <code>ratings<\/code> array and calculate the total scores of all objects.<\/li><li>The expression <code>const {score} of ratings<\/code> uses <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-object-destructuring\/\">object destructing<\/a> to assign the <code>score<\/code> property of the current iterated element to the <code>score<\/code> variable.<\/li><\/ul>\n\n\n\n<h3 class=\"wp-block-heading\">3) Iterating over strings<\/h3>\n\n\n\n<p>The following example uses the <code>for...of<\/code> loop to iterate over characters of a string.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> str = <span class=\"hljs-string\">'abc'<\/span>;\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> c <span class=\"hljs-keyword\">of<\/span> str) {\n    <span class=\"hljs-built_in\">console<\/span>.log(c);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">a\nb\nc<\/code><\/span><\/pre>\n\n\n<h3 class=\"wp-block-heading\">3) Iterating over Map objects<\/h3>\n\n\n\n<p>The following example illustrates how to use the&nbsp;<code>for...of<\/code>&nbsp;statement to iterate over a <code>Map<\/code> object.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> colors = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Map<\/span>();\n\ncolors.set(<span class=\"hljs-string\">'red'<\/span>, <span class=\"hljs-string\">'#ff0000'<\/span>);\ncolors.set(<span class=\"hljs-string\">'green'<\/span>, <span class=\"hljs-string\">'#00ff00'<\/span>);\ncolors.set(<span class=\"hljs-string\">'blue'<\/span>, <span class=\"hljs-string\">'#0000ff'<\/span>);\n\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> color <span class=\"hljs-keyword\">of<\/span> colors) {\n    <span class=\"hljs-built_in\">console<\/span>.log(color);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91; 'red', '#ff0000' ]\n&#91; 'green', '#<span class=\"hljs-number\">00<\/span>ff00' ]\n&#91; 'blue', '#<span class=\"hljs-number\">0000<\/span>ff' ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">4) Iterating over set objects<\/h3>\n\n\n\n<p>The following example shows how to iterate over a <code>set<\/code> object using the <code>for...of<\/code> loop:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> nums = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Set<\/span>(&#91;<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>]);\n\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> num <span class=\"hljs-keyword\">of<\/span> nums) {\n    <span class=\"hljs-built_in\">console<\/span>.log(num);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\"><code>for...of<\/code> vs. <code>for...in<\/code><\/h2>\n\n\n\n<p>The <code>for...in<\/code> iterates over all <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-enumerable-properties\/\">enumerable properties<\/a> of an object. It doesn&#8217;t iterate over a collection such as <code>Array<\/code>, <code>Map<\/code> or <code>Set<\/code>.<\/p>\n\n\n\n<p>Unlike the <code>for...in<\/code> loop, the <code>for...of<\/code> iterates a collection, rather than an object. In fact, the <code>for...of<\/code>&nbsp;iterates over elements of any collection that has the&nbsp;<a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/symbol\/#iterator\"><code>[Symbol.iterator]<\/code><\/a> property.<\/p>\n\n\n\n<p>The following example illustrates the differences between <code>for...of<\/code> and <code>for...in<\/code><\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> scores = &#91;<span class=\"hljs-number\">10<\/span>,<span class=\"hljs-number\">20<\/span>,<span class=\"hljs-number\">30<\/span>];\nscores.message = <span class=\"hljs-string\">'Hi'<\/span>;\n\n<span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">\"for...in:\"<\/span>);\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> score <span class=\"hljs-keyword\">in<\/span> scores) {\n  <span class=\"hljs-built_in\">console<\/span>.log(score); \n}\n\n<span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'for...of:'<\/span>);\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> score <span class=\"hljs-keyword\">of<\/span> scores) {\n  <span class=\"hljs-built_in\">console<\/span>.log(score);\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">for<\/span>..<span class=\"hljs-selector-class\">.in<\/span>:\n0\n1\n2\n<span class=\"hljs-selector-tag\">message<\/span>\n<span class=\"hljs-selector-tag\">for<\/span>..<span class=\"hljs-selector-class\">.of<\/span>:\n10\n20\n30<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the for&#8230;in statement iterates over the properties of the scores array:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">for<\/span>..<span class=\"hljs-selector-class\">.in<\/span>:\n0\n1\n2\n<span class=\"hljs-selector-tag\">message<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>while the for&#8230;of iterates over the element of an array:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">for<\/span>..<span class=\"hljs-selector-class\">.of<\/span>:\n10\n20\n30<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Use the <code>for...of<\/code> loop to iterate over elements of an iterable object.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"533\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/\"\n\t\t\t\tdata-post-title=\"JavaScript for&#8230;of Loop\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"533\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/\"\n\t\t\t\tdata-post-title=\"JavaScript for&#8230;of Loop\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Learn about JavaScript for&#8230;of loop and how to use it to iterate over elements of an iterable object such as an array.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":97,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Introduction to JavaScript for...of Loop in ES6<\/title>\n<meta name=\"description\" content=\"Learn about JavaScript for...of loop and how to use it to iterate over elements of an iterable object such as an array.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Introduction to JavaScript for...of Loop in ES6\" \/>\n<meta property=\"og:description\" content=\"Learn about JavaScript for...of loop and how to use it to iterate over elements of an iterable object such as an array.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-25T01:52:03+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/\",\"name\":\"Introduction to JavaScript for...of Loop in ES6\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2016-08-28T09:14:18+00:00\",\"dateModified\":\"2022-01-25T01:52:03+00:00\",\"description\":\"Learn about JavaScript for...of loop and how to use it to iterate over elements of an iterable object such as an array.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript for&#8230;of Loop\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Introduction to JavaScript for...of Loop in ES6","description":"Learn about JavaScript for...of loop and how to use it to iterate over elements of an iterable object such as an array.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/","og_locale":"en_US","og_type":"article","og_title":"Introduction to JavaScript for...of Loop in ES6","og_description":"Learn about JavaScript for...of loop and how to use it to iterate over elements of an iterable object such as an array.","og_url":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-01-25T01:52:03+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/","url":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/","name":"Introduction to JavaScript for...of Loop in ES6","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2016-08-28T09:14:18+00:00","dateModified":"2022-01-25T01:52:03+00:00","description":"Learn about JavaScript for...of loop and how to use it to iterate over elements of an iterable object such as an array.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":3,"name":"JavaScript for&#8230;of Loop"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/533"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=533"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/533\/revisions"}],"predecessor-version":[{"id":89392,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/533\/revisions\/89392"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=533"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
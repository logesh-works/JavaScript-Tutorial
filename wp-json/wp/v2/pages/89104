{"id":89104,"date":"2022-01-18T20:44:25","date_gmt":"2022-01-19T04:44:25","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=89104"},"modified":"2023-04-28T06:53:33","modified_gmt":"2023-04-28T13:53:33","slug":"javascript-private-fields","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-private-fields\/","title":{"rendered":"JavaScript Private Fields"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about JavaScript private fields and how to use them effectively.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the JavaScript private fields<\/h2>\n\n\n\n<p>ES2022 allows you to define private fields for a <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-class\/\">class<\/a>. To define a private field, you prefix the field name with the <code>#<\/code> sign.<\/p>\n\n\n\n<p>For example, the following defines the <code>Circle<\/code> class with a private field <code>radius<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Circle<\/span> <\/span>{\n  #radius;\n  <span class=\"hljs-keyword\">constructor<\/span>(value) {\n    <span class=\"hljs-keyword\">this<\/span>.#radius = value;\n  }\n  <span class=\"hljs-keyword\">get<\/span> area() {\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-built_in\">Math<\/span>.PI * <span class=\"hljs-built_in\">Math<\/span>.pow(<span class=\"hljs-keyword\">this<\/span>.#radius, <span class=\"hljs-number\">2<\/span>);\n  }\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example:<\/p>\n\n\n\n<ul>\n<li>First, define the private field <code>#radius<\/code> in the class body.<\/li>\n\n\n\n<li>Second, initialize the <code>#radius<\/code> field in the constructor with an argument.<\/li>\n\n\n\n<li>Third, calculate the area of the circle by accessing the <code>#radius<\/code> private field in the getter method.<\/li>\n<\/ul>\n\n\n\n<p>The following creates a new instance of the <code>Circle<\/code> class and calculates its area:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> circle = <span class=\"hljs-keyword\">new<\/span> Circle(<span class=\"hljs-number\">10<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(circle.area); <span class=\"hljs-comment\">\/\/ 314.1592653589793<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Because the <code>#radius<\/code> is a private field, you can only access it inside the <code>Circle<\/code> class. In other words, the <code>#radius<\/code> field is invisible outside of the <code>Circle<\/code> class.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Using getter and setter to access private fields<\/h2>\n\n\n\n<p>The following redefines the <code>Circle<\/code> class by adding the <code>radius<\/code> getter and setter to provide access to the <code>#radius<\/code> private field:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Circle<\/span> <\/span>{\n  #radius = <span class=\"hljs-number\">0<\/span>;\n  <span class=\"hljs-keyword\">constructor<\/span>(radius) {\n    <span class=\"hljs-keyword\">this<\/span>.radius = radius; <span class=\"hljs-comment\">\/\/ calling setter<\/span>\n  }\n  <span class=\"hljs-keyword\">get<\/span> area() {\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-built_in\">Math<\/span>.PI * <span class=\"hljs-built_in\">Math<\/span>.pow(<span class=\"hljs-keyword\">this<\/span>.#radius, <span class=\"hljs-number\">2<\/span>);\n  }\n  <span class=\"hljs-keyword\">set<\/span> radius(value) {\n    <span class=\"hljs-keyword\">if<\/span> (<span class=\"hljs-keyword\">typeof<\/span> value === <span class=\"hljs-string\">'number'<\/span> &amp;&amp; value &gt; <span class=\"hljs-number\">0<\/span>) {\n      <span class=\"hljs-keyword\">this<\/span>.#radius = value;\n    } <span class=\"hljs-keyword\">else<\/span> {\n      <span class=\"hljs-keyword\">throw<\/span> <span class=\"hljs-string\">'The radius must be a positive number'<\/span>;\n    }\n  }\n  <span class=\"hljs-keyword\">get<\/span> radius() {\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">this<\/span>.#radius;\n  }\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul>\n<li>The <code>radius<\/code> setter validates the argument before assigning it to the <code>#radius<\/code> private field. If the argument is not a positive number, the <code>radius<\/code> setter throws an error.<\/li>\n\n\n\n<li>The <code>radius<\/code> getter returns the value of the <code>#radius<\/code> private field.<\/li>\n\n\n\n<li>The constructor calls the <code>radius<\/code> setter to assign the argument to the <code>#radius<\/code> private field. <\/li>\n<\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Private fields and subclasses<\/h2>\n\n\n\n<p>Private fields are only accessible inside the class where they&#8217;re defined. Also, they&#8217;re not accessible from the subclasses. For example, the following defines the <code>Cylinder<\/code> class that <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-inheritance\/\">extends<\/a> the <code>Circle<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Cylinder<\/span> <span class=\"hljs-keyword\">extends<\/span> <span class=\"hljs-title\">Circle<\/span> <\/span>{\n  #height;\n  <span class=\"hljs-keyword\">constructor<\/span>(radius, height) {\n    <span class=\"hljs-keyword\">super<\/span>(radius);\n    <span class=\"hljs-keyword\">this<\/span>.#height = height;\n\n    <span class=\"hljs-comment\">\/\/ cannot access the #radius of the Circle class here<\/span>\n  }\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you attempt to access the <code>#radius<\/code> private field in the <code>Cylinder<\/code> class, you&#8217;ll get a <code>SyntaxError<\/code>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">The <code>in<\/code> operator: check private fields exist<\/h2>\n\n\n\n<p>To check if an object has a private field inside a class, you use the <code>in<\/code> operator:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">fieldName in objectName<\/code><\/span><\/pre>\n\n\n<p>For example, the following adds the <code>hasRadius()<\/code> static method to the <code>Circle<\/code> class that uses the <code>in<\/code> operator to check if the <code>circle<\/code> object has the <code>#radius<\/code> private field:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Circle<\/span> <\/span>{\n  #radius = <span class=\"hljs-number\">0<\/span>;\n  <span class=\"hljs-keyword\">constructor<\/span>(radius) {\n    <span class=\"hljs-keyword\">this<\/span>.radius = radius;\n  }\n  <span class=\"hljs-keyword\">get<\/span> area() {\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-built_in\">Math<\/span>.PI * <span class=\"hljs-built_in\">Math<\/span>.pow(<span class=\"hljs-keyword\">this<\/span>.radius, <span class=\"hljs-number\">2<\/span>);\n  }\n  <span class=\"hljs-keyword\">set<\/span> radius(value) {\n    <span class=\"hljs-keyword\">if<\/span> (<span class=\"hljs-keyword\">typeof<\/span> value === <span class=\"hljs-string\">'number'<\/span> &amp;&amp; value &gt; <span class=\"hljs-number\">0<\/span>) {\n      <span class=\"hljs-keyword\">this<\/span>.#radius = value;\n    } <span class=\"hljs-keyword\">else<\/span> {\n      <span class=\"hljs-keyword\">throw<\/span> <span class=\"hljs-string\">'The radius must be a positive number'<\/span>;\n    }\n  }\n  <span class=\"hljs-keyword\">get<\/span> radius() {\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">this<\/span>.#radius;\n  }\n  <span class=\"hljs-keyword\">static<\/span> hasRadius(circle) {\n    <span class=\"hljs-keyword\">return<\/span> #radius <span class=\"hljs-keyword\">in<\/span> circle;\n  }\n}\n\n<span class=\"hljs-keyword\">let<\/span> circle = <span class=\"hljs-keyword\">new<\/span> Circle(<span class=\"hljs-number\">10<\/span>);\n\n<span class=\"hljs-built_in\">console<\/span>.log(Circle.hasRadius(circle));\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-literal\">true<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Static private fields<\/h2>\n\n\n\n<p>The following example shows how to use use a static private field:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Circle<\/span> <\/span>{\n  #radius = <span class=\"hljs-number\">0<\/span>;\n  <span class=\"hljs-keyword\">static<\/span> #count = <span class=\"hljs-number\">0<\/span>;\n  <span class=\"hljs-keyword\">constructor<\/span>(radius) {\n    <span class=\"hljs-keyword\">this<\/span>.radius = radius; <span class=\"hljs-comment\">\/\/ calling setter<\/span>\n    Circle.#count++;\n  }\n  <span class=\"hljs-keyword\">get<\/span> area() {\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-built_in\">Math<\/span>.PI * <span class=\"hljs-built_in\">Math<\/span>.pow(<span class=\"hljs-keyword\">this<\/span>.radius, <span class=\"hljs-number\">2<\/span>);\n  }\n  <span class=\"hljs-keyword\">set<\/span> radius(value) {\n    <span class=\"hljs-keyword\">if<\/span> (<span class=\"hljs-keyword\">typeof<\/span> value === <span class=\"hljs-string\">'number'<\/span> &amp;&amp; value &gt; <span class=\"hljs-number\">0<\/span>) {\n      <span class=\"hljs-keyword\">this<\/span>.#radius = value;\n    } <span class=\"hljs-keyword\">else<\/span> {\n      <span class=\"hljs-keyword\">throw<\/span> <span class=\"hljs-string\">'The radius must be a positive number'<\/span>;\n    }\n  }\n  <span class=\"hljs-keyword\">get<\/span> radius() {\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">this<\/span>.#radius;\n  }\n  <span class=\"hljs-keyword\">static<\/span> hasRadius(circle) {\n    <span class=\"hljs-keyword\">return<\/span> #radius <span class=\"hljs-keyword\">in<\/span> circle;\n  }\n  <span class=\"hljs-keyword\">static<\/span> getCount() {\n    <span class=\"hljs-keyword\">return<\/span> Circle.#count;\n  }\n}\n\n<span class=\"hljs-keyword\">let<\/span> circles = &#91;<span class=\"hljs-keyword\">new<\/span> Circle(<span class=\"hljs-number\">10<\/span>), <span class=\"hljs-keyword\">new<\/span> Circle(<span class=\"hljs-number\">20<\/span>), <span class=\"hljs-keyword\">new<\/span> Circle(<span class=\"hljs-number\">30<\/span>)];\n\n<span class=\"hljs-built_in\">console<\/span>.log(Circle.getCount());\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, add a private static field <code>#count<\/code> to the <code>Circle<\/code> class and initialize its value to zero:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">static<\/span> #count = <span class=\"hljs-number\">0<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, increase the <code>#count<\/code> by one in the constructor:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">Circle.#count++;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, define a static method that returns the value of the <code>#count<\/code> private static field:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">static<\/span> getCount() {\n    <span class=\"hljs-keyword\">return<\/span> Circle.#count;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Finally, create three instances of the <code>Circle<\/code> class and output the <code>count<\/code> value to the console:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> circles = &#91;<span class=\"hljs-keyword\">new<\/span> Circle(<span class=\"hljs-number\">10<\/span>), <span class=\"hljs-keyword\">new<\/span> Circle(<span class=\"hljs-number\">20<\/span>), <span class=\"hljs-keyword\">new<\/span> Circle(<span class=\"hljs-number\">30<\/span>)];\n<span class=\"hljs-built_in\">console<\/span>.log(Circle.getCount());\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul>\n<li>Prefix the field name with <code>#<\/code> sign to make it private.<\/li>\n\n\n\n<li>Private fields are accessible only inside the class, not from outside of the class or subclasses.<\/li>\n\n\n\n<li>Use the <code>in<\/code> operator to check if an object has a private field.<\/li>\n<\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"89104\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-private-fields\/\"\n\t\t\t\tdata-post-title=\"JavaScript Private Fields\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"89104\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-private-fields\/\"\n\t\t\t\tdata-post-title=\"JavaScript Private Fields\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn about JavaScript private fields and how to use them effectively. Introduction to the JavaScript private fields ES2022 allows you to define private fields for a class. To define a private field, you prefix the field name with the # sign. For example, the following defines the Circle class with [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":71,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Private Fields<\/title>\n<meta name=\"description\" content=\"In this tutorial, you&#039;ll learn about JavaScript private fields and how to use them effectively.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-private-fields\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Private Fields\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you&#039;ll learn about JavaScript private fields and how to use them effectively.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-private-fields\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2023-04-28T13:53:33+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-private-fields\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-private-fields\/\",\"name\":\"JavaScript Private Fields\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2022-01-19T04:44:25+00:00\",\"dateModified\":\"2023-04-28T13:53:33+00:00\",\"description\":\"In this tutorial, you'll learn about JavaScript private fields and how to use them effectively.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-private-fields\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-private-fields\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-private-fields\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Private Fields\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Private Fields","description":"In this tutorial, you'll learn about JavaScript private fields and how to use them effectively.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-private-fields\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Private Fields","og_description":"In this tutorial, you'll learn about JavaScript private fields and how to use them effectively.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-private-fields\/","og_site_name":"PriFix Tutorial","article_modified_time":"2023-04-28T13:53:33+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-private-fields\/","url":"https:\/\/www.javascripttutorial.net\/javascript-private-fields\/","name":"JavaScript Private Fields","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2022-01-19T04:44:25+00:00","dateModified":"2023-04-28T13:53:33+00:00","description":"In this tutorial, you'll learn about JavaScript private fields and how to use them effectively.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-private-fields\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-private-fields\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-private-fields\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript Private Fields"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/89104"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=89104"}],"version-history":[{"count":5,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/89104\/revisions"}],"predecessor-version":[{"id":90427,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/89104\/revisions\/90427"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=89104"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
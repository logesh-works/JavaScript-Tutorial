{"id":87750,"date":"2020-09-20T20:35:10","date_gmt":"2020-09-21T03:35:10","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=87750"},"modified":"2020-09-23T00:34:23","modified_gmt":"2020-09-23T07:34:23","slug":"javascript-infinite-scroll-2","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/","title":{"rendered":"JavaScript Infinite Scroll"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to implement the JavaScript infinite scroll feature.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">What you&#8217;re going to build<\/h2>\n\n\n\n<p>The following picture illustrates the web application that you&#8217;re going to build:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"693\" height=\"409\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Infinite-Scroll-Example.png\" alt=\"JavaScript Infinite Scroll Application\" class=\"wp-image-87771\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Infinite-Scroll-Example.png 693w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Infinite-Scroll-Example-300x177.png 300w\" sizes=\"(max-width: 693px) 100vw, 693px\" \/><\/figure>\n\n\n\n<p>The page will display a list of quotes that come from an API. By default, it shows 10 quotes. <\/p>\n\n\n\n<p>If you scroll down to the bottom of the page, the web application will display a loading indicator. In addition, it&#8217;ll call the API to fetch more quotes and append them to the current list.<\/p>\n\n\n\n<p>The URL of the API that you&#8217;re going to use is as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">https:<span class=\"hljs-comment\">\/\/api.javascripttutorial.net\/v1\/quotes\/?page=1&amp;limit=10<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The API accepts two query strings: <code>page<\/code> and <code>limit<\/code>. These query strings allow you to paginate the quotes from the server.<\/p>\n\n\n\n<p>The quotes are divided into the pages determined by the <code>page<\/code> query string. And each page has a number of quotes specified by the <code>limit<\/code> parameter.<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"552\" height=\"351\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Infinite-Scroll-API.png\" alt=\"\" class=\"wp-image-87773\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Infinite-Scroll-API.png 552w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Infinite-Scroll-API-300x191.png 300w\" sizes=\"(max-width: 552px) 100vw, 552px\" \/><\/figure>\n\n\n\n<p><a href=\"https:\/\/www.javascripttutorial.net\/sample\/dom\/infinite-scroll\/\" target=\"_blank\" rel=\"noreferrer noopener\">Click here to see the final web application that uses the JavaScript infinite scroll feature.<\/a><\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Create a project structure<\/h2>\n\n\n\n<p>First, create a new folder called <code>infinite-scroll<\/code>. Inside that folder, create two subfolders <code>css<\/code> and <code>js<\/code>.<\/p>\n\n\n\n<p>Second, create the <code>style.css<\/code> in the <code>css<\/code> folder and <code>app.js<\/code> in the <code>js<\/code> folder.<\/p>\n\n\n\n<p>Third, create a new HTML file index.html in the <code>infinite-scroll<\/code> folder.<\/p>\n\n\n\n<p>The final project folder structure will look like this:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"193\" height=\"109\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Infinite-Scroll-Project-Structure.png\" alt=\"\" class=\"wp-image-87759\"\/><\/figure><\/div>\n\n\n\n<h2 class=\"wp-block-heading\">Add code to the index.html file<\/h2>\n\n\n\n<p>Open the <code>index.html<\/code> and add the following code to it:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span> <span class=\"hljs-attr\">lang<\/span>=<span class=\"hljs-string\">\"en\"<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">charset<\/span>=<span class=\"hljs-string\">\"UTF-8\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"viewport\"<\/span> <span class=\"hljs-attr\">content<\/span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>JavaScript Infinite Scroll - Quotes<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link<\/span> <span class=\"hljs-attr\">rel<\/span>=<span class=\"hljs-string\">\"stylesheet\"<\/span> <span class=\"hljs-attr\">href<\/span>=<span class=\"hljs-string\">\"css\/style.css\"<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"container\"<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1<\/span>&gt;<\/span>Programming Quotes<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">h1<\/span>&gt;<\/span>\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"quotes\"<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"loader\"<\/span>&gt;<\/span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span> <span class=\"hljs-attr\">src<\/span>=<span class=\"hljs-string\">\"js\/app.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In the <code>index.html<\/code> file, place the <code>style.css<\/code> in the head section and <code>app.js<\/code> in the body section.<\/p>\n\n\n\n<p>The body section has a <code>div<\/code> with the class name <code>container<\/code>. The container element has four child elements:<\/p>\n\n\n\n<ul><li>A heading one  (h1) that shows the page heading.<\/li><li>A <code>div<\/code> with the class <code>quotes<\/code> that will be the parent element of all the quotes.<\/li><li>A loader that displays the loading indicator. By default, the loading indicator is invisible.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Making the app.js<\/h2>\n\n\n\n<p>The following uses the <code>querySelector()<\/code> to select the <code>div<\/code> with class <code>quotes<\/code> and the <code>loader<\/code> . <\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> quotesEl = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'.quotes'<\/span>);\n<span class=\"hljs-keyword\">const<\/span> loader = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'.loader'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">The getQuotes() function<\/h3>\n\n\n\n<p>The following <code>getQuotes()<\/code> function calls the API and return the quotes:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> getQuotes = <span class=\"hljs-keyword\">async<\/span> (page, limit) =&gt; {\n    <span class=\"hljs-keyword\">const<\/span> API_URL = <span class=\"hljs-string\">`https:\/\/api.javascripttutorial.net\/v1\/quotes\/?page=<span class=\"hljs-subst\">${page}<\/span>&amp;limit=<span class=\"hljs-subst\">${limit}<\/span>`<\/span>;\n    <span class=\"hljs-keyword\">const<\/span> response = <span class=\"hljs-keyword\">await<\/span> fetch(API_URL);\n    <span class=\"hljs-comment\">\/\/ handle 404<\/span>\n    <span class=\"hljs-keyword\">if<\/span> (!response.ok) {\n        <span class=\"hljs-keyword\">throw<\/span> <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Error<\/span>(<span class=\"hljs-string\">`An error occurred: <span class=\"hljs-subst\">${response.status}<\/span>`<\/span>);\n    }\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">await<\/span> response.json();\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>getQuotes()<\/code> function accepts two arguments: <code>page<\/code> and <code>limit<\/code>. It uses the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-fetch-api\/\">Fetch API<\/a> to fetch data from the API. <\/p>\n\n\n\n<p>Since the <code>fetch()<\/code> returns a <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-promises\/\">promise<\/a>, you can use the <code>await<\/code> syntax to get the response. And you call the <code>json()<\/code> method of the response object to get the json data. <\/p>\n\n\n\n<p>The <code>getQuotes()<\/code> returns a promise that will resolve to the JSON data.<\/p>\n\n\n\n<p>Since the <code>getQuotes()<\/code> function use the <code>await<\/code> keyword, it has to be an <code>async<\/code> function.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">The showQuotes() function<\/h3>\n\n\n\n<p>The following defines the <code>showQuotes()<\/code> function that generates the <code>&lt;blockquote&gt;<\/code> elements from the <code>quotes<\/code> array and appends them to the <code>quotes<\/code> element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/\/ show the quotes<\/span>\n<span class=\"hljs-keyword\">const<\/span> showQuotes = <span class=\"hljs-function\">(<span class=\"hljs-params\">quotes<\/span>) =&gt;<\/span> {\n    quotes.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">quote<\/span> =&gt;<\/span> {\n        <span class=\"hljs-keyword\">const<\/span> quoteEl = <span class=\"hljs-built_in\">document<\/span>.createElement(<span class=\"hljs-string\">'blockquote'<\/span>);\n        quoteEl.classList.add(<span class=\"hljs-string\">'quote'<\/span>);\n\n        quoteEl.innerHTML = <span class=\"hljs-string\">`\n            &lt;span&gt;<span class=\"hljs-subst\">${quote.id}<\/span>)&lt;\/span&gt;\n            <span class=\"hljs-subst\">${quote.quote}<\/span>\n            &lt;footer&gt;<span class=\"hljs-subst\">${quote.author}<\/span>&lt;\/footer&gt;\n        `<\/span>;\n\n        quotesEl.appendChild(quoteEl);\n    });\n};<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works:<\/p>\n\n\n\n<p>The <code>showQuotes()<\/code> uses the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-array-foreach\/\">forEach()<\/a><\/code> method to iterate over the <code>quotes<\/code> array.  <\/p>\n\n\n\n<p>For each quote object, it creates the <code>&lt;blockquote&gt;<\/code> element with the <code>quote<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">blockquote<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"quote\"<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">blockquote<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>And it generates the HTML representation of a quote object using the <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-template-literals\/\">template literal<\/a> syntax. It adds the HTML to the <code>&lt;blockquote&gt;<\/code> element. <\/p>\n\n\n\n<p>The following shows an example of the generated <code>&lt;blockquote&gt;<\/code> element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">blockquote<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"quote\"<\/span>&gt;<\/span>\n   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span<\/span>&gt;<\/span>1)<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">span<\/span>&gt;<\/span>\n      Talk is cheap. Show me the code.\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">footer<\/span>&gt;<\/span>Linus Torvalds<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">footer<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">blockquote<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>At the end of each iteration, the function appends the <code>&lt;blockquote&gt;<\/code> element to the child elements of the <code>quotesEl<\/code> element by using the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-appendchild\/\">appendChild()<\/a><\/code> method.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Show\/hide loading indicator functions<\/h3>\n\n\n\n<p>The following defines two functions that show and hide the loading indicator element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> hideLoader = <span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n    loader.classList.remove(<span class=\"hljs-string\">'show'<\/span>);\n};\n\n<span class=\"hljs-keyword\">const<\/span> showLoader = <span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n    loader.classList.add(<span class=\"hljs-string\">'show'<\/span>);\n};<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The loading indicator has the opacity 0, which is invisible by default. The <code>.show<\/code> class sets the opacity of the loading indicator to 1 that will make it visible.<\/p>\n\n\n\n<p>To hide the loading indicator, you remove the <code>show<\/code> class from the loading indicator element. Similarly, to show the loading indicator, you add the <code>show<\/code> class to its class list.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Define control variables<\/h3>\n\n\n\n<p>The following declares the <code>currentPage<\/code> variable and initialize it to one:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"> <span class=\"hljs-keyword\">let<\/span> currentPage = <span class=\"hljs-number\">1<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p> When you scroll down to the end of the page, the application will make an API request to get the next quotes. Before doing so, you need to increase the <code>currentPage<\/code> variable by one.<\/p>\n\n\n\n<p>To specify the number of quotes that you want to fetch at a time, you can use a constant like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> limit = <span class=\"hljs-number\">10<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following <code>total<\/code> variable stores the total of quotes returned from the API:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> total = <span class=\"hljs-number\">0<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">The hasMoreQuotes() function<\/h3>\n\n\n\n<p>The following <code>hasMoreQuotes()<\/code> function returns <code>true<\/code> if:<\/p>\n\n\n\n<ul><li>It&#8217;s the first fetch (<code>total === 0<\/code>) <\/li><li>Or there are more quotes to fetch from the API (<code>startIndex<\/code> &lt; <code>total<\/code>)<\/li><\/ul>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> hasMoreQuotes = <span class=\"hljs-function\">(<span class=\"hljs-params\">page, limit, total<\/span>) =&gt;<\/span> {\n    <span class=\"hljs-keyword\">const<\/span> startIndex = (page - <span class=\"hljs-number\">1<\/span>) * limit + <span class=\"hljs-number\">1<\/span>;\n    <span class=\"hljs-keyword\">return<\/span> total === <span class=\"hljs-number\">0<\/span> || startIndex &lt; total;\n};<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">The loadQuotes() function<\/h3>\n\n\n\n<p>The following defines a function that performs four actions:<\/p>\n\n\n\n<ul><li>Show the loading indicator.<\/li><li>Get the quotes from the API by calling the <code>getQuotes()<\/code> function if there are more quotes to fetch.<\/li><li>Show the quotes on the page.<\/li><li>Hide the loading indicator.<\/li><\/ul>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/\/ load quotes<\/span>\n<span class=\"hljs-keyword\">const<\/span> loadQuotes = <span class=\"hljs-keyword\">async<\/span> (page, limit) =&gt; {\n    <span class=\"hljs-comment\">\/\/ show the loader<\/span>\n    showLoader();\n    <span class=\"hljs-keyword\">try<\/span> {\n        <span class=\"hljs-comment\">\/\/ if having more quotes to fetch<\/span>\n        <span class=\"hljs-keyword\">if<\/span> (hasMoreQuotes(page, limit, total)) {\n            <span class=\"hljs-comment\">\/\/ call the API to get quotes<\/span>\n            <span class=\"hljs-keyword\">const<\/span> response = <span class=\"hljs-keyword\">await<\/span> getQuotes(page, limit);\n            <span class=\"hljs-comment\">\/\/ show quotes<\/span>\n            showQuotes(response.data);\n            <span class=\"hljs-comment\">\/\/ update the total<\/span>\n            total = response.total;\n        }\n    } <span class=\"hljs-keyword\">catch<\/span> (error) {\n        <span class=\"hljs-built_in\">console<\/span>.log(error.message);\n    } <span class=\"hljs-keyword\">finally<\/span> {\n        hideLoader();\n    }\n};<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If the <code>getQuotes()<\/code> function executes very fast, you won&#8217;t see the loading indicator.<\/p>\n\n\n\n<p>To make sure that the loading indicator always showing, you can use the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-bom\/javascript-settimeout\/\">setTimeout()<\/a><\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/\/ load quotes<\/span>\n<span class=\"hljs-keyword\">const<\/span> loadQuotes = <span class=\"hljs-keyword\">async<\/span> (page, limit) =&gt; {\n\n    <span class=\"hljs-comment\">\/\/ show the loader<\/span>\n    showLoader();\n\n    <span class=\"hljs-comment\">\/\/ 0.5 second later<\/span>\n    setTimeout(<span class=\"hljs-keyword\">async<\/span> () =&gt; {\n        <span class=\"hljs-keyword\">try<\/span> {\n            <span class=\"hljs-comment\">\/\/ if having more quotes to fetch<\/span>\n            <span class=\"hljs-keyword\">if<\/span> (hasMoreQuotes(page, limit, total)) {\n                <span class=\"hljs-comment\">\/\/ call the API to get quotes<\/span>\n                <span class=\"hljs-keyword\">const<\/span> response = <span class=\"hljs-keyword\">await<\/span> getQuotes(page, limit);\n                <span class=\"hljs-comment\">\/\/ show quotes<\/span>\n                showQuotes(response.data);\n                <span class=\"hljs-comment\">\/\/ update the total<\/span>\n                total = response.total;\n            }\n        } <span class=\"hljs-keyword\">catch<\/span> (error) {\n            <span class=\"hljs-built_in\">console<\/span>.log(error.message);\n        } <span class=\"hljs-keyword\">finally<\/span> {\n            hideLoader();\n        }\n    }, <span class=\"hljs-number\">500<\/span>);\n\n};<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>By adding the <code>setTimeout()<\/code> function, the loading indicator will show for at least a half-second. And you can tweak the delay by changing the second argument of the <code>setTimeout()<\/code> function.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Attach the scroll event<\/h3>\n\n\n\n<p>To load more quotes when users scroll to the bottom of the page, you need to attach a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/\">scroll event handler<\/a>. <\/p>\n\n\n\n<p>The scroll event handler will call the <code>loadQuotes()<\/code> function if the following conditions are met:<\/p>\n\n\n\n<ul><li>First, the scroll position is at the bottom of the page.<\/li><li>Second, there are more quotes to fetch.<\/li><\/ul>\n\n\n\n<p>The scroll event handler will also increase the <code>currentPage<\/code> variable before loading the next quotes.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"> <span class=\"hljs-built_in\">window<\/span>.addEventListener(<span class=\"hljs-string\">'scroll'<\/span>, () =&gt; {\n    <span class=\"hljs-keyword\">const<\/span> {\n        scrollTop,\n        scrollHeight,\n        clientHeight\n    } = <span class=\"hljs-built_in\">document<\/span>.documentElement;\n\n    <span class=\"hljs-keyword\">if<\/span> (scrollTop + clientHeight &gt;= scrollHeight - <span class=\"hljs-number\">5<\/span> &amp;&amp;\n        hasMoreQuotes(currentPage, limit, total)) {\n        currentPage++;\n        loadQuotes(currentPage, limit);\n    }\n}, {\n    <span class=\"hljs-attr\">passive<\/span>: <span class=\"hljs-literal\">true<\/span>\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Initialize the page<\/h3>\n\n\n\n<p>When the page loads for the first time, you need to call the <code>loadQuotes()<\/code> function to load the first batch of quotes:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">loadQuotes(currentPage, limit);<\/code><\/span><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Wrap app.js code in an IIFE<\/h3>\n\n\n\n<p>To avoid the conflict of variables and functions that you have defined, you can wrap the whole code in the <code>app.js<\/code> file in an <a href=\"https:\/\/www.javascripttutorial.net\/javascript-immediately-invoked-function-expression-iife\/\">IIFE<\/a>.<\/p>\n\n\n\n<p>The final <code>app.js<\/code> will look like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n\n    <span class=\"hljs-keyword\">const<\/span> quotesEl = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'.quotes'<\/span>);\n    <span class=\"hljs-keyword\">const<\/span> loaderEl = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'.loader'<\/span>);\n\n    <span class=\"hljs-comment\">\/\/ get the quotes from API<\/span>\n    <span class=\"hljs-keyword\">const<\/span> getQuotes = <span class=\"hljs-keyword\">async<\/span> (page, limit) =&gt; {\n        <span class=\"hljs-keyword\">const<\/span> API_URL = <span class=\"hljs-string\">`https:\/\/api.javascripttutorial.net\/v1\/quotes\/?page=<span class=\"hljs-subst\">${page}<\/span>&amp;limit=<span class=\"hljs-subst\">${limit}<\/span>`<\/span>;\n        <span class=\"hljs-keyword\">const<\/span> response = <span class=\"hljs-keyword\">await<\/span> fetch(API_URL);\n        <span class=\"hljs-comment\">\/\/ handle 404<\/span>\n        <span class=\"hljs-keyword\">if<\/span> (!response.ok) {\n            <span class=\"hljs-keyword\">throw<\/span> <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Error<\/span>(<span class=\"hljs-string\">`An error occurred: <span class=\"hljs-subst\">${response.status}<\/span>`<\/span>);\n        }\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">await<\/span> response.json();\n    }\n\n    <span class=\"hljs-comment\">\/\/ show the quotes<\/span>\n    <span class=\"hljs-keyword\">const<\/span> showQuotes = <span class=\"hljs-function\">(<span class=\"hljs-params\">quotes<\/span>) =&gt;<\/span> {\n        quotes.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">quote<\/span> =&gt;<\/span> {\n            <span class=\"hljs-keyword\">const<\/span> quoteEl = <span class=\"hljs-built_in\">document<\/span>.createElement(<span class=\"hljs-string\">'blockquote'<\/span>);\n            quoteEl.classList.add(<span class=\"hljs-string\">'quote'<\/span>);\n\n            quoteEl.innerHTML = <span class=\"hljs-string\">`\n            &lt;span&gt;<span class=\"hljs-subst\">${quote.id}<\/span>)&lt;\/span&gt;\n            <span class=\"hljs-subst\">${quote.quote}<\/span>\n            &lt;footer&gt;<span class=\"hljs-subst\">${quote.author}<\/span>&lt;\/footer&gt;\n        `<\/span>;\n\n            quotesEl.appendChild(quoteEl);\n        });\n    };\n\n    <span class=\"hljs-keyword\">const<\/span> hideLoader = <span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n        loaderEl.classList.remove(<span class=\"hljs-string\">'show'<\/span>);\n    };\n\n    <span class=\"hljs-keyword\">const<\/span> showLoader = <span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n        loaderEl.classList.add(<span class=\"hljs-string\">'show'<\/span>);\n    };\n\n    <span class=\"hljs-keyword\">const<\/span> hasMoreQuotes = <span class=\"hljs-function\">(<span class=\"hljs-params\">page, limit, total<\/span>) =&gt;<\/span> {\n        <span class=\"hljs-keyword\">const<\/span> startIndex = (page - <span class=\"hljs-number\">1<\/span>) * limit + <span class=\"hljs-number\">1<\/span>;\n        <span class=\"hljs-keyword\">return<\/span> total === <span class=\"hljs-number\">0<\/span> || startIndex &lt; total;\n    };\n\n    <span class=\"hljs-comment\">\/\/ load quotes<\/span>\n    <span class=\"hljs-keyword\">const<\/span> loadQuotes = <span class=\"hljs-keyword\">async<\/span> (page, limit) =&gt; {\n\n        <span class=\"hljs-comment\">\/\/ show the loader<\/span>\n        showLoader();\n\n        <span class=\"hljs-comment\">\/\/ 0.5 second later<\/span>\n        setTimeout(<span class=\"hljs-keyword\">async<\/span> () =&gt; {\n            <span class=\"hljs-keyword\">try<\/span> {\n                <span class=\"hljs-comment\">\/\/ if having more quotes to fetch<\/span>\n                <span class=\"hljs-keyword\">if<\/span> (hasMoreQuotes(page, limit, total)) {\n                    <span class=\"hljs-comment\">\/\/ call the API to get quotes<\/span>\n                    <span class=\"hljs-keyword\">const<\/span> response = <span class=\"hljs-keyword\">await<\/span> getQuotes(page, limit);\n                    <span class=\"hljs-comment\">\/\/ show quotes<\/span>\n                    showQuotes(response.data);\n                    <span class=\"hljs-comment\">\/\/ update the total<\/span>\n                    total = response.total;\n                }\n            } <span class=\"hljs-keyword\">catch<\/span> (error) {\n                <span class=\"hljs-built_in\">console<\/span>.log(error.message);\n            } <span class=\"hljs-keyword\">finally<\/span> {\n                hideLoader();\n            }\n        }, <span class=\"hljs-number\">500<\/span>);\n\n    };\n\n    <span class=\"hljs-comment\">\/\/ control variables<\/span>\n    <span class=\"hljs-keyword\">let<\/span> currentPage = <span class=\"hljs-number\">1<\/span>;\n    <span class=\"hljs-keyword\">const<\/span> limit = <span class=\"hljs-number\">10<\/span>;\n    <span class=\"hljs-keyword\">let<\/span> total = <span class=\"hljs-number\">0<\/span>;\n\n\n    <span class=\"hljs-built_in\">window<\/span>.addEventListener(<span class=\"hljs-string\">'scroll'<\/span>, () =&gt; {\n        <span class=\"hljs-keyword\">const<\/span> {\n            scrollTop,\n            scrollHeight,\n            clientHeight\n        } = <span class=\"hljs-built_in\">document<\/span>.documentElement;\n\n        <span class=\"hljs-keyword\">if<\/span> (scrollTop + clientHeight &gt;= scrollHeight - <span class=\"hljs-number\">5<\/span> &amp;&amp;\n            hasMoreQuotes(currentPage, limit, total)) {\n            currentPage++;\n            loadQuotes(currentPage, limit);\n        }\n    }, {\n        <span class=\"hljs-attr\">passive<\/span>: <span class=\"hljs-literal\">true<\/span>\n    });\n\n    <span class=\"hljs-comment\">\/\/ initialize<\/span>\n    loadQuotes(currentPage, limit);\n\n})();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Here is the final version <a href=\"https:\/\/www.javascripttutorial.net\/sample\/dom\/infinite-scroll\/\" target=\"_blank\" rel=\"noreferrer noopener\">of the web application<\/a>.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"87750\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/\"\n\t\t\t\tdata-post-title=\"JavaScript Infinite Scroll\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"87750\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/\"\n\t\t\t\tdata-post-title=\"JavaScript Infinite Scroll\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;re going to implement JavaScript infinite scolling feature for a simple web application that displays the quotes.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":85107,"menu_order":63,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Learn JavaScript Infinite Scroll Via a Practical Example<\/title>\n<meta name=\"description\" content=\"Learn how to implement the Javascript infinite scroll feature by building a web application that shows the quotes returned from an API.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Learn JavaScript Infinite Scroll Via a Practical Example\" \/>\n<meta property=\"og:description\" content=\"Learn how to implement the Javascript infinite scroll feature by building a web application that shows the quotes returned from an API.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2020-09-23T07:34:23+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Infinite-Scroll-Example.png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"8 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/\",\"name\":\"Learn JavaScript Infinite Scroll Via a Practical Example\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-09-21T03:35:10+00:00\",\"dateModified\":\"2020-09-23T07:34:23+00:00\",\"description\":\"Learn how to implement the Javascript infinite scroll feature by building a web application that shows the quotes returned from an API.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript DOM\",\"item\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Infinite Scroll\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Learn JavaScript Infinite Scroll Via a Practical Example","description":"Learn how to implement the Javascript infinite scroll feature by building a web application that shows the quotes returned from an API.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/","og_locale":"en_US","og_type":"article","og_title":"Learn JavaScript Infinite Scroll Via a Practical Example","og_description":"Learn how to implement the Javascript infinite scroll feature by building a web application that shows the quotes returned from an API.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/","og_site_name":"PriFix Tutorial","article_modified_time":"2020-09-23T07:34:23+00:00","og_image":[{"url":"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Infinite-Scroll-Example.png"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"8 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/","url":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/","name":"Learn JavaScript Infinite Scroll Via a Practical Example","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-09-21T03:35:10+00:00","dateModified":"2020-09-23T07:34:23+00:00","description":"Learn how to implement the Javascript infinite scroll feature by building a web application that shows the quotes returned from an API.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-infinite-scroll\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"JavaScript DOM","item":"https:\/\/www.javascripttutorial.net\/javascript-dom\/"},{"@type":"ListItem","position":3,"name":"JavaScript Infinite Scroll"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87750"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=87750"}],"version-history":[{"count":5,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87750\/revisions"}],"predecessor-version":[{"id":87791,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87750\/revisions\/87791"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85107"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=87750"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
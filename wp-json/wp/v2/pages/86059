{"id":86059,"date":"2020-03-21T06:20:24","date_gmt":"2020-03-21T13:20:24","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=86059"},"modified":"2022-08-17T17:43:38","modified_gmt":"2022-08-18T00:43:38","slug":"javascript-hoisting","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-hoisting\/","title":{"rendered":"JavaScript Hoisting"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about JavaScript hoisting and how it works under the hood.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"introduction-to-the-javascript-hoisting\">Introduction to the JavaScript hoisting<\/h2>\n\n\n\n<p>When the JavaScript engine executes the JavaScript code, it creates the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-execution-context\/\">global execution context<\/a>. The global execution context has two phases: <\/p>\n\n\n\n<ul><li>Creation <\/li><li>Execution<\/li><\/ul>\n\n\n\n<p>During the creation phase, the JavaScript engine moves the variable and function declarations to the top of your code. This is known as hoisting in JavaScript.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"variable-hoisting\">Variable hoisting<\/h2>\n\n\n\n<p>Variable hoisting means the JavaScript engine moves the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-variable-scope\/\">variable declarations<\/a> to the top of the script. For example, the following example declares the <code>counter<\/code> variable and initialize its value to <code>1<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(counter); <span class=\"hljs-comment\">\/\/ \ud83d\udc49 undefined<\/span>\n<span class=\"hljs-keyword\">var<\/span> counter = <span class=\"hljs-number\">1<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we reference the <code>counter<\/code> variable before the declaration. <\/p>\n\n\n\n<p>However, the first line of code doesn&#8217;t cause an error. The reason is that the JavaScript engine moves the variable declaration to the top of the script. <\/p>\n\n\n\n<p>Technically, the code looks like the following in the execution phase:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var<\/span> counter;\n\n<span class=\"hljs-built_in\">console<\/span>.log(counter); <span class=\"hljs-comment\">\/\/ \ud83d\udc49 undefined<\/span>\ncounter = <span class=\"hljs-number\">1<\/span>;\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>During the creation phase of the global execution context, the JavaScript engine places the variable <code>counter<\/code> in the memory and initializes its value to <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-undefined\/\">undefined<\/a><\/code>.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\" id=\"the-let-keyword\">The let keyword<\/h3>\n\n\n\n<p>The following declares the variable <code>counter<\/code> with the <code><a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-let\/\">let<\/a><\/code> keyword:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(counter);\n<span class=\"hljs-keyword\">let<\/span> counter = <span class=\"hljs-number\">1<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The JavaScript issues the following error:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">\"ReferenceError: Cannot access 'counter' before initialization<\/code><\/span><\/pre>\n\n\n<p>The error message explains that the <code>counter<\/code> variable is already in the heap memory. However, it hasn&#8217;t been initialized. <\/p>\n\n\n\n<p>Behind the scenes, the JavaScript engine hoists the variable declarations that use the <code>let<\/code> keyword. However, it doesn&#8217;t initialize the <code>let<\/code> variables. <\/p>\n\n\n\n<p>Notice that if you access a variable that doesn&#8217;t exist, the JavaScript will throw a different error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(alien);\n<span class=\"hljs-keyword\">let<\/span> counter = <span class=\"hljs-number\">1<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Here is the error:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">\"ReferenceError: alien is not defined<\/code><\/span><\/pre>\n\n\n<h2 class=\"wp-block-heading\" id=\"function-hoisting\">Function hoisting<\/h2>\n\n\n\n<p>Like variables, the JavaScript engine also hoists the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-function\/\">function<\/a> declarations. This means that the JavaScript engine also moves the function declarations to the top of the script. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> x = <span class=\"hljs-number\">20<\/span>,\n  y = <span class=\"hljs-number\">10<\/span>;\n\n<span class=\"hljs-keyword\">let<\/span> result = add(x, y); \n<span class=\"hljs-built_in\">console<\/span>.log(result); <span class=\"hljs-comment\">\/\/ \ud83d\udc49 30<\/span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">add<\/span>(<span class=\"hljs-params\">a, b<\/span>) <\/span>{\n  <span class=\"hljs-keyword\">return<\/span> a + b;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">30<\/code><\/span><\/pre>\n\n\n<p>In this example, we called the <code>add()<\/code> function before defining it. The above code is equivalent to the following:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">add<\/span>(<span class=\"hljs-params\">a, b<\/span>)<\/span>{\n    <span class=\"hljs-keyword\">return<\/span> a + b;\n}\n\n<span class=\"hljs-keyword\">let<\/span> x = <span class=\"hljs-number\">20<\/span>,\n    y = <span class=\"hljs-number\">10<\/span>;\n\n<span class=\"hljs-keyword\">let<\/span> result = add(x,y);\n<span class=\"hljs-built_in\">console<\/span>.log(result); <span class=\"hljs-comment\">\/\/ \ud83d\udc49 30<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>During the creation phase of the execution context, the JavaScript engine places the <code>add()<\/code> function declaration in the heap memory. To be precise, the JavaScript engine creates an object of the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-function-type\/\">Function<\/a><\/code> type and a function reference called <code>add<\/code> that refers to the function object.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\" id=\"function-expressions\">Function expressions<\/h3>\n\n\n\n<p>The following example changes the <code>add<\/code>&nbsp;from a regular function to a function expression:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> x = <span class=\"hljs-number\">20<\/span>,\n    y = <span class=\"hljs-number\">10<\/span>;\n\n<span class=\"hljs-keyword\">let<\/span> result = add(x,y); <span class=\"hljs-comment\">\/\/ \u274c Uncaught ReferenceError: add is not defined<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(result);\n\n<span class=\"hljs-keyword\">let<\/span> add = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>(<span class=\"hljs-params\">x, y<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> x + y;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you execute the code, the following error will occur:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">Uncaught <span class=\"hljs-built_in\">ReferenceError<\/span>: add is not defined<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>During the creation phase of the global execution context, the JavaScript engine creates the <code>add<\/code> variable in the memory and initializes its value to <code>undefined<\/code>. <\/p>\n\n\n\n<p>When executing the following code, the <code>add<\/code> is <code>undefined<\/code>, hence, it isn&#8217;t a function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> result = add(x,y);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>add<\/code> variable is assigned to an <a href=\"https:\/\/www.javascripttutorial.net\/javascript-anonymous-functions\/\">anonymous function<\/a> only during the execution phase of the global execution context.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\" id=\"arrow-functions\">Arrow functions<\/h3>\n\n\n\n<p>The following example changes the <code>add<\/code> function expression to the <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-arrow-function\/\">arrow function<\/a>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> x = <span class=\"hljs-number\">20<\/span>,\n    y = <span class=\"hljs-number\">10<\/span>;\n\n<span class=\"hljs-keyword\">let<\/span> result = add(x,y); <span class=\"hljs-comment\">\/\/ \u274c Uncaught ReferenceError: add is not defined<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(result);\n\n<span class=\"hljs-keyword\">let<\/span> add = <span class=\"hljs-function\">(<span class=\"hljs-params\">x, y<\/span>) =&gt;<\/span> x + y; <\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The code also issues the same error as the function expression example because arrow functions are syntactic sugar for defining function expressions.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">Uncaught <span class=\"hljs-built_in\">ReferenceError<\/span>: add is not defined<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Similar to the functions expressions, arrow functions are not hoisted.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"summary\">Summary<\/h2>\n\n\n\n<ul><li>JavaScript hoisting occurs during the creation phase of the execution context that moves the variable and function declarations to the top of the script.<\/li><li>The JavaScript engine hoists the variables declared using the <code>let<\/code> keyword, but it doesn&#8217;t initialize them as the variables declared with the <code>var<\/code> keyword.<\/li><li>The JavaScript engine doesn&#8217;t hoist the function expressions and arrow functions.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"86059\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-hoisting\/\"\n\t\t\t\tdata-post-title=\"JavaScript Hoisting\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"86059\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-hoisting\/\"\n\t\t\t\tdata-post-title=\"JavaScript Hoisting\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how about the JavaScript hoisting and how it works under the hood.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":121,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Hoisting Explained By Examples<\/title>\n<meta name=\"description\" content=\"In this tutorial, you&#039;ll learn how about the JavaScript hoisting and how it works under the hood.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-hoisting\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Hoisting Explained By Examples\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you&#039;ll learn how about the JavaScript hoisting and how it works under the hood.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-hoisting\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-08-18T00:43:38+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-hoisting\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-hoisting\/\",\"name\":\"JavaScript Hoisting Explained By Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-03-21T13:20:24+00:00\",\"dateModified\":\"2022-08-18T00:43:38+00:00\",\"description\":\"In this tutorial, you'll learn how about the JavaScript hoisting and how it works under the hood.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-hoisting\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-hoisting\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-hoisting\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Hoisting\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Hoisting Explained By Examples","description":"In this tutorial, you'll learn how about the JavaScript hoisting and how it works under the hood.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-hoisting\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Hoisting Explained By Examples","og_description":"In this tutorial, you'll learn how about the JavaScript hoisting and how it works under the hood.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-hoisting\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-08-18T00:43:38+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-hoisting\/","url":"https:\/\/www.javascripttutorial.net\/javascript-hoisting\/","name":"JavaScript Hoisting Explained By Examples","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-03-21T13:20:24+00:00","dateModified":"2022-08-18T00:43:38+00:00","description":"In this tutorial, you'll learn how about the JavaScript hoisting and how it works under the hood.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-hoisting\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-hoisting\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-hoisting\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript Hoisting"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86059"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=86059"}],"version-history":[{"count":4,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86059\/revisions"}],"predecessor-version":[{"id":90306,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86059\/revisions\/90306"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=86059"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
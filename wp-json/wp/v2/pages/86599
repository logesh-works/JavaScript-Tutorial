{"id":86599,"date":"2020-04-21T21:49:51","date_gmt":"2020-04-22T04:49:51","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=86599"},"modified":"2022-08-30T23:02:17","modified_gmt":"2022-08-31T06:02:17","slug":"javascript-nullish-coalescing-operator","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/","title":{"rendered":"JavaScript Nullish Coalescing Operator"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the JavaScript nullish coalescing operator (<code>??<\/code>) that accepts two values and returns the second value if the first one is <code>null<\/code> or <code>undefined<\/code>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the JavaScript nullish coalescing operator<\/h2>\n\n\n\n<p>ES2020 introduced the nullish coalescing operator denoted by the double question marks (<code>??<\/code>). The nullish coalescing operator is a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-logical-operators\/\">logical operator<\/a> that accepts two values:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">value1 ?? value2<\/code><\/span><\/pre>\n\n\n<p>The nullish coalescing operator returns the second value (<code>value2<\/code>) if the first value (<code>value2<\/code>) is <code>null<\/code> or <code>undefined<\/code>. Technically, the nullish coalescing operator is equivalent to the following block:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> result = value1;\n<span class=\"hljs-keyword\">if<\/span>(result === <span class=\"hljs-literal\">null<\/span> || result === <span class=\"hljs-literal\">undefined<\/span>) {\n   result = value2;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p class=\"note\">A nullish value is a value that is either&nbsp;<code>null<\/code>&nbsp;or&nbsp;<code>undefined<\/code>.<\/p>\n\n\n\n<p>The following example uses the nullish coalescing operator (<code>??<\/code>) to return the string <code>'John'<\/code> because the first value is <code>null<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> name = <span class=\"hljs-literal\">null<\/span> ?? <span class=\"hljs-string\">'John'<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(name); <span class=\"hljs-comment\">\/\/ 'John'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>And this example returns <code>28<\/code> because the first value is <code>undefined<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> age = <span class=\"hljs-literal\">undefined<\/span> ?? <span class=\"hljs-number\">28<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(age);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Why nullish coalescing operator<\/h2>\n\n\n\n<p>When assigning a default value to a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-variables\/\">variable<\/a>, you often use the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-logical-operators\/\">logical OR operator<\/a> (<code>||<\/code>). For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> count;\n<span class=\"hljs-keyword\">let<\/span> result = count || <span class=\"hljs-number\">1<\/span> ;\n<span class=\"hljs-built_in\">console<\/span>.log(result); <span class=\"hljs-comment\">\/\/ 1<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>count<\/code> variable is <code>undefined<\/code>, it is coerced to <code>false<\/code>. Therefore, the <code>result<\/code> is <code>1<\/code>.<\/p>\n\n\n\n<p>However, the logical <code>OR<\/code> operator (<code>||<\/code>) sometimes is confusing if you consider <code>0<\/code> or empty strings <code>''<\/code> as a valid value like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> count = <span class=\"hljs-number\">0<\/span>;\n<span class=\"hljs-keyword\">let<\/span> result = count || <span class=\"hljs-number\">1<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The result is 1, not 0, which you may not expect.<\/p>\n\n\n\n<p>The nullish coalescing operator helps you to avoid this pitfall. It only returns the second value when the first one is either <code>null<\/code> or <code>undefined<\/code>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">The nullish coalescing operator is short-circuited<\/h2>\n\n\n\n<p>Similar to the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-logical-operators\/\">logical OR and AND operators<\/a>, the nullish coalescing operator does not evaluate the second value if the first operand is neither <code>undefined<\/code> nor <code>null<\/code>. <\/p>\n\n\n\n<p>For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> result = <span class=\"hljs-number\">1<\/span> ?? <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Hi'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the operator <code>??<\/code> does not evaluate the second expression that displays the &#8220;Hi&#8221; to the console because the first value is <code>1<\/code>, which is not <code>null<\/code> or <code>undefined<\/code>.<\/p>\n\n\n\n<p>The following example evaluates the second expression because the first one is <code>undefined<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> result = <span class=\"hljs-literal\">undefined<\/span> ?? <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Hi'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-string\">'Hi'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Chaining with the AND or OR operator<\/h2>\n\n\n\n<p>A <code>SyntaxError<\/code> will occur if you combine the logical AND or OR operator directly with the nullish coalescing operator like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> result = <span class=\"hljs-literal\">null<\/span> || <span class=\"hljs-literal\">undefined<\/span> ?? <span class=\"hljs-string\">'OK'<\/span>; <span class=\"hljs-comment\">\/\/ SyntaxError<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, you can avoid this error by wrapping the expression on the left of the <code>??<\/code> operator in parentheses to explicitly specify the operator precedences:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> result = (<span class=\"hljs-literal\">null<\/span> || <span class=\"hljs-literal\">undefined<\/span>) ?? <span class=\"hljs-string\">'OK'<\/span>; \n<span class=\"hljs-built_in\">console<\/span>.log(result); <span class=\"hljs-comment\">\/\/ 'OK'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>The nullish coalescing operator (<code>??<\/code>) is a logical operator that accepts two values and returns the second value if the first one is <code>null<\/code> or <code>undefined<\/code>.<\/li><li>The nullish coalescing operator is short-circuited and cannot directly combine with the logical AND or OR operator.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"86599\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/\"\n\t\t\t\tdata-post-title=\"JavaScript Nullish Coalescing Operator\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"86599\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/\"\n\t\t\t\tdata-post-title=\"JavaScript Nullish Coalescing Operator\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>This tutorial shows you how to use the JavaScript nullish coalescing operator (??) that accepts two operands and returns the right operand if the left one is null or undefined.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":22,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Nullish Coalescing Operator<\/title>\n<meta name=\"description\" content=\"Learn about the JavaScript nullish coalescing operator that accepts two operands and returns the right operand if the left one is null or undefined.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Nullish Coalescing Operator\" \/>\n<meta property=\"og:description\" content=\"Learn about the JavaScript nullish coalescing operator that accepts two operands and returns the right operand if the left one is null or undefined.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-08-31T06:02:17+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/\",\"name\":\"JavaScript Nullish Coalescing Operator\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-04-22T04:49:51+00:00\",\"dateModified\":\"2022-08-31T06:02:17+00:00\",\"description\":\"Learn about the JavaScript nullish coalescing operator that accepts two operands and returns the right operand if the left one is null or undefined.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Nullish Coalescing Operator\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Nullish Coalescing Operator","description":"Learn about the JavaScript nullish coalescing operator that accepts two operands and returns the right operand if the left one is null or undefined.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Nullish Coalescing Operator","og_description":"Learn about the JavaScript nullish coalescing operator that accepts two operands and returns the right operand if the left one is null or undefined.","og_url":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-08-31T06:02:17+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/","url":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/","name":"JavaScript Nullish Coalescing Operator","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-04-22T04:49:51+00:00","dateModified":"2022-08-31T06:02:17+00:00","description":"Learn about the JavaScript nullish coalescing operator that accepts two operands and returns the right operand if the left one is null or undefined.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript Nullish Coalescing Operator"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86599"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=86599"}],"version-history":[{"count":4,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86599\/revisions"}],"predecessor-version":[{"id":90374,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86599\/revisions\/90374"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=86599"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
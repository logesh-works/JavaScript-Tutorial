{"id":242,"date":"2016-08-09T02:36:54","date_gmt":"2016-08-09T09:36:54","guid":{"rendered":"http:\/\/https://jsprifix.netlify.app/\/?page_id=242"},"modified":"2022-01-15T23:29:42","modified_gmt":"2022-01-16T07:29:42","slug":"javascript-pass-by-value","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/","title":{"rendered":"Understanding JavaScript Pass-By-Value"},"content":{"rendered":"\n<p><strong>Summary<\/strong>:&nbsp;this tutorial explains how JavaScript pass-by-value works and gives you some examples of passing primitive and reference values to a function.<\/p>\n\n\n\n<p class=\"note\">Before going forward with this tutorial, you should have good knowledge of the<a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-primitive-vs-reference-values\/\"> primitive and reference values, and the differences between them<\/a>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript pass-by-value or pass-by-reference<\/h2>\n\n\n\n<p>In JavaScript, all <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-function\/\">function<\/a> arguments are always passed by value. It means that\u00a0JavaScript copies the values of the <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-variables\/\">variables<\/a> into the function arguments. <\/p>\n\n\n\n<p>Any changes that you make to the arguments inside the function do not reflect the passing variables outside of the function. In other words, the changes made to the arguments are not reflected outside of the function.<\/p>\n\n\n\n<p>If function arguments are passed by reference, the changes of variables that you pass into the function will be reflected outside the function. This is not possible in JavaScript.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Pass-by-value of primitives values<\/h2>\n\n\n\n<p>Let&#8217;s take a look at the following example.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">square<\/span>(<span class=\"hljs-params\">x<\/span>) <\/span>{\n    x = x * x;\n    <span class=\"hljs-keyword\">return<\/span> x;\n}\n\n<span class=\"hljs-keyword\">let<\/span> y = <span class=\"hljs-number\">10<\/span>;\n<span class=\"hljs-keyword\">let<\/span> result = square(y);\n\n<span class=\"hljs-built_in\">console<\/span>.log(result); <span class=\"hljs-comment\">\/\/ 100 <\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(y); <span class=\"hljs-comment\">\/\/ 10 -- no change<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How the script works.<\/p>\n\n\n\n<p>First, define a <code>square()<\/code> function that accepts an argument <span style=\"font-family: monospace;\"><code>x<\/code><\/span>. The function assigns the square of <code>x<\/code> to the <code>x<\/code> argument.<\/p>\n\n\n\n<p>Next, declare the variable <span style=\"font-family: monospace;\"><code>y<\/code><\/span> and initialize its value to <code>10<\/code>:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Primitive-Value-Step-1.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Primitive-Value-Step-1.svg\" alt=\"\" class=\"wp-image-88980\"\/><\/a><\/figure><\/div>\n\n\n\n<p>Then, pass the <code>y<\/code> variable&nbsp;into the <code>square()<\/code> function. When passing the variable <code>y<\/code>&nbsp;to the <code>square()<\/code> function, JavaScript copies <code>y<\/code>&nbsp;value to the <code>x<\/code> variable.<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Primitive-Value-Step-2.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Primitive-Value-Step-2.svg\" alt=\"\" class=\"wp-image-88981\"\/><\/a><\/figure><\/div>\n\n\n\n<p>After that, the <code>square()<\/code> function changes the <span style=\"font-family: monospace;\"><code>x<\/code><\/span> variable. However, it does not impact the value of the <code>y<\/code> variable because <code>x<\/code> and <code>y<\/code> are separate variables.<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Primitive-Value-Step-3.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Primitive-Value-Step-3.svg\" alt=\"\" class=\"wp-image-88982\"\/><\/a><\/figure><\/div>\n\n\n\n<p>Finally,&nbsp;the value of the <code>y<\/code> variable does not change after the <code>square()<\/code> function completes.<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Primitive-Value-Step-4.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Primitive-Value-Step-4.svg\" alt=\"\" class=\"wp-image-88983\"\/><\/a><\/figure><\/div>\n\n\n\n<p>If JavaScript used&nbsp;the pass-by-reference, the variable <code>y<\/code>&nbsp;would change to <code>100<\/code> after calling the function.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Pass-by-value of&nbsp;reference values<\/h2>\n\n\n\n<p>It&#8217;s not obvious to see that reference values are also passed by values. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {\n  <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'John'<\/span>,\n  <span class=\"hljs-attr\">age<\/span>: <span class=\"hljs-number\">25<\/span>,\n};\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">increaseAge<\/span>(<span class=\"hljs-params\">obj<\/span>) <\/span>{\n  obj.age += <span class=\"hljs-number\">1<\/span>;\n}\n\nincreaseAge(person);\n\n<span class=\"hljs-built_in\">console<\/span>.log(person);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How the script works:<\/p>\n\n\n\n<p>First, define the <code>person<\/code> variable that references an object with two properties <code>name<\/code> and <code>age<\/code>:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Reference-Value-Step-1.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Reference-Value-Step-1.svg\" alt=\"\" class=\"wp-image-88984\"\/><\/a><\/figure><\/div>\n\n\n\n<p>Next, define the <code>increaseAge()<\/code> function that accepts an object <code>obj<\/code> and increases the <code>age<\/code> property of the <code>obj<\/code> argument by one.<\/p>\n\n\n\n<p>Then, pass the <code>person<\/code> object to the <code>increaseAge()<\/code> function:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Reference-Value-Step-2.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Reference-Value-Step-2.svg\" alt=\"\" class=\"wp-image-88985\"\/><\/a><\/figure><\/div>\n\n\n\n<p>Internally, the JavaScript engine creates the <code>obj<\/code> reference and make this variable reference the same object that the <code>person<\/code> variable references.<\/p>\n\n\n\n<p>After that, increase the <code>age<\/code> property by one inside the <code>increaseAge()<\/code> function via the <code>obj<\/code> variable<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Reference-Value-Step-3.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Reference-Value-Step-3.svg\" alt=\"\" class=\"wp-image-88986\"\/><\/a><\/figure><\/div>\n\n\n\n<p>Finally, accessing the object via the <code>person<\/code> reference:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Reference-Value-Step-4.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Reference-Value-Step-4.svg\" alt=\"\" class=\"wp-image-88987\"\/><\/a><\/figure><\/div>\n\n\n\n<p>It seems that JavaScript passes an object by reference because the change to the object is reflected outside the function. However,&nbsp;this is not the case.<\/p>\n\n\n\n<p>In fact, when passing an object to a function, you are passing the reference of that object, not the actual object. Therefore, the function can modify the properties of the object via its reference. <\/p>\n\n\n\n<p>However, you cannot change the reference passed into the function. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {\n  <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'John'<\/span>,\n  <span class=\"hljs-attr\">age<\/span>: <span class=\"hljs-number\">25<\/span>,\n};\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">increaseAge<\/span>(<span class=\"hljs-params\">obj<\/span>) <\/span>{\n  obj.age += <span class=\"hljs-number\">1<\/span>;\n\n  <span class=\"hljs-comment\">\/\/ reference another object<\/span>\n  obj = { <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'Jane'<\/span>, <span class=\"hljs-attr\">age<\/span>: <span class=\"hljs-number\">22<\/span> };\n}\n\nincreaseAge(person);\n\n<span class=\"hljs-built_in\">console<\/span>.log(person);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{ <span class=\"hljs-attribute\">name<\/span>: <span class=\"hljs-string\">'John'<\/span>, age: <span class=\"hljs-number\">26<\/span> }<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>increaseAage()<\/code> function changes the <code>age<\/code> property via the <code>obj<\/code> argument: <\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Reference-Value-Change-Property.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Reference-Value-Change-Property.svg\" alt=\"\" class=\"wp-image-88991\"\/><\/a><\/figure><\/div>\n\n\n\n<p>and makes the <code>obj<\/code> reference another object:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Reference-Value.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Reference-Value.svg\" alt=\"\" class=\"wp-image-88989\"\/><\/a><\/figure><\/div>\n\n\n\n<p>However, the <code>person<\/code> reference still refers to the original object whose the <code>age<\/code> property changes to <code>26<\/code>. In other words, the <code>increaseAge()<\/code> function doesn&#8217;t change the <code>person<\/code> reference.<\/p>\n\n\n\n<p>If this concept still confuses you, you can consider function arguments as local variables.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>JavaScript passes all arguments to a function by values.<\/li><li>Function arguments are local variables in JavaScript.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"242\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/\"\n\t\t\t\tdata-post-title=\"Understanding JavaScript Pass-By-Value\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"242\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/\"\n\t\t\t\tdata-post-title=\"Understanding JavaScript Pass-By-Value\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary:&nbsp;this tutorial explains how JavaScript pass-by-value works and gives you some examples of passing primitive and reference values to a function. Before going forward with this tutorial, you should have good knowledge of the primitive and reference values, and the differences between them. JavaScript pass-by-value or pass-by-reference In JavaScript, all function arguments are always passed [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":40,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Understanding JavaScript Pass By Value<\/title>\n<meta name=\"description\" content=\"This tutorial explains how JavaScript pass by value works and gives you some examples of passing primitive and reference variables to a function.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Understanding JavaScript Pass By Value\" \/>\n<meta property=\"og:description\" content=\"This tutorial explains how JavaScript pass by value works and gives you some examples of passing primitive and reference variables to a function.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-16T07:29:42+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Primitive-Value-Step-1.svg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"5 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/\",\"name\":\"Understanding JavaScript Pass By Value\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2016-08-09T09:36:54+00:00\",\"dateModified\":\"2022-01-16T07:29:42+00:00\",\"description\":\"This tutorial explains how JavaScript pass by value works and gives you some examples of passing primitive and reference variables to a function.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Understanding JavaScript Pass-By-Value\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Understanding JavaScript Pass By Value","description":"This tutorial explains how JavaScript pass by value works and gives you some examples of passing primitive and reference variables to a function.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/","og_locale":"en_US","og_type":"article","og_title":"Understanding JavaScript Pass By Value","og_description":"This tutorial explains how JavaScript pass by value works and gives you some examples of passing primitive and reference variables to a function.","og_url":"https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-01-16T07:29:42+00:00","og_image":[{"url":"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Pass-By-Value-Primitive-Value-Step-1.svg"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"5 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/","url":"https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/","name":"Understanding JavaScript Pass By Value","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2016-08-09T09:36:54+00:00","dateModified":"2022-01-16T07:29:42+00:00","description":"This tutorial explains how JavaScript pass by value works and gives you some examples of passing primitive and reference variables to a function.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-pass-by-value\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":3,"name":"Understanding JavaScript Pass-By-Value"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/242"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=242"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/242\/revisions"}],"predecessor-version":[{"id":89008,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/242\/revisions\/89008"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=242"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
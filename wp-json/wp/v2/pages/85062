{"id":85062,"date":"2020-01-12T08:11:04","date_gmt":"2020-01-12T16:11:04","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=85062"},"modified":"2020-01-30T01:25:24","modified_gmt":"2020-01-30T09:25:24","slug":"javascript-settimeout","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/","title":{"rendered":"JavaScript setTimeout"},"content":{"rendered":"<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the JavaScript <code>setTimeout()<\/code> that sets a timer and executes a callback function after the timer expires.<\/p>\n<h2>Introduction to JavaScript <code>setTimeout()<\/code><\/h2>\n<p>The <code>setTimeout()<\/code> is a method of the <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-window\/\"><code>window<\/code><\/a> object. The <code>setTimeout()<\/code>\u00a0 sets a timer and executes a <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-callback\/\">callback function<\/a> after the timer expires.<\/p>\n<p>The following illustrates the syntax of <code>setTimeout()<\/code>:<\/p>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> timeoutID  = setTimeout(cb &#91;,delay], arg1, arg2,...);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<p>In this syntax:<\/p>\n<ul>\n<li>&nbsp;<code>cb<\/code> is a <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-callback\/\">callback function<\/a> to be executed after the timer expires.<\/li>\n<li><code>delay<\/code> is the time in milliseconds that the timer should wait before executing the callback function. If you omit it, the <code>delay<\/code> defaults to 0.<\/li>\n<li><code>arg1<\/code>, <code>arg2<\/code>, &#8230; are arguments passed to the <code>cb<\/code> callback function.<\/li>\n<\/ul>\n<p>The <code>setTimeout()<\/code> returns a <code>timeoutID<\/code> which is a positive integer identifying the timer created as a result of calling the method.<\/p>\n<p>The <code>timeoutID<\/code> can be used to cancel timeout by passing it to the <code>clearTimeout()<\/code> method.<\/p>\n<h2>JavaScript <code>setTimeout()<\/code> example<\/h2>\n<p>The following creates two simple buttons and hooks them to the <code>setTimeout()<\/code> and <code>clearTimeout()<\/code>.<\/p>\n<p>When you click the <code>Show<\/code> button, the <code>showAlert()<\/code> is invoked and shows an alert dialog after 3 seconds. To cancel the timeout, you click the <code>Cancel<\/code> button.<\/p>\n<h3>HTML<\/h3>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p<\/span>&gt;<\/span>JavaScript setTimeout Demo<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">p<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button<\/span> <span class=\"hljs-attr\">onclick<\/span>=<span class=\"hljs-string\">\"showAlert();\"<\/span>&gt;<\/span>Show<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">button<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button<\/span> <span class=\"hljs-attr\">onclick<\/span>=<span class=\"hljs-string\">\"cancelAlert();\"<\/span>&gt;<\/span>Cancel<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">button<\/span>&gt;<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<h3>JavaScript<\/h3>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var<\/span> timeoutID;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">showAlert<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    timeoutID = setTimeout(alert, <span class=\"hljs-number\">3000<\/span>, <span class=\"hljs-string\">'setTimeout Demo!'<\/span>);\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">clearAlert<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    clearTimeout(timeoutID);\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<h3>Output<\/h3>\n<div style=\"background-color: #fbfbfd; padding: 20px;\">\n<p>JavaScript setTimeout Demo<\/p>\n<p><button id=\"btnShow\">Show<\/button> <button id=\"btnCancel\">Cancel<\/button><\/p>\n<\/div>\n<h2>How JavaScript <code>setTimeout()<\/code> works<\/h2>\n<p>JavaScript is single-threaded therefore it can only do one task at a time. It means that it can only carry a single task a given time. Besides the JavaScript engine, the web browser has other components such as <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-event-loop\/\">Event Loop<\/a>, <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-call-stack\/\">Call Stack<\/a>, and Web API.<\/p>\n<p>When you call the <code>setTimeout()<\/code>, the JavaScript engine creates a new function <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/\">execution context<\/a> and places it on the <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-call-stack\/\">call stack<\/a>.<\/p>\n<p>The <code>setTimeout()<\/code> executes and creates a timer in the Web APIs component of the web browser. When the timer expires, the callback function that was passed in the <code>setTimeout()<\/code> is placed to the callback queue.<\/p>\n<p>The <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-event-loop\/\">event loop<\/a> monitors both the call stack and the callback queue. It removes the callback function from the callback queue and places it to call stack when the call stack is empty.<\/p>\n<p>Once the callback function is on the call stack, it is executed.<\/p>\n<p>See the following example:<\/p>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">task<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'setTimeout Demo!'<\/span>)\n}\n\nsetTimeout(task, <span class=\"hljs-number\">3000<\/span>);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<p>In this example:<\/p>\n<p>First, the <code>setTimeout()<\/code> is placed on the call stack. It creates a timer on Web API.<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"alignnone size-full wp-image-85075\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/javascript-setTimeout-step-1.png\" alt=\"javascript setTimeout step 1\" width=\"699\" height=\"488\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/javascript-setTimeout-step-1.png 699w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/javascript-setTimeout-step-1-300x209.png 300w\" sizes=\"(max-width: 699px) 100vw, 699px\" \/><\/p>\n<p>Second, after roughly 3 seconds, the timer expires, the <code>task<\/code> is pushed to the callback queue and waited for the next opportunity to execute.<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"alignnone size-full wp-image-85076\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/javascript-setTimeout-step-2.png\" alt=\"javascript setTimeout step 2\" width=\"693\" height=\"491\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/javascript-setTimeout-step-2.png 693w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/javascript-setTimeout-step-2-300x213.png 300w\" sizes=\"(max-width: 693px) 100vw, 693px\" \/><\/p>\n<p>Third, because the call stack is empty, the event loop removes the <code>task()<\/code> from the callback queue, places it on the call stack, and executes it:<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"alignnone size-full wp-image-85077\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/javascript-setTimeout-step-3.png\" alt=\"javascript setTimeout step 3\" width=\"678\" height=\"485\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/javascript-setTimeout-step-3.png 678w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/javascript-setTimeout-step-3-300x215.png 300w\" sizes=\"(max-width: 678px) 100vw, 678px\" \/><\/p>\n<p>Fourth, the <code>console.log()<\/code> in the <code>setTimeout()<\/code> executes that creates a new function execution context.<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"alignnone size-full wp-image-85078\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/javascript-setTimeout-step-4.png\" alt=\"javascript setTimeout step 4\" width=\"683\" height=\"490\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/javascript-setTimeout-step-4.png 683w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/javascript-setTimeout-step-4-300x215.png 300w\" sizes=\"(max-width: 683px) 100vw, 683px\" \/><\/p>\n<p>Finally, the <code>console.log()<\/code> and <code>task()<\/code> are popped out of the call stack once they are completed.<\/p>\n<h2>Summary<\/h2>\n<ul>\n<li><code>setTimeout()<\/code> is a method of the window object.<\/li>\n<li><code>setTimeout()<\/code> sets a timer and executes a callback function when the timer expires.<\/li>\n<\/ul><div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"85062\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/\"\n\t\t\t\tdata-post-title=\"JavaScript setTimeout\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"85062\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/\"\n\t\t\t\tdata-post-title=\"JavaScript setTimeout\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the JavaScript setTimeout() that sets a timer and executes a callback function after the timer expires.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":85007,"menu_order":4,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript setTimeout<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to use the JavaScript setTimeout() that sets a timer and executes a callback function after the timer expires.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript setTimeout\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn how to use the JavaScript setTimeout() that sets a timer and executes a callback function after the timer expires.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2020-01-30T09:25:24+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/javascript-setTimeout-step-1.png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/\",\"name\":\"JavaScript setTimeout\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2020-01-12T16:11:04+00:00\",\"dateModified\":\"2020-01-30T09:25:24+00:00\",\"description\":\"In this tutorial, you will learn how to use the JavaScript setTimeout() that sets a timer and executes a callback function after the timer expires.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript BOM\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript setTimeout\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript setTimeout","description":"In this tutorial, you will learn how to use the JavaScript setTimeout() that sets a timer and executes a callback function after the timer expires.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript setTimeout","og_description":"In this tutorial, you will learn how to use the JavaScript setTimeout() that sets a timer and executes a callback function after the timer expires.","og_url":"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/","og_site_name":"PriFix Tutorial","article_modified_time":"2020-01-30T09:25:24+00:00","og_image":[{"url":"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2020\/01\/javascript-setTimeout-step-1.png"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/","url":"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/","name":"JavaScript setTimeout","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2020-01-12T16:11:04+00:00","dateModified":"2020-01-30T09:25:24+00:00","description":"In this tutorial, you will learn how to use the JavaScript setTimeout() that sets a timer and executes a callback function after the timer expires.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"JavaScript BOM","item":"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/"},{"@type":"ListItem","position":3,"name":"JavaScript setTimeout"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85062"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=85062"}],"version-history":[{"count":0,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85062\/revisions"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85007"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=85062"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
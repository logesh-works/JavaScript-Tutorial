{"id":88450,"date":"2021-06-01T07:59:01","date_gmt":"2021-06-01T14:59:01","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=88450"},"modified":"2022-08-30T18:33:08","modified_gmt":"2022-08-31T01:33:08","slug":"javascript-logical-assignment-operators","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/","title":{"rendered":"JavaScript Logical Assignment Operators"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about JavaScript logical assignment operators, including the logical OR assignment operator (<code>||=<\/code>), the logical AND assignment operator (<code>&amp;&amp;=<\/code>), and the nullish assignment operator (<code>??=<\/code>).<\/p>\n\n\n\n<p>ES2021 introduces three logical assignment operators including:<\/p>\n\n\n\n<ul><li>Logical OR assignment operator (<code>||=<\/code>)<\/li><li>Logical AND assignment operator (<code>&amp;&amp;=<\/code>)<\/li><li>Nullish coalescing assignment operator (<code>??=<\/code>)<\/li><\/ul>\n\n\n\n<p>The following table shows the equivalent of the logical assignments operator:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th>Logical Assignment Operators<\/th><th>Logical Operators<\/th><\/tr><\/thead><tbody><tr><td>x ||= y<\/td><td>x || (x = y)<\/td><\/tr><tr><td>x &amp;&amp;= y<\/td><td>x &amp;&amp; (x = y)<\/td><\/tr><tr><td>x ??= y<\/td><td>x ?? (x = y);<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">The Logical OR assignment operator<\/h2>\n\n\n\n<p>The logical OR assignment operator (<code>||=<\/code>) accepts two operands and assigns the right operand to the left operand if the left operand is falsy:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">x ||= y<\/code><\/span><\/pre>\n\n\n<p>In this syntax, the <code>||=<\/code> operator only assigns <code>y<\/code> to <code>x<\/code> if <code>x<\/code> is falsy. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> title;\ntitle ||= <span class=\"hljs-string\">'untitled'<\/span>;\n\n<span class=\"hljs-built_in\">console<\/span>.log(title);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">untitled<\/code><\/span><\/pre>\n\n\n<p>In this example, the <code>title<\/code> variable is <code>undefined<\/code>, therefore, it&#8217;s falsy. Since the <code>title<\/code> is falsy, the operator <code>||=<\/code> assigns the <code>'untitled'<\/code> to the <code>title<\/code>. The output shows the <code>untitled<\/code> as expected.<\/p>\n\n\n\n<p>See another example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> title = <span class=\"hljs-string\">'JavaScript Awesome'<\/span>;\ntitle ||= <span class=\"hljs-string\">'untitled'<\/span>;\n\n<span class=\"hljs-built_in\">console<\/span>.log(title);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-string\">'JavaScript Awesome'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>title<\/code> is <code>'JavaScript Awesome'<\/code> so it is truthy. Therefore, the logical OR assignment operator (<code>||=<\/code>) doesn&#8217;t assign the string <code>'untitled'<\/code> to the <code>title<\/code> variable.<\/p>\n\n\n\n<p>The logical OR assignment operator:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">x ||= y<\/code><\/span><\/pre>\n\n\n<p>is equivalent to the following statement that uses the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-logical-operators\/\">logical OR operator<\/a>:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">x || (x = y)<\/code><\/span><\/pre>\n\n\n<p>Like the logical OR operator, the logical OR assignment also short-circuits. It means that the logical OR assignment operator only performs an assignment when the <code>x<\/code> is falsy.<\/p>\n\n\n\n<p>The following example uses the logical assignment operator to display a default message if the search result element is empty:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'.search-result'<\/span>).textContent ||= <span class=\"hljs-string\">'Sorry! No result found'<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">The Logical AND assignment operator<\/h2>\n\n\n\n<p>The logical AND assignment operator only assigns <code>y<\/code> to <code>x<\/code> if <code>x<\/code> is truthy:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">x &amp;&amp;= y;<\/code><\/span><\/pre>\n\n\n<p>The logical AND assignment operator also short-circuits. It means that<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">x &amp;&amp;= y;<\/code><\/span><\/pre>\n\n\n<p>is equivalent to:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">x &amp;&amp; (x = y);<\/code><\/span><\/pre>\n\n\n<p>The following example uses the logical AND assignment operator to change the last name of a <code>person<\/code> object if the last name is truthy:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {\n    <span class=\"hljs-attr\">firstName<\/span>: <span class=\"hljs-string\">'Jane'<\/span>,\n    <span class=\"hljs-attr\">lastName<\/span>: <span class=\"hljs-string\">'Doe'<\/span>,\n};\n\nperson.lastName &amp;&amp;= <span class=\"hljs-string\">'Smith'<\/span>;\n\n<span class=\"hljs-built_in\">console<\/span>.log(person);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{<span class=\"hljs-attribute\">firstName<\/span>: <span class=\"hljs-string\">'Jane'<\/span>, lastName: <span class=\"hljs-string\">'Smith'<\/span>}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">The nullish coalescing assignment operator<\/h2>\n\n\n\n<p>The nullish coalescing assignment operator only assigns <code>y<\/code> to <code>x<\/code> if <code>x<\/code> is <code>null<\/code> or <code>undefined<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">x ??= y;<\/code><\/span><\/pre>\n\n\n<p>It&#8217;s equivalent to the following statement that uses the <a href=\"http:\/\/JavaScript Nullish coalescing operahttps:\/\/www.javascripttutorial.net\/es-next\/javascript-nullish-coalescing-operator\/tor\">nullish coalescing operator<\/a>:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">x ?? (x = y);<\/code><\/span><\/pre>\n\n\n<p>The following example uses the nullish coalescing assignment operator to add a missing property to an object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> user = {\n    <span class=\"hljs-attr\">username<\/span>: <span class=\"hljs-string\">'Satoshi'<\/span>\n};\nuser.nickname ??= <span class=\"hljs-string\">'anonymous'<\/span>;\n\n<span class=\"hljs-built_in\">console<\/span>.log(user);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{<span class=\"hljs-attribute\">username<\/span>: <span class=\"hljs-string\">'Satoshi'<\/span>, nickname:<span class=\"hljs-string\">'anonymous'<\/span>}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>user.nickname<\/code> is <code>undefined<\/code>, therefore, it&#8217;s nullish. The nullish coalescing assignment operator assigns the string <code>'anonymous'<\/code> to the <code>user.nickname<\/code> property.<\/p>\n\n\n\n<p>The following table illustrates how the logical assignment operators work:<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>The logical OR assignment (<code>x ||= y<\/code>) operator only assigns <code>y<\/code> to <code>x<\/code> if <code>x<\/code> is falsy.<\/li><li>The logical AND assignment (<code>x &amp;&amp;= y<\/code>) operator only assigns <code>y<\/code> to <code>x<\/code> if <code>x<\/code> is truthy.<\/li><li>The nullish coalescing assignment (<code>x ??= y<\/code>) operator only assigns <code>y<\/code> to <code>x<\/code> if <code>x<\/code> is nullish.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"88450\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/\"\n\t\t\t\tdata-post-title=\"JavaScript Logical Assignment Operators\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"88450\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/\"\n\t\t\t\tdata-post-title=\"JavaScript Logical Assignment Operators\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn about JavaScript logical assignment operators, including logical OR assignment operator (||=), logical AND assignment operator (&#038;&#038;=), and nullish assignment operator (??=).<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":21,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Logical Assignment Operators<\/title>\n<meta name=\"description\" content=\"In this tutorial, you&#039;ll learn about JavaScript logical assignment operators, including logical OR assignment operator (||=), logical AND assignment operator (&amp;&amp;=), and nullish assignment operator (??=).\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Logical Assignment Operators\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you&#039;ll learn about JavaScript logical assignment operators, including logical OR assignment operator (||=), logical AND assignment operator (&amp;&amp;=), and nullish assignment operator (??=).\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-08-31T01:33:08+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/\",\"name\":\"JavaScript Logical Assignment Operators\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2021-06-01T14:59:01+00:00\",\"dateModified\":\"2022-08-31T01:33:08+00:00\",\"description\":\"In this tutorial, you'll learn about JavaScript logical assignment operators, including logical OR assignment operator (||=), logical AND assignment operator (&&=), and nullish assignment operator (??=).\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Logical Assignment Operators\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Logical Assignment Operators","description":"In this tutorial, you'll learn about JavaScript logical assignment operators, including logical OR assignment operator (||=), logical AND assignment operator (&&=), and nullish assignment operator (??=).","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Logical Assignment Operators","og_description":"In this tutorial, you'll learn about JavaScript logical assignment operators, including logical OR assignment operator (||=), logical AND assignment operator (&&=), and nullish assignment operator (??=).","og_url":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-08-31T01:33:08+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/","url":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/","name":"JavaScript Logical Assignment Operators","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2021-06-01T14:59:01+00:00","dateModified":"2022-08-31T01:33:08+00:00","description":"In this tutorial, you'll learn about JavaScript logical assignment operators, including logical OR assignment operator (||=), logical AND assignment operator (&&=), and nullish assignment operator (??=).","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-logical-assignment-operators\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript Logical Assignment Operators"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/88450"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=88450"}],"version-history":[{"count":3,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/88450\/revisions"}],"predecessor-version":[{"id":90366,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/88450\/revisions\/90366"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=88450"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
{"id":89075,"date":"2022-01-18T01:21:22","date_gmt":"2022-01-18T09:21:22","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=89075"},"modified":"2022-03-04T19:22:52","modified_gmt":"2022-03-05T03:22:52","slug":"javascript-remainder-operator","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/","title":{"rendered":"JavaScript Remainder Operator"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the JavaScript remainder operator (<code>%<\/code>) to get the remainder of a number divided by another number.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the JavaScript remainder operator<\/h2>\n\n\n\n<p>JavaScript uses the <code>%<\/code> to represent the remainder operator. The remainder operator returns the remainder left over when one value is divided by another value.<\/p>\n\n\n\n<p>Here&#8217;s the syntax of the remainder operator:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">dividend % divisor<\/code><\/span><\/pre>\n\n\n<p>The following shows the equation for the remainder:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">dividend = divisor * quotient + remainder\nwhere |remainder| &lt; |divisor|<\/code><\/span><\/pre>\n\n\n<p>In this equation, the <code>dividend<\/code>, <code>divisor<\/code>, <code>quotient<\/code>, and <code>remainder<\/code> are all integers. The sign of the <code>remainder<\/code> is the same as the sign of the <code>dividend<\/code>.<\/p>\n\n\n\n<p>The sign of the <code>remainder<\/code> is the same as the sign of the <code>dividend<\/code>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript remainder operator examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the JavaScript remainder operator.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Using the remainder operator with positive dividend example<\/h3>\n\n\n\n<p>The following example shows how to use the remainder operator with a positive dividend:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> remainder = <span class=\"hljs-number\">5<\/span> % <span class=\"hljs-number\">-2<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(remainder); <span class=\"hljs-comment\">\/\/ 1<\/span>\n\nremainder = <span class=\"hljs-number\">5<\/span> % <span class=\"hljs-number\">2<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(remainder); <span class=\"hljs-comment\">\/\/ 1<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">2) Using the remainder operator with negative dividend example<\/h3>\n\n\n\n<p>The following example uses the remainder operator with a negative dividend:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> remainder = <span class=\"hljs-number\">-5<\/span> % <span class=\"hljs-number\">3<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(remainder); <span class=\"hljs-comment\">\/\/ -2<\/span>\n\nremainder = <span class=\"hljs-number\">-5<\/span> % <span class=\"hljs-number\">-3<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(remainder); <span class=\"hljs-comment\">\/\/ -2<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">3) Using the remainder operator special values<\/h3>\n\n\n\n<p>If a dividend is an <code>Infinity<\/code> and a divisor is a finite number, the remainder is <code>NaN<\/code>. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> remainder = <span class=\"hljs-literal\">Infinity<\/span> % <span class=\"hljs-number\">2<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(remainder); <span class=\"hljs-comment\">\/\/ NaN<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If a dividend is a finite number and a divisor is zero, the remainder is <code>NaN<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> remainder = <span class=\"hljs-number\">10<\/span> % <span class=\"hljs-number\">0<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(remainder); <span class=\"hljs-comment\">\/\/ NaN<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If both dividend and divisor are <code>Infinity<\/code>, the remainder is <code>NaN<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> remainder = <span class=\"hljs-literal\">Infinity<\/span> % <span class=\"hljs-literal\">Infinity<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(remainder); <span class=\"hljs-comment\">\/\/ NaN<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If a dividend is a finite number and the divisor is an <code>Infinity<\/code>, the remainder is the dividend. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> remainder = <span class=\"hljs-number\">10<\/span> % <span class=\"hljs-literal\">Infinity<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(remainder); <span class=\"hljs-comment\">\/\/ 10<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If the dividend is zero and the divisor is non-zero, the remainder is zero:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> remainder = <span class=\"hljs-number\">0<\/span> % <span class=\"hljs-number\">10<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(remainder); <span class=\"hljs-comment\">\/\/ 0<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If either dividend or divisor is not a number, it&#8217;s converted to a number using the <code>Number()<\/code> function and applied the above rules. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> remainder = <span class=\"hljs-string\">'10'<\/span> % <span class=\"hljs-number\">3<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(remainder); <span class=\"hljs-comment\">\/\/ 1<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Using the remainder operator to check if a number is an odd number<\/h2>\n\n\n\n<p>To check if a number is an odd number, you use the remainder operator (<code>%<\/code>) like the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> num = <span class=\"hljs-number\">13<\/span>;\n<span class=\"hljs-keyword\">let<\/span> isOdd = num % <span class=\"hljs-number\">2<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, if the <code>num<\/code> is an odd number, the remainder is one. But if the <code>num<\/code> is an even number, the remainder is zero.<\/p>\n\n\n\n<p>Later, you&#8217;ll learn how to <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-function\/\">define a function<\/a> that returns <code>true<\/code> if a number is odd or <code>false<\/code> otherwise like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">isOdd<\/span>(<span class=\"hljs-params\">num<\/span>) <\/span>{\n  <span class=\"hljs-keyword\">return<\/span> num % <span class=\"hljs-number\">2<\/span>;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Or using an <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-arrow-function\/\">arrow function in ES6<\/a>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> isOdd = <span class=\"hljs-function\">(<span class=\"hljs-params\">num<\/span>) =&gt;<\/span> num % <span class=\"hljs-number\">2<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Remainder vs Modulo operator<\/h2>\n\n\n\n<p>In JavaScript, the remainder operator (%) is not the modulo operator. <\/p>\n\n\n\n<p>If you have been working with Python, you may find the <code>%<\/code> represents the modulo operator in this language. However, it is not the case in JavaScript.<\/p>\n\n\n\n<p>To get a modulo in JavaScript, you use the following expression:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">((dividend % divisor) + divisor) % divisor<\/code><\/span><\/pre>\n\n\n<p>Or wrap it in a function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> mod = <span class=\"hljs-function\">(<span class=\"hljs-params\">dividend, divisor<\/span>) =&gt;<\/span> ((dividend % divisor) + divisor) % divisor;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If the division and divisor have the same sign, the remainder and modulo operators return the same result. Otherwise, they return different results. <\/p>\n\n\n\n<p>For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> mod = <span class=\"hljs-function\">(<span class=\"hljs-params\">dividend, divisor<\/span>) =&gt;<\/span> ((dividend % divisor) + divisor) % divisor;\n\n<span class=\"hljs-comment\">\/\/ dividen and divisor have the same sign<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'remainder:'<\/span>, <span class=\"hljs-number\">5<\/span> % <span class=\"hljs-number\">3<\/span>); <span class=\"hljs-comment\">\/\/ 2<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'modulo:'<\/span>, mod(<span class=\"hljs-number\">5<\/span>, <span class=\"hljs-number\">3<\/span>)); <span class=\"hljs-comment\">\/\/ 2<\/span>\n\n<span class=\"hljs-comment\">\/\/ dividen and divisor have the different signs<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'remainder:'<\/span>, <span class=\"hljs-number\">-5<\/span> % <span class=\"hljs-number\">3<\/span>); <span class=\"hljs-comment\">\/\/ -2<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'modulo:'<\/span>, mod(<span class=\"hljs-number\">-5<\/span>, <span class=\"hljs-number\">3<\/span>)); <span class=\"hljs-comment\">\/\/ 1<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"HTTP\" data-shcb-language-slug=\"http\"><span><code class=\"hljs language-http\"><span class=\"hljs-attribute\">remainder<\/span>: 2\n<span class=\"hljs-attribute\">modulo<\/span>: 2\n<span class=\"hljs-attribute\">remainder<\/span>: -2\n<span class=\"hljs-attribute\">modulo<\/span>: 1<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTTP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">http<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Use the JavaScript remainder operator (<code>%<\/code>) get the the remainder of a value divided by another value.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"89075\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/\"\n\t\t\t\tdata-post-title=\"JavaScript Remainder Operator\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"89075\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/\"\n\t\t\t\tdata-post-title=\"JavaScript Remainder Operator\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn about the JavaScript remainder operator (%) to get the remainder of a number divided by another number.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":16,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Remainder Operator<\/title>\n<meta name=\"description\" content=\"In this tutorial, you&#039;ll learn about the JavaScript remainder operator (%) to get the remainder of a number divided by another number.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Remainder Operator\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you&#039;ll learn about the JavaScript remainder operator (%) to get the remainder of a number divided by another number.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-03-05T03:22:52+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/\",\"name\":\"JavaScript Remainder Operator\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2022-01-18T09:21:22+00:00\",\"dateModified\":\"2022-03-05T03:22:52+00:00\",\"description\":\"In this tutorial, you'll learn about the JavaScript remainder operator (%) to get the remainder of a number divided by another number.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Remainder Operator\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Remainder Operator","description":"In this tutorial, you'll learn about the JavaScript remainder operator (%) to get the remainder of a number divided by another number.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Remainder Operator","og_description":"In this tutorial, you'll learn about the JavaScript remainder operator (%) to get the remainder of a number divided by another number.","og_url":"https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-03-05T03:22:52+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/","url":"https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/","name":"JavaScript Remainder Operator","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2022-01-18T09:21:22+00:00","dateModified":"2022-03-05T03:22:52+00:00","description":"In this tutorial, you'll learn about the JavaScript remainder operator (%) to get the remainder of a number divided by another number.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-remainder-operator\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":3,"name":"JavaScript Remainder Operator"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/89075"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=89075"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/89075\/revisions"}],"predecessor-version":[{"id":90155,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/89075\/revisions\/90155"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=89075"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
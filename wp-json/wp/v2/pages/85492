{"id":85492,"date":"2020-02-02T18:33:29","date_gmt":"2020-02-03T02:33:29","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=85492"},"modified":"2021-10-14T02:50:02","modified_gmt":"2021-10-14T09:50:02","slug":"javascript-style","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/","title":{"rendered":"JavaScript Style"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the style property to manipulate the inline style of the HTML elements.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Setting inline styles<\/h2>\n\n\n\n<p>To set the inline style of an element, you use the <code>style<\/code> property of that element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">element<\/span><span class=\"hljs-selector-class\">.style<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>style<\/code> property returns the read-only <code>CSSStyleDeclaration<\/code> object that contains a list of CSS properties. For example, to set the color of an element to <code>red<\/code>, you use the following code:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">element.style.color = <span class=\"hljs-string\">'red'<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If the CSS property contains hyphens (<code>-<\/code>) for example <code>-webkit-text-stroke<\/code> you can use the array-like notation (<code>[]<\/code>) to access the property:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">element.style.&#91;<span class=\"hljs-string\">'-webkit-text-stock'<\/span>] = <span class=\"hljs-string\">'unset'<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following table shows the common CSS properties:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th scope=\"col\"><strong>CSS<\/strong><\/th><th scope=\"col\"><strong>JavaScript<\/strong><\/th><\/tr><\/thead><tbody><tr><td>background<\/td><td>background<\/td><\/tr><tr><td>background-attachment<\/td><td>backgroundAttachment<\/td><\/tr><tr><td>background-color<\/td><td>backgroundColor<\/td><\/tr><tr><td>background-image<\/td><td>backgroundImage<\/td><\/tr><tr><td>background-position<\/td><td>backgroundPosition<\/td><\/tr><tr><td>background-repeat<\/td><td>backgroundRepeat<\/td><\/tr><tr><td>border<\/td><td>border<\/td><\/tr><tr><td>border-bottom<\/td><td>borderBottom<\/td><\/tr><tr><td>border-bottom-color<\/td><td>borderBottomColor<\/td><\/tr><tr><td>border-bottom-style<\/td><td>borderBottomStyle<\/td><\/tr><tr><td>border-bottom-width<\/td><td>borderBottomWidth<\/td><\/tr><tr><td>border-color<\/td><td>borderColor<\/td><\/tr><tr><td>border-left<\/td><td>borderLeft<\/td><\/tr><tr><td>border-left-color<\/td><td>borderLeftColor<\/td><\/tr><tr><td>border-left-style<\/td><td>borderLeftStyle<\/td><\/tr><tr><td>border-left-width<\/td><td>borderLeftWidth<\/td><\/tr><tr><td>border-right<\/td><td>borderRight<\/td><\/tr><tr><td>border-right-color<\/td><td>borderRightColor<\/td><\/tr><tr><td>border-right-style<\/td><td>borderRightStyle<\/td><\/tr><tr><td>border-right-width<\/td><td>borderRightWidth<\/td><\/tr><tr><td>border-style<\/td><td>borderStyle<\/td><\/tr><tr><td>border-top<\/td><td>borderTop<\/td><\/tr><tr><td>border-top-color<\/td><td>borderTopColor<\/td><\/tr><tr><td>border-top-style<\/td><td>borderTopStyle<\/td><\/tr><tr><td>border-top-width<\/td><td>borderTopWidth<\/td><\/tr><tr><td>border-width<\/td><td>borderWidth<\/td><\/tr><tr><td>clear<\/td><td>clear<\/td><\/tr><tr><td>clip<\/td><td>clip<\/td><\/tr><tr><td>color<\/td><td>color<\/td><\/tr><tr><td>cursor<\/td><td>cursor<\/td><\/tr><tr><td>display<\/td><td>display<\/td><\/tr><tr><td>filter<\/td><td>filter<\/td><\/tr><tr><td>float<\/td><td>cssFloat<\/td><\/tr><tr><td>font<\/td><td>font<\/td><\/tr><tr><td>font-family<\/td><td>fontFamily<\/td><\/tr><tr><td>font-size<\/td><td>fontSize<\/td><\/tr><tr><td>font-variant<\/td><td>fontVariant<\/td><\/tr><tr><td>font-weight<\/td><td>fontWeight<\/td><\/tr><tr><td>height<\/td><td>height<\/td><\/tr><tr><td>left<\/td><td>left<\/td><\/tr><tr><td>letter-spacing<\/td><td>letterSpacing<\/td><\/tr><tr><td>line-height<\/td><td>lineHeight<\/td><\/tr><tr><td>list-style<\/td><td>listStyle<\/td><\/tr><tr><td>list-style-image<\/td><td>listStyleImage<\/td><\/tr><tr><td>list-style-position<\/td><td>listStylePosition<\/td><\/tr><tr><td>list-style-type<\/td><td>listStyleType<\/td><\/tr><tr><td>margin<\/td><td>margin<\/td><\/tr><tr><td>margin-bottom<\/td><td>marginBottom<\/td><\/tr><tr><td>margin-left<\/td><td>marginLeft<\/td><\/tr><tr><td>margin-right<\/td><td>marginRight<\/td><\/tr><tr><td>margin-top<\/td><td>marginTop<\/td><\/tr><tr><td>overflow<\/td><td>overflow<\/td><\/tr><tr><td>padding<\/td><td>padding<\/td><\/tr><tr><td>padding-bottom<\/td><td>paddingBottom<\/td><\/tr><tr><td>padding-left<\/td><td>paddingLeft<\/td><\/tr><tr><td>padding-right<\/td><td>paddingRight<\/td><\/tr><tr><td>padding-top<\/td><td>paddingTop<\/td><\/tr><tr><td>page-break-after<\/td><td>pageBreakAfter<\/td><\/tr><tr><td>page-break-before<\/td><td>pageBreakBefore<\/td><\/tr><tr><td>position<\/td><td>position<\/td><\/tr><tr><td>stroke-dasharray<\/td><td>strokeDasharray<\/td><\/tr><tr><td>stroke-dashoffset<\/td><td>strokeDashoffset<\/td><\/tr><tr><td>stroke-width<\/td><td>strokeWidth<\/td><\/tr><tr><td>text-align<\/td><td>textAlign<\/td><\/tr><tr><td>text-decoration<\/td><td>textDecoration<\/td><\/tr><tr><td>text-indent<\/td><td>textIndent<\/td><\/tr><tr><td>text-transform<\/td><td>textTransform<\/td><\/tr><tr><td>top<\/td><td>top<\/td><\/tr><tr><td>vertical-align<\/td><td>verticalAlign<\/td><\/tr><tr><td>visibility<\/td><td>visibility<\/td><\/tr><tr><td>width<\/td><td>width<\/td><\/tr><tr><td>z-index<\/td><td>zIndex<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p>To completely override the existing inline style, you set the <code>cssText<\/code> property of the <code>style<\/code> object. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">element.style.cssText = <span class=\"hljs-string\">'color:red;background-color:yellow'<\/span>;\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Or you can use the <code>setAttribute()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">element.setAttribute(<span class=\"hljs-string\">'style'<\/span>,<span class=\"hljs-string\">'color:red;background-color:yellow'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Once setting the inline style, you can modify one or more CSS properties:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">element.style.color = <span class=\"hljs-string\">'blue'<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you do not want to completely overwrite the existing CSS properties, you can concatenate the new CSS property to the <code>cssText<\/code> as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">element.style.cssText += <span class=\"hljs-string\">'color:red;background-color:yellow'<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this case, the <code>+= <\/code> operator appends the new style string to the existing one.<\/p>\n\n\n\n<p>The following <code>css()<\/code> helper function is used to set multiple styles for an element from an object of key-value pairs:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">css<\/span>(<span class=\"hljs-params\">e, styles<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">const<\/span> property <span class=\"hljs-keyword\">in<\/span> styles)\n        e.style&#91;property] = styles&#91;property];\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>You can use this <code>css()<\/code> function to set multiple styles for an element with the id <code>#content<\/code> as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> content = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#content'<\/span>);\ncss(content, { <span class=\"hljs-attr\">background<\/span>: <span class=\"hljs-string\">'yellow'<\/span>, <span class=\"hljs-attr\">border<\/span>: <span class=\"hljs-string\">'solid 1px red'<\/span>});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example uses the <code>style<\/code> object to set the CSS properties of a paragraph with the id <code>content<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">charset<\/span>=<span class=\"hljs-string\">\"utf-8\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>JS Style Demo<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"content\"<\/span>&gt;<\/span>JavaScript Setting Style Demo!<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">p<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span>&gt;<\/span><span class=\"javascript\">\n        <span class=\"hljs-keyword\">let<\/span> p = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#content'<\/span>);\n        p.style.color = <span class=\"hljs-string\">'red'<\/span>;\n        p.style.fontWeight = <span class=\"hljs-string\">'bold'<\/span>;\n    <\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works:<\/p>\n\n\n\n<ul><li>First, select the paragraph element whose id is <code>content<\/code> by using the <code>querySelector()<\/code> method.<\/li><li>Then, set the color and font-weight properties of the paragraph by setting the <code>color<\/code> and <code>fontWeight<\/code> properties of the <code>style<\/code> object.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Getting inline styles<\/h2>\n\n\n\n<p>The <code>style<\/code> property returns the inline styles of an element. It is not very useful in practice because the <code>style<\/code> property doesn&#8217;t return the rules that come from elsewhere e.g., styles from an external style sheet.<\/p>\n\n\n\n<p>To get all styles applied to an element, you should use the <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-getcomputedstyle\/\">window.getComputedStyle()<\/a><\/code> method.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Use the properties of <code>element.style<\/code> object to set the inline CSS properties for the HTML element.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"85492\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/\"\n\t\t\t\tdata-post-title=\"JavaScript Style\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"85492\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/\"\n\t\t\t\tdata-post-title=\"JavaScript Style\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the style property to manipulate the inline style of the HTML elements.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":85107,"menu_order":28,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Style: Setting Inline CSS Properties of an HTML Element<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to use the style property to manipulate the inline style of the HTML elements.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Style: Setting Inline CSS Properties of an HTML Element\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn how to use the style property to manipulate the inline style of the HTML elements.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2021-10-14T09:50:02+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/\",\"name\":\"JavaScript Style: Setting Inline CSS Properties of an HTML Element\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2020-02-03T02:33:29+00:00\",\"dateModified\":\"2021-10-14T09:50:02+00:00\",\"description\":\"In this tutorial, you will learn how to use the style property to manipulate the inline style of the HTML elements.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript DOM\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Style\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Style: Setting Inline CSS Properties of an HTML Element","description":"In this tutorial, you will learn how to use the style property to manipulate the inline style of the HTML elements.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Style: Setting Inline CSS Properties of an HTML Element","og_description":"In this tutorial, you will learn how to use the style property to manipulate the inline style of the HTML elements.","og_url":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/","og_site_name":"PriFix Tutorial","article_modified_time":"2021-10-14T09:50:02+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/","url":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/","name":"JavaScript Style: Setting Inline CSS Properties of an HTML Element","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2020-02-03T02:33:29+00:00","dateModified":"2021-10-14T09:50:02+00:00","description":"In this tutorial, you will learn how to use the style property to manipulate the inline style of the HTML elements.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-style\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"JavaScript DOM","item":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/"},{"@type":"ListItem","position":3,"name":"JavaScript Style"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85492"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=85492"}],"version-history":[{"count":3,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85492\/revisions"}],"predecessor-version":[{"id":88660,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85492\/revisions\/88660"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85107"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=85492"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
{"id":62,"date":"2016-08-01T23:58:02","date_gmt":"2016-08-02T06:58:02","guid":{"rendered":"http:\/\/https://jsprifix.netlify.app/\/?page_id=62"},"modified":"2022-08-30T17:54:51","modified_gmt":"2022-08-31T00:54:51","slug":"javascript-do-while","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/","title":{"rendered":"JavaScript do&#8230;while Loop"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the JavaScript <code>do...while<\/code> statement to create a loop that executes a block until a condition is <code>false<\/code>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the JavaScript do&#8230;while statement<\/h2>\n\n\n\n<p>The <code>do...while<\/code> loop statement creates a loop that executes a block until a condition evaluates to <code>false<\/code>. The following&nbsp;statement illustrates the syntax of the <code>do...while<\/code> loop:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">do<\/span> {\n  statement;\n} <span class=\"hljs-keyword\">while<\/span>(expression);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Unlike the <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-while-loop\/\"><code>while<\/code><\/a> loop, the <code>do-while<\/code> loop always executes the <code>statement<\/code> at least once before evaluating the <code>expression<\/code>.<\/p>\n\n\n\n<p>Because the <code>do...while<\/code> loop evaluates expression after each iteration, it&#8217;s often referred to as a post-test loop.<\/p>\n\n\n\n<p>Inside the loop body, you need to make changes to some&nbsp;<a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-variables\/\">variables<\/a> to ensure that the <code>expression<\/code> is <code>false<\/code> after some iterations. Otherwise, you&#8217;ll have an indefinite loop.<\/p>\n\n\n\n<p>Note that starting with ES6+, the trailing semicolon (<code>;<\/code>) after the <code>while(expression)<\/code> is optional. So you can use the following syntax:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">do<\/span> {\n  statement;\n} <span class=\"hljs-keyword\">while<\/span>(expression)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following flowchart illustrates the <code>do-while<\/code> loop statement: <\/p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/javascript-do-while.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/javascript-do-while.svg\" alt=\"JavaScript do while\" class=\"wp-image-89169\"\/><\/a><\/figure><\/div>\n\n\n<p>In practice, you often use the <code>do...while<\/code> statement when you want to execute the loop body at least once before checking the condition.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript do while statement examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the <code>do...while<\/code> statement.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Simple JavaScript do while statement example<\/h3>\n\n\n\n<p>The following example uses the <code>do...while<\/code> statement to output five numbers from 0 to 4 to the console:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> count = <span class=\"hljs-number\">0<\/span>;\n<span class=\"hljs-keyword\">do<\/span> {\n  <span class=\"hljs-built_in\">console<\/span>.log(count);\n  count++;\n} <span class=\"hljs-keyword\">while<\/span> (count &lt; <span class=\"hljs-number\">5<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">0\n1\n2\n3\n4<\/code><\/span><\/pre>\n\n\n<p>In this example:<\/p>\n\n\n\n<ul><li>First, declare and initialize the <code>count<\/code> variable to zero.<\/li><li>Second, show the <code>count<\/code> and increase its value by one in each iteration until its value is greater or equal to 5.<\/li><\/ul>\n\n\n\n<h3 class=\"wp-block-heading\">2) Using the JavaScript do while statement to make a simple number guessing game<\/h3>\n\n\n\n<p>The following example uses the <code>do...while<\/code> statement to generate a number guessing game. <\/p>\n\n\n\n<p>The script generates a random integer between 1 and 10. And you have to make a number of guesses until your number matches the random number.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/\/ generate a secret number between 1 and 10<\/span>\n<span class=\"hljs-keyword\">const<\/span> MIN = <span class=\"hljs-number\">1<\/span>;\n<span class=\"hljs-keyword\">const<\/span> MAX = <span class=\"hljs-number\">10<\/span>;\n\n<span class=\"hljs-keyword\">let<\/span> secretNumber = <span class=\"hljs-built_in\">Math<\/span>.floor(<span class=\"hljs-built_in\">Math<\/span>.random() * (MAX - MIN + <span class=\"hljs-number\">1<\/span>)) + MIN;\n\n<span class=\"hljs-keyword\">let<\/span> guesses = <span class=\"hljs-number\">0<\/span>; <span class=\"hljs-comment\">\/\/ for storing the number of guesses<\/span>\n<span class=\"hljs-keyword\">let<\/span> hint = <span class=\"hljs-string\">''<\/span>; <span class=\"hljs-comment\">\/\/ for storing hint<\/span>\n<span class=\"hljs-keyword\">let<\/span> number = <span class=\"hljs-number\">0<\/span>;\n<span class=\"hljs-keyword\">do<\/span> {\n  <span class=\"hljs-comment\">\/\/ get input from user<\/span>\n  <span class=\"hljs-keyword\">let<\/span> input = prompt(<span class=\"hljs-string\">`Please enter a number between <span class=\"hljs-subst\">${MIN}<\/span> and <span class=\"hljs-subst\">${MAX}<\/span>`<\/span> + hint);\n\n  <span class=\"hljs-comment\">\/\/ get the integer<\/span>\n  number = <span class=\"hljs-built_in\">parseInt<\/span>(input);\n\n  <span class=\"hljs-comment\">\/\/ increase the number of guesses<\/span>\n  guesses++;\n\n  <span class=\"hljs-comment\">\/\/ check input number with the secret number provide hint if needed<\/span>\n  <span class=\"hljs-keyword\">if<\/span> (number &gt; secretNumber) {\n    hint = <span class=\"hljs-string\">', and less than '<\/span> + number;\n  } <span class=\"hljs-keyword\">else<\/span> <span class=\"hljs-keyword\">if<\/span> (number &lt; secretNumber) {\n    hint = <span class=\"hljs-string\">', and greater than '<\/span> + number;\n  } <span class=\"hljs-keyword\">else<\/span> <span class=\"hljs-keyword\">if<\/span> (number == secretNumber) {\n    alert(<span class=\"hljs-string\">`Bravo! you're correct after <span class=\"hljs-subst\">${guesses}<\/span> guess(es).`<\/span>);\n  }\n} <span class=\"hljs-keyword\">while<\/span> (number != secretNumber);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, declare the MIN and MAX constants and initialize their values to 1 and 10:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> MIN = <span class=\"hljs-number\">1<\/span>;\n<span class=\"hljs-keyword\">const<\/span> MAX = <span class=\"hljs-number\">10<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, use <code>Math.random()<\/code> function to generate a random floating-point number with the value in the range of 0 and 1 (inclusive of zero but not one).  <\/p>\n\n\n\n<p>To generate a random number between MIN and MAX  (exclusive), you use the following expression:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">Math<\/span>.random() * (MAX - MIN + <span class=\"hljs-number\">1<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, the result is a floating-point number. Therefore, you need to use the <code>Math.floor()<\/code> function to convert it to an integer:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">Math<\/span>.floor(<span class=\"hljs-built_in\">Math<\/span>.random() * (MAX - MIN + <span class=\"hljs-number\">1<\/span>))<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To generate a random number between min and max, you use the following expression:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> secretNumber = <span class=\"hljs-built_in\">Math<\/span>.floor(<span class=\"hljs-built_in\">Math<\/span>.random() * (MAX - MIN + <span class=\"hljs-number\">1<\/span>)) + MIN;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, define three variables for storing the number of guesses, hints, and user&#8217;s input number:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> guesses = <span class=\"hljs-number\">0<\/span>; <span class=\"hljs-comment\">\/\/ for storing the number of guesses<\/span>\n<span class=\"hljs-keyword\">let<\/span> hint = <span class=\"hljs-string\">''<\/span>; <span class=\"hljs-comment\">\/\/ for storing hint<\/span>\n<span class=\"hljs-keyword\">let<\/span> number = <span class=\"hljs-number\">0<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Fourth, use the <code>input()<\/code> function to get the input from the user:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> input = prompt(<span class=\"hljs-string\">`Please enter a number between <span class=\"hljs-subst\">${MIN}<\/span> and <span class=\"hljs-subst\">${MAX}<\/span>`<\/span> + hint);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Note that the <code>input()<\/code> function only works on web browsers. If you run the code in another environment such as node.js, please check the corresponding function.<\/p>\n\n\n\n<p>The <code>input()<\/code> function returns a string, therefore, you need to use the <code>parseInt()<\/code> function to convert it to an integer:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"> number = <span class=\"hljs-built_in\">parseInt<\/span>(input);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Fifth, increase the number of guesses in each iteration:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\"> guesses++;<\/code><\/span><\/pre>\n\n\n<p>Sixth, check the input number with the secret number (random) number and give hint. If the numbers are matched, show the message using the <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-alert\/\">alert()<\/a><\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">if<\/span> (number &gt; secretNumber) {\n  hint = <span class=\"hljs-string\">', and less than '<\/span> + number;\n} <span class=\"hljs-keyword\">else<\/span> <span class=\"hljs-keyword\">if<\/span> (number &lt; secretNumber) {\n  hint = <span class=\"hljs-string\">', and greater than '<\/span> + number;\n} <span class=\"hljs-keyword\">else<\/span> <span class=\"hljs-keyword\">if<\/span> (number == secretNumber) {\n  alert(<span class=\"hljs-string\">`Bravo! you're correct after <span class=\"hljs-subst\">${guesses}<\/span> guess(es).`<\/span>);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Seventh, perform the next iteration until the number matches the secret number.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">while<\/span> (number != secretNumber);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Use the <code>do\u2026while<\/code> statement to create a loop that executes a code block until a condition is <code>false<\/code>.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"62\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/\"\n\t\t\t\tdata-post-title=\"JavaScript do&#8230;while Loop\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"62\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/\"\n\t\t\t\tdata-post-title=\"JavaScript do&#8230;while Loop\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the JavaScript do-while statement to create a loop.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":32,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript do...while Loop with Practical Examples<\/title>\n<meta name=\"description\" content=\"This tutorial shows you how to use JavaScript do...while statement to create a loop that executes a block until a condition is false.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript do...while Loop with Practical Examples\" \/>\n<meta property=\"og:description\" content=\"This tutorial shows you how to use JavaScript do...while statement to create a loop that executes a block until a condition is false.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-08-31T00:54:51+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/javascript-do-while.svg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/\",\"name\":\"JavaScript do...while Loop with Practical Examples\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2016-08-02T06:58:02+00:00\",\"dateModified\":\"2022-08-31T00:54:51+00:00\",\"description\":\"This tutorial shows you how to use JavaScript do...while statement to create a loop that executes a block until a condition is false.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":4,\"name\":\"JavaScript do&#8230;while Loop\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript do...while Loop with Practical Examples","description":"This tutorial shows you how to use JavaScript do...while statement to create a loop that executes a block until a condition is false.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript do...while Loop with Practical Examples","og_description":"This tutorial shows you how to use JavaScript do...while statement to create a loop that executes a block until a condition is false.","og_url":"https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-08-31T00:54:51+00:00","og_image":[{"url":"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/javascript-do-while.svg"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/","url":"https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/","name":"JavaScript do...while Loop with Practical Examples","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2016-08-02T06:58:02+00:00","dateModified":"2022-08-31T00:54:51+00:00","description":"This tutorial shows you how to use JavaScript do...while statement to create a loop that executes a block until a condition is false.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-do-while\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":3,"name":"PriFix Tutorial","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":4,"name":"JavaScript do&#8230;while Loop"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/62"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=62"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/62\/revisions"}],"predecessor-version":[{"id":90357,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/62\/revisions\/90357"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=62"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
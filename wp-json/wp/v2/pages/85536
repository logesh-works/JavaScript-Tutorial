{"id":85536,"date":"2020-02-11T20:52:35","date_gmt":"2020-02-12T04:52:35","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=85536"},"modified":"2020-04-23T18:59:02","modified_gmt":"2020-04-24T01:59:02","slug":"javascript-events","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/","title":{"rendered":"JavaScript Events"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about the JavaScript events, event models, and how to handle events.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to JavaScript events<\/h2>\n\n\n\n<p>An event is an action that occurs in the web browser, which the web browser feedbacks to you so that you can respond to it.<\/p>\n\n\n\n<p>For example, when users click a button on a webpage, you may want to respond to this <code>click<\/code> event by <a href=\"https:\/\/www.javascripttutorial.net\/javascript-bom\/javascript-alert\/\">displaying a dialog box<\/a>.<\/p>\n\n\n\n<p>Each event may have an event handler which is a block of code that will execute when the event occurs.<\/p>\n\n\n\n<p>An event handler is also known as an event listener. It listens to the event and executes when the event occurs.<\/p>\n\n\n\n<p>Suppose you have a button with the id <code>btn<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"btn\"<\/span>&gt;<\/span>Click Me!<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">button<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To define the code that will be executed when the button is clicked, you need to register an event handler using the <code>addEventListener()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> btn = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#btn'<\/span>);\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">display<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    alert(<span class=\"hljs-string\">'It was clicked!'<\/span>);\n}\n\nbtn.addEventListener(<span class=\"hljs-string\">'click'<\/span>,display);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>First, select the button with the id <code>btn<\/code> by using the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-queryselector\/\">querySelector()<\/a><\/code> method.<\/li><li>Then, define a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-function\/\">function<\/a> called <code>display()<\/code> as an event handler.<\/li><li>Finally, register an event handler using the <code>addEventListener()<\/code> so that when users click the button, the <code>display()<\/code> function will be executed.<\/li><\/ul>\n\n\n\n<p>A shorter way to register an event handler is to place all code in an anonymous function, like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> btn = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#btn'<\/span>);\n\nbtn.addEventListener(<span class=\"hljs-string\">'click'<\/span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    alert(<span class=\"hljs-string\">'It was clicked!'<\/span>);\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Event flow<\/h2>\n\n\n\n<p>Assuming that you have the following HTML document:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>JS Event Demo<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"container\"<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">'btn'<\/span>&gt;<\/span>Click Me!<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">button<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>When you click the button, you&#8217;re clicking not only the button but also the button&#8217;s container, the <code>div<\/code>, and the whole webpage.<\/p>\n\n\n\n<p>Event flow explains the order in which events are received on the page from the element where the event occurs and propagated through the DOM tree.<\/p>\n\n\n\n<p>There are two main event models: event bubbling and event capturing.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Event bubbling<\/h3>\n\n\n\n<p>In the event bubbling model, an event starts at the most specific element and then flows upward toward the least specific element (the <code>document<\/code> or even <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-bom\/javascript-window\/\">window<\/a><\/code>).<\/p>\n\n\n\n<p>When you click the button, the <code>click<\/code> event occurs in the following order:<\/p>\n\n\n\n<ol><li>button<\/li><li>div with the id container<\/li><li>body<\/li><li>html<\/li><li>document<\/li><\/ol>\n\n\n\n<p>The <code>click<\/code> event first occurs on the button which is the element that was clicked. Then the <code>click<\/code> event goes up the DOM tree, firing on each node along its way until it reaches the <code>document<\/code> object.<\/p>\n\n\n\n<p>The following picture illustrates the event bubbling effect when users click the button:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/02\/JavaScript-event-bubbling.png\"><img decoding=\"async\" loading=\"lazy\" width=\"361\" height=\"348\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/02\/JavaScript-event-bubbling.png\" alt=\"JavaScript event bubbling\" class=\"wp-image-85537\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/02\/JavaScript-event-bubbling.png 361w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/02\/JavaScript-event-bubbling-300x289.png 300w\" sizes=\"(max-width: 361px) 100vw, 361px\" \/><\/a><\/figure>\n\n\n\n<p>Note that modern web browsers bubble the event up to the <code>window<\/code> object.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Event capturing<\/h3>\n\n\n\n<p>In the event capturing model, an event starts at the least specific element and flows downward toward the most specific element.<\/p>\n\n\n\n<p>When you click the button, the <code>click<\/code> event occurs in the following order:<\/p>\n\n\n\n<ol><li>document<\/li><li>html<\/li><li>body<\/li><li>div with the id container<\/li><li>button<\/li><\/ol>\n\n\n\n<p>The following picture illustrates the event capturing effect:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/02\/JavaScript-event-capturing.png\"><img decoding=\"async\" loading=\"lazy\" width=\"358\" height=\"351\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/02\/JavaScript-event-capturing.png\" alt=\"JavaScript event capturing\" class=\"wp-image-85538\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/02\/JavaScript-event-capturing.png 358w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/02\/JavaScript-event-capturing-300x294.png 300w\" sizes=\"(max-width: 358px) 100vw, 358px\" \/><\/a><\/figure>\n\n\n\n<h3 class=\"wp-block-heading\">DOM Level 2 Event flow<\/h3>\n\n\n\n<p>DOM level 2 events specify that event flow has three phases:<\/p>\n\n\n\n<ul><li>First, event capturing occurs, which provides the opportunity to intercept the event.<\/li><li>Then, the actual target receives the event.<\/li><li>Finally, event bubbling occurs, which allows a final response to the event.<\/li><\/ul>\n\n\n\n<p>The following picture illustrates the DOM Level 2 event model when users click the button:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/02\/JavaScript-DOM-Level-2-Event.png\"><img decoding=\"async\" loading=\"lazy\" width=\"626\" height=\"556\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/02\/JavaScript-DOM-Level-2-Event.png\" alt=\"JavaScript DOM Level 2 Event\" class=\"wp-image-85539\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/02\/JavaScript-DOM-Level-2-Event.png 626w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/02\/JavaScript-DOM-Level-2-Event-300x266.png 300w\" sizes=\"(max-width: 626px) 100vw, 626px\" \/><\/a><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">Event object<\/h2>\n\n\n\n<p>When the event occurs, the web browser passed an <code>Event<\/code> object to the event handler:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> btn = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#btn'<\/span>);\n\nbtn.addEventListener(<span class=\"hljs-string\">'click'<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>(<span class=\"hljs-params\">event<\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(event.type);\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-string\">'click'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following table shows the most commonly-used properties and methods of the <code>event<\/code> object:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th>Property \/ Method<\/th><th>Description<\/th><\/tr><\/thead><tbody><tr><td>bubbles<\/td><td>true if the event bubbles<\/td><\/tr><tr><td>cancelable<\/td><td>true if the default behavior of the event can be canceled<\/td><\/tr><tr><td>currentTarget<\/td><td>the current element on which the event is firing<\/td><\/tr><tr><td>defaultPrevented<\/td><td>return true if the preventDefault() has been called.<\/td><\/tr><tr><td>detail<\/td><td>more informatio nabout the event<\/td><\/tr><tr><td>eventPhase<\/td><td>1 for capturing phase, 2 for target, 3 for bubbling<\/td><\/tr><tr><td>preventDefault()<\/td><td>cancel the default behavior for the event. This method is only effective if the <code>cancelable<\/code> property is true<\/td><\/tr><tr><td>stopPropagation()<\/td><td>cancel any further event capturing or bubbling. This method only can be used if the <code>bubbles<\/code> property is true.<\/td><\/tr><tr><td>target<\/td><td>the target element of the event<\/td><\/tr><tr><td>type<\/td><td>the type of event that was fired<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p>Note that the <code>event<\/code> object is only accessible inside the event handler. Once all the event handlers have been executed, the event object is automatically destroyed.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">preventDefault()<\/h3>\n\n\n\n<p>To prevent the default behavior of an event, you use the <code>preventDefault()<\/code> method.<\/p>\n\n\n\n<p>For example, when you click a link, the browser navigates you to the URL specified in the <code>href<\/code> attribute:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a<\/span> <span class=\"hljs-attr\">href<\/span>=<span class=\"hljs-string\">\"https:\/\/www.javascripttutorial.net\/\"<\/span>&gt;<\/span>JS Tutorial<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">a<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, you can prevent this behavior by using the <code>preventDefault()<\/code> method of the <code>event<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> link = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'a'<\/span>);\n\nlink.addEventListener(<span class=\"hljs-string\">'click'<\/span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>(<span class=\"hljs-params\">event<\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'clicked'<\/span>);\n    event.preventDefault();\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Note that the <code>preventDefault()<\/code> method does not stop the event from bubbling up the DOM. And an event can be canceled when its <code>cancelable<\/code> property is <code>true<\/code>.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">stopPropagation()<\/h3>\n\n\n\n<p>The <code>stopPropagation()<\/code> method immediately stops the flow of an event through the DOM tree. However, it does not stop the browers default behavior.<\/p>\n\n\n\n<p>See the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> btn = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#btn'<\/span>);\n\nbtn.addEventListener(<span class=\"hljs-string\">'click'<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>(<span class=\"hljs-params\">event<\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'The button was clicked!'<\/span>);\n    event.stopPropagation();\n});\n\n<span class=\"hljs-built_in\">document<\/span>.body.addEventListener(<span class=\"hljs-string\">'click'<\/span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>(<span class=\"hljs-params\">event<\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'The body was clicked!'<\/span>);\n});\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Without the <code>stopPropagation()<\/code> method, you would see two messages on the Console window.<\/p>\n\n\n\n<p>However, the <code>click<\/code> event never reaches the <code>body<\/code> because the <code>stopPropagation()<\/code> was called on the <code>click<\/code> event handler of the button.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>An event is an action that occurs in the web browser e.g., a mouse click.<\/li><li>Event flow has two main models: event bubbling and event capturing.<\/li><li>DOM Level 2 Event specifies that the event flow has three phases: event bubbling, the event occurs at the exact element, and event capturing.<\/li><li>Use <code>addEventListener()<\/code> to register an event that connects an event to an event listener<\/li><li>The <code>event<\/code> object is accessible only within the event listener.<\/li><li>Use <code>preventDefault()<\/code> method to prevent the default behavior of an event, but does not stop the event flow.<\/li><li>Use <code>stopPropagation()<\/code> method to stop the flow of an event through the DOM tree, but does not cancel the browser default behavior.<\/li><\/ul>\n\n\n\n<p><\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"85536\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/\"\n\t\t\t\tdata-post-title=\"JavaScript Events\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"85536\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/\"\n\t\t\t\tdata-post-title=\"JavaScript Events\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn about JavaScript events, its model, and how to handle an event when it occurs.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":85107,"menu_order":33,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Understanding JavaScript Events<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn about JavaScript events, its model, and how to handle an event when it occurs.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Understanding JavaScript Events\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn about JavaScript events, its model, and how to handle an event when it occurs.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2020-04-24T01:59:02+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/02\/JavaScript-event-bubbling.png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"5 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/\",\"name\":\"Understanding JavaScript Events\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-02-12T04:52:35+00:00\",\"dateModified\":\"2020-04-24T01:59:02+00:00\",\"description\":\"In this tutorial, you will learn about JavaScript events, its model, and how to handle an event when it occurs.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript DOM\",\"item\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Events\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Understanding JavaScript Events","description":"In this tutorial, you will learn about JavaScript events, its model, and how to handle an event when it occurs.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/","og_locale":"en_US","og_type":"article","og_title":"Understanding JavaScript Events","og_description":"In this tutorial, you will learn about JavaScript events, its model, and how to handle an event when it occurs.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/","og_site_name":"PriFix Tutorial","article_modified_time":"2020-04-24T01:59:02+00:00","og_image":[{"url":"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/02\/JavaScript-event-bubbling.png"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"5 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/","url":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/","name":"Understanding JavaScript Events","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-02-12T04:52:35+00:00","dateModified":"2020-04-24T01:59:02+00:00","description":"In this tutorial, you will learn about JavaScript events, its model, and how to handle an event when it occurs.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-events\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"JavaScript DOM","item":"https:\/\/www.javascripttutorial.net\/javascript-dom\/"},{"@type":"ListItem","position":3,"name":"JavaScript Events"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85536"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=85536"}],"version-history":[{"count":1,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85536\/revisions"}],"predecessor-version":[{"id":86680,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85536\/revisions\/86680"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85107"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=85536"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
{"id":342,"date":"2016-08-14T23:56:59","date_gmt":"2016-08-15T06:56:59","guid":{"rendered":"http:\/\/www.javascripttutorial.net\/?page_id=342"},"modified":"2022-03-04T19:24:36","modified_gmt":"2022-03-05T03:24:36","slug":"javascript-queue","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-queue\/","title":{"rendered":"JavaScript Queue"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about the queue data structure and how to implement a JavaScript queue.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the Queue data structure<\/h2>\n\n\n\n<p>A queue&nbsp;is&nbsp;an ordered list of elements where an element is inserted at the end of the queue and is removed from the front of the queue.<\/p>\n\n\n\n<p>A queue works based on the first-in, first-out (FIFO) principle, which is different from a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-stack\/\">stack<\/a>, which works based on the last-in, first-out (LIFO) principle.<\/p>\n\n\n\n<p>A queue has two main operations:<\/p>\n\n\n\n<ul><li>Insert a new element at the end of the queue, which is called enqueue.<\/li><li>Remove an element from the front of the queue, which is called dequeue.<\/li><\/ul>\n\n\n\n<p>The following picture illustrates a queue:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" loading=\"lazy\" width=\"533\" height=\"177\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2016\/08\/JavaScript-Queue-Illustration.png\" alt=\"JavaScript Queue Illustration\" class=\"wp-image-343\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2016\/08\/JavaScript-Queue-Illustration.png 533w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2016\/08\/JavaScript-Queue-Illustration-300x100.png 300w\" sizes=\"(max-width: 533px) 100vw, 533px\" \/><\/figure>\n\n\n\n<p>Another important operation of a queue is getting the element at the front called <em>peek<\/em>. Different from the <em>dequeue<\/em> operation, the <i>peek<\/i> operation returns the element at the front without&nbsp;modifying the queue.<\/p>\n\n\n\n<p>The name&nbsp;<em>queue<\/em> comes from the analogy to a queue of customers at a bank. The customer who comes first will be served first, and the one who comes later is queued at the end of the queue and will be served later.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" loading=\"lazy\" width=\"624\" height=\"264\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2019\/12\/queue-at-a-bank.png\" alt=\"queue at a bank\" class=\"wp-image-84544\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2019\/12\/queue-at-a-bank.png 624w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2019\/12\/queue-at-a-bank-300x127.png 300w\" sizes=\"(max-width: 624px) 100vw, 624px\" \/><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">Implementing a\u00a0JavaScript\u00a0queue using an object<\/h2>\n\n\n\n<p>The following shows how to implement the queue data structure using an object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Queue<\/span> <\/span>{\r\n  <span class=\"hljs-keyword\">constructor<\/span>() {\r\n    <span class=\"hljs-keyword\">this<\/span>.elements = {};\r\n    <span class=\"hljs-keyword\">this<\/span>.head = <span class=\"hljs-number\">0<\/span>;\r\n    <span class=\"hljs-keyword\">this<\/span>.tail = <span class=\"hljs-number\">0<\/span>;\r\n  }\r\n  enqueue(element) {\r\n    <span class=\"hljs-keyword\">this<\/span>.elements&#91;<span class=\"hljs-keyword\">this<\/span>.tail] = element;\r\n    <span class=\"hljs-keyword\">this<\/span>.tail++;\r\n  }\r\n  dequeue() {\r\n    <span class=\"hljs-keyword\">const<\/span> item = <span class=\"hljs-keyword\">this<\/span>.elements&#91;<span class=\"hljs-keyword\">this<\/span>.head];\r\n    <span class=\"hljs-keyword\">delete<\/span> <span class=\"hljs-keyword\">this<\/span>.elements&#91;<span class=\"hljs-keyword\">this<\/span>.head];\r\n    <span class=\"hljs-keyword\">this<\/span>.head++;\r\n    <span class=\"hljs-keyword\">return<\/span> item;\r\n  }\r\n  peek() {\r\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">this<\/span>.elements&#91;<span class=\"hljs-keyword\">this<\/span>.head];\r\n  }\r\n  <span class=\"hljs-keyword\">get<\/span> length() {\r\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">this<\/span>.tail - <span class=\"hljs-keyword\">this<\/span>.head;\r\n  }\r\n  <span class=\"hljs-keyword\">get<\/span> isEmpty() {\r\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">this<\/span>.length === <span class=\"hljs-number\">0<\/span>;\r\n  }\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, initialize the object that stores the elements of the queue (<code>elements<\/code>) and two variables for tracking the head and tail in the constructor:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Queue<\/span> <\/span>{\r\n  <span class=\"hljs-keyword\">constructor<\/span>() {\r\n    <span class=\"hljs-keyword\">this<\/span>.elements = {};\r\n    <span class=\"hljs-keyword\">this<\/span>.head = <span class=\"hljs-number\">0<\/span>;\r\n    <span class=\"hljs-keyword\">this<\/span>.tail = <span class=\"hljs-number\">0<\/span>;\r\n  }\n  <span class=\"hljs-comment\">\/\/...<\/span>\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\"><\/code><\/span><\/pre>\n\n\n<p>Second, enqueue an element by adding it to the elements object to the end of the queue:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Queue<\/span> <\/span>{\r\n  <span class=\"hljs-comment\">\/\/...<\/span>\r\n  enqueue(element) {\r\n    <span class=\"hljs-keyword\">this<\/span>.elements&#91;<span class=\"hljs-keyword\">this<\/span>.tail] = element;\r\n    <span class=\"hljs-keyword\">this<\/span>.tail++;\r\n  }\r\n\n  <span class=\"hljs-comment\">\/\/...<\/span>\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, remove an element from the front of the queue:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Queue<\/span> <\/span>{\n\r\n  <span class=\"hljs-comment\">\/\/ ...<\/span>\r\n  dequeue() {\r\n    <span class=\"hljs-keyword\">const<\/span> item = <span class=\"hljs-keyword\">this<\/span>.elements&#91;<span class=\"hljs-keyword\">this<\/span>.head];\r\n    <span class=\"hljs-keyword\">delete<\/span> <span class=\"hljs-keyword\">this<\/span>.elements&#91;<span class=\"hljs-keyword\">this<\/span>.head];\r\n    <span class=\"hljs-keyword\">this<\/span>.head++;\r\n    <span class=\"hljs-keyword\">return<\/span> item;\r\n  }\r\n\n  <span class=\"hljs-comment\">\/\/...<\/span>\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Fourth, define the peek() method that accesses the element at the front of the queue:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Queue<\/span> <\/span>{\r\n  <span class=\"hljs-comment\">\/\/...<\/span>\r\n  peek() {\r\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">this<\/span>.elements&#91;<span class=\"hljs-keyword\">this<\/span>.head];\r\n  }\r\n  <span class=\"hljs-comment\">\/\/...  <\/span>\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Fifth, get the length of the queue:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Queue<\/span> <\/span>{\n  <span class=\"hljs-comment\">\/\/...<\/span>\r\n  <span class=\"hljs-keyword\">get<\/span> length() {\r\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">this<\/span>.tail - <span class=\"hljs-keyword\">this<\/span>.head;\r\n  }\n  <span class=\"hljs-comment\">\/\/...<\/span>\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The queue is empty when the length is zero.<\/p>\n\n\n\n<p>Finally, define the isEmpty() method that returns true if the queue is empty:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Queue<\/span> <\/span>{\r\n  <span class=\"hljs-comment\">\/\/ ...<\/span>\r\n  <span class=\"hljs-keyword\">get<\/span> isEmpty() {\r\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">this<\/span>.tail - <span class=\"hljs-keyword\">this<\/span>.head;\r\n  }\r\n  <span class=\"hljs-comment\">\/\/ ... <\/span>\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To create a new queue from the <code>Queue()<\/code> constructor function, you use the new keyword as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> q = <span class=\"hljs-keyword\">new<\/span> Queue();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To enqueue numbers from 1 to 7, you use the following code.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> i = <span class=\"hljs-number\">1<\/span>; i &lt;= <span class=\"hljs-number\">7<\/span>; i++) {\n    q.enqueue(i);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To get the number at the front of the queue, you use the <code>peek()<\/code> method.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(q.peek()); <span class=\"hljs-comment\">\/\/ 1<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To get the current length of the queue, you use the <code>length()<\/code> method as in the following example.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(q.length); <span class=\"hljs-comment\">\/\/ 7<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To remove the element at the front of the queue, you use the <code>dequeue()<\/code> method as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/\/ dequeue all elements<\/span>\n<span class=\"hljs-keyword\">while<\/span> (!q.isEmpty()) {\n    <span class=\"hljs-built_in\">console<\/span>.log(q.dequeue());\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Put it all together:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Queue<\/span> <\/span>{\r\n  <span class=\"hljs-keyword\">constructor<\/span>() {\r\n    <span class=\"hljs-keyword\">this<\/span>.elements = {};\r\n    <span class=\"hljs-keyword\">this<\/span>.head = <span class=\"hljs-number\">0<\/span>;\r\n    <span class=\"hljs-keyword\">this<\/span>.tail = <span class=\"hljs-number\">0<\/span>;\r\n  }\r\n  enqueue(element) {\r\n    <span class=\"hljs-keyword\">this<\/span>.elements&#91;<span class=\"hljs-keyword\">this<\/span>.tail] = element;\r\n    <span class=\"hljs-keyword\">this<\/span>.tail++;\r\n  }\r\n  dequeue() {\r\n    <span class=\"hljs-keyword\">const<\/span> item = <span class=\"hljs-keyword\">this<\/span>.elements&#91;<span class=\"hljs-keyword\">this<\/span>.head];\r\n    <span class=\"hljs-keyword\">delete<\/span> <span class=\"hljs-keyword\">this<\/span>.elements&#91;<span class=\"hljs-keyword\">this<\/span>.head];\r\n    <span class=\"hljs-keyword\">this<\/span>.head++;\r\n    <span class=\"hljs-keyword\">return<\/span> item;\r\n  }\r\n  peek() {\r\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">this<\/span>.elements&#91;<span class=\"hljs-keyword\">this<\/span>.head];\r\n  }\r\n  <span class=\"hljs-keyword\">get<\/span> length() {\r\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">this<\/span>.tail - <span class=\"hljs-keyword\">this<\/span>.head;\r\n  }\r\n  <span class=\"hljs-keyword\">get<\/span> isEmpty() {\r\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">this<\/span>.length === <span class=\"hljs-number\">0<\/span>;\r\n  }\r\n}\r\n\r\n<span class=\"hljs-keyword\">let<\/span> q = <span class=\"hljs-keyword\">new<\/span> Queue();\r\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> i = <span class=\"hljs-number\">1<\/span>; i &lt;= <span class=\"hljs-number\">7<\/span>; i++) {\r\n  q.enqueue(i);\r\n}\r\n<span class=\"hljs-comment\">\/\/ get the current item at the front of the queue<\/span>\r\n<span class=\"hljs-built_in\">console<\/span>.log(q.peek()); <span class=\"hljs-comment\">\/\/ 1<\/span>\r\n\r\n<span class=\"hljs-comment\">\/\/ get the current length of queue<\/span>\r\n<span class=\"hljs-built_in\">console<\/span>.log(q.length); <span class=\"hljs-comment\">\/\/ 7<\/span>\r\n\r\n<span class=\"hljs-comment\">\/\/ dequeue all elements<\/span>\r\n<span class=\"hljs-keyword\">while<\/span> (!q.isEmpty) {\r\n  <span class=\"hljs-built_in\">console<\/span>.log(q.dequeue());\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>A queue is a data structure that works based on the FIFO principle.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"342\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-queue\/\"\n\t\t\t\tdata-post-title=\"JavaScript Queue\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"342\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-queue\/\"\n\t\t\t\tdata-post-title=\"JavaScript Queue\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn about the queue data structure and how to implement a JavaScript queue.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":31,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Queue<\/title>\n<meta name=\"description\" content=\"This tutorial introduces the queue data structure and shows you how to implement it in JavaScript.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-queue\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Queue\" \/>\n<meta property=\"og:description\" content=\"This tutorial introduces the queue data structure and shows you how to implement it in JavaScript.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-queue\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-03-05T03:24:36+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2016\/08\/JavaScript-Queue-Illustration.png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-queue\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-queue\/\",\"name\":\"JavaScript Queue\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2016-08-15T06:56:59+00:00\",\"dateModified\":\"2022-03-05T03:24:36+00:00\",\"description\":\"This tutorial introduces the queue data structure and shows you how to implement it in JavaScript.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-queue\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-queue\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-queue\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Queue\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Queue","description":"This tutorial introduces the queue data structure and shows you how to implement it in JavaScript.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-queue\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Queue","og_description":"This tutorial introduces the queue data structure and shows you how to implement it in JavaScript.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-queue\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-03-05T03:24:36+00:00","og_image":[{"url":"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2016\/08\/JavaScript-Queue-Illustration.png"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-queue\/","url":"https:\/\/www.javascripttutorial.net\/javascript-queue\/","name":"JavaScript Queue","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2016-08-15T06:56:59+00:00","dateModified":"2022-03-05T03:24:36+00:00","description":"This tutorial introduces the queue data structure and shows you how to implement it in JavaScript.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-queue\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-queue\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-queue\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript Queue"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/342"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=342"}],"version-history":[{"count":4,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/342\/revisions"}],"predecessor-version":[{"id":90160,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/342\/revisions\/90160"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=342"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
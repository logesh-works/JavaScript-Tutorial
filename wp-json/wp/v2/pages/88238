{"id":88238,"date":"2021-01-27T19:37:20","date_gmt":"2021-01-28T03:37:20","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=88238"},"modified":"2021-01-27T19:50:41","modified_gmt":"2021-01-28T03:50:41","slug":"javascript-history-pushstate","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/","title":{"rendered":"JavaScript History pushState"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the JavaScript history <code>pushState()<\/code> method.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the JavaScript history <code>pushState()<\/code> method<\/h2>\n\n\n\n<p>The <code>history.pushState()<\/code> method allows you to add an entry to the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-bom\/javascript-history\/\">web browser&#8217;s session history stack<\/a>.<\/p>\n\n\n\n<p>Here&#8217;s the syntax of the <code>pushState()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">history<\/span><span class=\"hljs-selector-class\">.pushState<\/span>(<span class=\"hljs-selector-tag\">state<\/span>, <span class=\"hljs-selector-tag\">title<\/span>, <span class=\"hljs-selector-attr\">&#91;,url]<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>pushState()<\/code> method accepts three parameters:<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) state<\/h3>\n\n\n\n<p>The <code>state<\/code> is a serializable object. When you navigate to a new state, a <code>popstate<\/code> event is fired. And the <code>popstate<\/code> event has a <code>state<\/code> property that references the history entry&#8217;s <code>state<\/code> object.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">2) title<\/h3>\n\n\n\n<p>Most browser currently ingore this title property. If you want to change the title of the document, you can use the <code>documen.title<\/code> property instead.<\/p>\n\n\n\n<p>In practice, you pass an empty string to the <code>title<\/code> parameter.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">3) url<\/h3>\n\n\n\n<p>The optional <code>url<\/code> allows you to define the new history entry&#8217;s URL. The URL must be the same origin as the current URL or the method will throw an exception.<\/p>\n\n\n\n<p>When you set the new <code>url<\/code>, the web browser won&#8217;t load the <code>url<\/code>. The <code>url<\/code> defaults to the current URL if you don&#8217;t specify it.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript history <code>pushState()<\/code> example<\/h2>\n\n\n\n<p>We&#8217;ll make a simple application that shows three tabs: React, Vue, and Angular. <\/p>\n\n\n\n<p>When you click a tab, it&#8217;ll show the content of the selected tab. it&#8217;ll also update the URL using the history.<code>pushState()<\/code> method:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2021\/01\/javascript-history-pushstate.gif\"><img decoding=\"async\" loading=\"lazy\" width=\"562\" height=\"253\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2021\/01\/javascript-history-pushstate.gif\" alt=\"\" class=\"wp-image-88241\"\/><\/a><\/figure><\/div>\n\n\n\n<p>If you copy the URL with the hashtag and load it from the web browser, the app will load the corresponding content associated with that URL.<\/p>\n\n\n\n<p><a href=\"https:\/\/www.javascripttutorial.net\/sample\/webapis\/history\/index.html\" target=\"_blank\" rel=\"noreferrer noopener\">Click the following link to see the demo of the app.<\/a><\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Make the index.html page<\/h3>\n\n\n\n<p>The following defines the <code>index.html<\/code> page:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span> <span class=\"hljs-attr\">lang<\/span>=<span class=\"hljs-string\">\"en\"<\/span>&gt;<\/span>\r\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\r\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">charset<\/span>=<span class=\"hljs-string\">\"UTF-8\"<\/span> \/&gt;<\/span>\r\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"viewport\"<\/span> <span class=\"hljs-attr\">content<\/span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"<\/span> \/&gt;<\/span>\r\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>JavaScript History API: pushState Demo<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\r\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link<\/span> <span class=\"hljs-attr\">rel<\/span>=<span class=\"hljs-string\">\"stylesheet\"<\/span> <span class=\"hljs-attr\">href<\/span>=<span class=\"hljs-string\">\"css\/style.css\"<\/span> \/&gt;<\/span>\r\n\t<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\r\n\r\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\r\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"container\"<\/span>&gt;<\/span>\r\n\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"tabs\"<\/span>&gt;<\/span>\r\n\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul<\/span>&gt;<\/span>\r\n\t\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"active\"<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"tab1\"<\/span>&gt;<\/span>React<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">li<\/span>&gt;<\/span>\r\n\t\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"tab2\"<\/span>&gt;<\/span>Vue<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">li<\/span>&gt;<\/span>\r\n\t\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"tab3\"<\/span>&gt;<\/span>Angular<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">li<\/span>&gt;<\/span>\r\n\t\t\t\t<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">ul<\/span>&gt;<\/span>\r\n\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"content\"<\/span>&gt;<\/span>\r\n\t\t\t\t\tA JavaScript library for building user interfaces\r\n\t\t\t\t<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\r\n\t\t\t<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\r\n\t\t<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\r\n\r\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span> <span class=\"hljs-attr\">src<\/span>=<span class=\"hljs-string\">\"js\/app.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\r\n\t<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span>\r<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>And you can find the <code><a href=\"https:\/\/www.javascripttutorial.net\/sample\/webapis\/history\/css\/style.css\" target=\"_blank\" rel=\"noreferrer noopener\">style.css<\/a><\/code> file here.<\/p>\n\n\n\n<p>In the <code>app.js<\/code> file:<\/p>\n\n\n\n<p>First, select the tabs and content elements using the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-queryselector\/\">querySelector()<\/a><\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> tabs = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">\".tabs\"<\/span>);\n<span class=\"hljs-keyword\">const<\/span> content = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">\".tabs &gt; .content\"<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, define a <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-map\/\">map<\/a> object that associates the URL hash with each tab id:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> hashes = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Map<\/span>(&#91;\n    &#91;<span class=\"hljs-string\">\"#react\"<\/span>, <span class=\"hljs-string\">\"tab1\"<\/span>],\n    &#91;<span class=\"hljs-string\">\"#vue\"<\/span>, <span class=\"hljs-string\">\"tab2\"<\/span>],\n    &#91;<span class=\"hljs-string\">\"#angular\"<\/span>, <span class=\"hljs-string\">\"tab3\"<\/span>],\n]);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, define another map called data for mapping the tab id with an object. The object has two properties: <code>url<\/code> and <code>content<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> data = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Map<\/span>(&#91;\n    &#91;\n        <span class=\"hljs-string\">\"tab1\"<\/span>,\n        {\n            <span class=\"hljs-attr\">url<\/span>: <span class=\"hljs-string\">\"index.html#react\"<\/span>,\n            <span class=\"hljs-attr\">content<\/span>:\n                <span class=\"hljs-string\">\"React is a JavaScript library for building user interfaces.\"<\/span>,\n        },\n    ],\n    &#91;\n        <span class=\"hljs-string\">\"tab2\"<\/span>,\n        {\n            <span class=\"hljs-attr\">url<\/span>: <span class=\"hljs-string\">\"index.html#vue\"<\/span>,\n            <span class=\"hljs-attr\">content<\/span>: <span class=\"hljs-string\">\"Vue is the Progressive JavaScript Framework.\"<\/span>,\n        },\n    ],\n    &#91;\n        <span class=\"hljs-string\">\"tab3\"<\/span>,\n        {\n            <span class=\"hljs-attr\">url<\/span>: <span class=\"hljs-string\">\"index.html#angular\"<\/span>,\n            <span class=\"hljs-attr\">content<\/span>:\n                <span class=\"hljs-string\">\"Angular is a platform for building mobile and desktop web applications.\"<\/span>,\n        },\n    ],\n]);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Fourth, when each tab (or li element) is clicked, the <code>click<\/code> event occurs. To make it more efficient, we&#8217;ll use the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-event-delegation\/\">event delegation<\/a>.<\/p>\n\n\n\n<p>So instead of handling the <code>click<\/code> event on each tab, we&#8217;ll handle the <code>click<\/code> event on the parent of each tab:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">tabs.addEventListener(<span class=\"hljs-string\">\"click\"<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">event<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">if<\/span> (!event.target.id) <span class=\"hljs-keyword\">return<\/span>;\n    update(event.target.id);\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>if<\/code> statement ensures that the event handler only updates the content and url if the <code>click<\/code> event occurs on each individual tab. It&#8217;ll do nothing when you click the content area of the tab.<\/p>\n\n\n\n<p>Inside the event handler, we call the <code>update()<\/code> function and pass the tab id into it.<\/p>\n\n\n\n<p>Fifth, the following defines the <code>update()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> update = <span class=\"hljs-function\">(<span class=\"hljs-params\">tabId<\/span>) =&gt;<\/span> {\n    <span class=\"hljs-comment\">\/\/ remove the active class of the previously selected tab<\/span>\n    <span class=\"hljs-keyword\">const<\/span> currentTab = tabs.querySelector(<span class=\"hljs-string\">\".active\"<\/span>);\n\n    <span class=\"hljs-keyword\">if<\/span> (currentTab.id != tabId) {\n        currentTab.classList.remove(<span class=\"hljs-string\">\"active\"<\/span>);\n    }\n    <span class=\"hljs-comment\">\/\/ add active class to the selected tab<\/span>\n    <span class=\"hljs-keyword\">const<\/span> selectedTab = <span class=\"hljs-built_in\">document<\/span>.getElementById(tabId);\n    selectedTab.classList.add(<span class=\"hljs-string\">\"active\"<\/span>);\n\n    <span class=\"hljs-keyword\">const<\/span> entry = data.get(tabId);\n\n    <span class=\"hljs-keyword\">if<\/span> (entry) {\n        <span class=\"hljs-comment\">\/\/ update the URL<\/span>\n        history.pushState(<span class=\"hljs-literal\">null<\/span>, <span class=\"hljs-string\">\"\"<\/span>, entry.url);\n        <span class=\"hljs-comment\">\/\/ change the content<\/span>\n        content.innerHTML = entry.content;\n    }\n};<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>update()<\/code> function removes the <code>.active<\/code> class from the current tab and sets the same CSS class to the currently selected tab.<\/p>\n\n\n\n<p>It also gets the url and content from the data based on the tab id. To update the URL, it uses the <code>history.pushState()<\/code> method.<\/p>\n\n\n\n<p>The app should be working as expected with only one issue.<\/p>\n\n\n\n<p>If you copy the URL:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">https:<span class=\"hljs-comment\">\/\/www.javascripttutorial.net\/sample\/webapis\/history\/index.html#angular<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>&#8230; and paste it into the new browser window, the app will show the <code>React<\/code> tab instead of <code>Angular<\/code> tab.<\/p>\n\n\n\n<p>To fix this, we get the hash from the URL using the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-bom\/javascript-location\/\">location<\/a><\/code> object and call the <code>update()<\/code> function when the page is loaded.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n    <span class=\"hljs-comment\">\/\/ get tab id from the hash<\/span>\n    <span class=\"hljs-keyword\">const<\/span> tabId = hashes.get(<span class=\"hljs-built_in\">window<\/span>.location.hash);\n    <span class=\"hljs-comment\">\/\/ update the tab<\/span>\n    <span class=\"hljs-keyword\">if<\/span> (tabId) update(tabId);\n})();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following shows the complete <code>app.js<\/code> file:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> tabs = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">\".tabs\"<\/span>);\n<span class=\"hljs-keyword\">const<\/span> content = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">\".tabs &gt; .content\"<\/span>);\n\n<span class=\"hljs-comment\">\/\/ store the relationship between hash &amp; tab id<\/span>\n<span class=\"hljs-keyword\">const<\/span> hashes = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Map<\/span>(&#91;\n    &#91;<span class=\"hljs-string\">\"#react\"<\/span>, <span class=\"hljs-string\">\"tab1\"<\/span>],\n    &#91;<span class=\"hljs-string\">\"#vue\"<\/span>, <span class=\"hljs-string\">\"tab2\"<\/span>],\n    &#91;<span class=\"hljs-string\">\"#angular\"<\/span>, <span class=\"hljs-string\">\"tab3\"<\/span>],\n]);\n\n<span class=\"hljs-comment\">\/\/ store the relationship between tab id and contents<\/span>\n<span class=\"hljs-keyword\">const<\/span> data = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Map<\/span>(&#91;\n    &#91;\n        <span class=\"hljs-string\">\"tab1\"<\/span>,\n        {\n            <span class=\"hljs-attr\">url<\/span>: <span class=\"hljs-string\">\"index.html#react\"<\/span>,\n            <span class=\"hljs-attr\">content<\/span>:\n                <span class=\"hljs-string\">\"React is a JavaScript library for building user interfaces.\"<\/span>,\n        },\n    ],\n    &#91;\n        <span class=\"hljs-string\">\"tab2\"<\/span>,\n        {\n            <span class=\"hljs-attr\">url<\/span>: <span class=\"hljs-string\">\"index.html#vue\"<\/span>,\n            <span class=\"hljs-attr\">content<\/span>: <span class=\"hljs-string\">\"Vue is the Progressive JavaScript Framework.\"<\/span>,\n        },\n    ],\n    &#91;\n        <span class=\"hljs-string\">\"tab3\"<\/span>,\n        {\n            <span class=\"hljs-attr\">url<\/span>: <span class=\"hljs-string\">\"index.html#angular\"<\/span>,\n            <span class=\"hljs-attr\">content<\/span>:\n                <span class=\"hljs-string\">\"Angular is a platform for building mobile and desktop web applications.\"<\/span>,\n        },\n    ],\n]);\n\ntabs.addEventListener(<span class=\"hljs-string\">\"click\"<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">event<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">if<\/span> (!event.target.id) <span class=\"hljs-keyword\">return<\/span>;\n    update(event.target.id);\n});\n\n<span class=\"hljs-keyword\">const<\/span> update = <span class=\"hljs-function\">(<span class=\"hljs-params\">tabId<\/span>) =&gt;<\/span> {\n    <span class=\"hljs-comment\">\/\/ remove the active class of the previously selected tab<\/span>\n    <span class=\"hljs-keyword\">const<\/span> currentTab = tabs.querySelector(<span class=\"hljs-string\">\".active\"<\/span>);\n\n    <span class=\"hljs-keyword\">if<\/span> (currentTab.id != tabId) {\n        currentTab.classList.remove(<span class=\"hljs-string\">\"active\"<\/span>);\n    }\n    <span class=\"hljs-comment\">\/\/ add active class to the selected tab<\/span>\n    <span class=\"hljs-keyword\">const<\/span> selectedTab = <span class=\"hljs-built_in\">document<\/span>.getElementById(tabId);\n    selectedTab.classList.add(<span class=\"hljs-string\">\"active\"<\/span>);\n\n    <span class=\"hljs-keyword\">const<\/span> entry = data.get(tabId);\n\n    <span class=\"hljs-keyword\">if<\/span> (entry) {\n        <span class=\"hljs-comment\">\/\/ update the URL<\/span>\n        history.pushState(<span class=\"hljs-literal\">null<\/span>, <span class=\"hljs-string\">\"\"<\/span>, entry.url);\n        <span class=\"hljs-comment\">\/\/ change the content<\/span>\n        content.innerHTML = entry.content;\n    }\n};\n\n<span class=\"hljs-function\">(<span class=\"hljs-params\">(<\/span>) =&gt;<\/span> {\n    <span class=\"hljs-comment\">\/\/ get tab id from the hash<\/span>\n    <span class=\"hljs-keyword\">const<\/span> tabId = hashes.get(<span class=\"hljs-built_in\">window<\/span>.location.hash);\n    <span class=\"hljs-comment\">\/\/ update the tab<\/span>\n    <span class=\"hljs-keyword\">if<\/span> (tabId) update(tabId);\n})();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Use the <code>history.pushState()<\/code> method to add an entry to the web browser&#8217;s session history stack.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"88238\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/\"\n\t\t\t\tdata-post-title=\"JavaScript History pushState\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"88238\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/\"\n\t\t\t\tdata-post-title=\"JavaScript History pushState\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn how to use the JavaScript history pushState() method. Introduction to the JavaScript history pushState() method The history.pushState() method allows you to add an entry to the web browser&#8217;s session history stack. Here&#8217;s the syntax of the pushState() method: The pushState() method accepts three parameters: 1) state The state is [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":87825,"menu_order":19,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript History pushState<\/title>\n<meta name=\"description\" content=\"In this tutorial, you&#039;ll learn how to use the JavaScript history pushState() method.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript History pushState\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you&#039;ll learn how to use the JavaScript history pushState() method.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2021-01-28T03:50:41+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2021\/01\/javascript-history-pushstate.gif\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"5 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/\",\"name\":\"JavaScript History pushState\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2021-01-28T03:37:20+00:00\",\"dateModified\":\"2021-01-28T03:50:41+00:00\",\"description\":\"In this tutorial, you'll learn how to use the JavaScript history pushState() method.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Web API\",\"item\":\"https:\/\/www.javascripttutorial.net\/web-apis\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript History pushState\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript History pushState","description":"In this tutorial, you'll learn how to use the JavaScript history pushState() method.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript History pushState","og_description":"In this tutorial, you'll learn how to use the JavaScript history pushState() method.","og_url":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/","og_site_name":"PriFix Tutorial","article_modified_time":"2021-01-28T03:50:41+00:00","og_image":[{"url":"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2021\/01\/javascript-history-pushstate.gif"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"5 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/","url":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/","name":"JavaScript History pushState","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2021-01-28T03:37:20+00:00","dateModified":"2021-01-28T03:50:41+00:00","description":"In this tutorial, you'll learn how to use the JavaScript history pushState() method.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/web-apis\/javascript-history-pushstate\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"Web API","item":"https:\/\/www.javascripttutorial.net\/web-apis\/"},{"@type":"ListItem","position":3,"name":"JavaScript History pushState"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/88238"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=88238"}],"version-history":[{"count":3,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/88238\/revisions"}],"predecessor-version":[{"id":88242,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/88238\/revisions\/88242"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87825"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=88238"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
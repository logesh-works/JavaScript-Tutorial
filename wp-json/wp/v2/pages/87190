{"id":87190,"date":"2020-05-25T03:14:54","date_gmt":"2020-05-25T10:14:54","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=87190"},"modified":"2022-08-31T01:52:21","modified_gmt":"2022-08-31T08:52:21","slug":"javascript-mutationobserver","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/","title":{"rendered":"JavaScript MutationObserver"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the JavaScript <code>MutationObserver<\/code> API to watch for changes being made to the DOM tree.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the JavaScript MutationObserver API<\/h2>\n\n\n\n<p>The <code>MutationObserver<\/code> API allows you to monitor for changes being made to the DOM tree. When the DOM nodes change, you can invoke a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-callback\/\">callback function<\/a> to react to the changes.<\/p>\n\n\n\n<p>The basic steps for using the <code>MutationObserver<\/code> API are:<\/p>\n\n\n\n<p>First, define the callback function that will execute when the DOM changes:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">callback<\/span>(<span class=\"hljs-params\">mutations<\/span>) <\/span>{\n    <span class=\"hljs-comment\">\/\/ <\/span>\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, create a <code>MutationObserver<\/code> object and pass the callback into the <code>MutationObserver()<\/code> constructor:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> observer = <span class=\"hljs-keyword\">new<\/span> MutationObserver(callback);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, call the <code>observe()<\/code> method to start observing the DOM changes.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">observer.observe(targetNode, observerOptions);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>observe()<\/code> method has two parameters. The <code>target<\/code> is the root of the subtree of nodes to monitor for changes. The <code>observerOptions<\/code> parameter contains properties that specify what DOM changes should be reported to the observer&#8217;s callback.<\/p>\n\n\n\n<p>Finally, stop observing the DOM changes by calling the <code>disconnect()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">observer.disconnect();\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">The MutationObserver options<\/h2>\n\n\n\n<p>The second argument of the <code>observe()<\/code> method allows you to specify options to describe the <code>MutationObserver<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> options = {\n    <span class=\"hljs-attr\">childList<\/span>: <span class=\"hljs-literal\">true<\/span>,\n    <span class=\"hljs-attr\">attributes<\/span>: <span class=\"hljs-literal\">true<\/span>,\n    <span class=\"hljs-attr\">characterData<\/span>: <span class=\"hljs-literal\">false<\/span>,\n    <span class=\"hljs-attr\">subtree<\/span>: <span class=\"hljs-literal\">false<\/span>,\n    <span class=\"hljs-attr\">attributeFilter<\/span>: &#91;<span class=\"hljs-string\">'attr1'<\/span>, <span class=\"hljs-string\">'attr2'<\/span>],\n    <span class=\"hljs-attr\">attributeOldValue<\/span>: <span class=\"hljs-literal\">false<\/span>,\n    <span class=\"hljs-attr\">characterDataOldValue<\/span>: <span class=\"hljs-literal\">false<\/span>\n};\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>You don&#8217;t need to use all the options. However, to make the <code>MutationObserver<\/code> works, at least one of <code>childList<\/code>, <code>attributes<\/code>, or <code>characterData<\/code> needs to be set to <code>true<\/code>, otherwise the <code>observer()<\/code> method will throw an error.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Observing changes to child elements<\/h3>\n\n\n\n<p>Assuming that you have the following list:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span> <span class=\"hljs-attr\">lang<\/span>=<span class=\"hljs-string\">\"en\"<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">charset<\/span>=<span class=\"hljs-string\">\"UTF-8\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"viewport\"<\/span> <span class=\"hljs-attr\">content<\/span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>MutationObserver Demo: ChildList<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"language\"<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li<\/span>&gt;<\/span>HTML<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">li<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li<\/span>&gt;<\/span>CSS<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">li<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li<\/span>&gt;<\/span>JavaScript<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">li<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li<\/span>&gt;<\/span>TypeScript<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">li<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">ul<\/span>&gt;<\/span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"btnStart\"<\/span>&gt;<\/span>Start Observing<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">button<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"btnStop\"<\/span>&gt;<\/span>Stop Observing<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">button<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"btnAdd\"<\/span>&gt;<\/span>Add<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">button<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"btnRemove\"<\/span>&gt;<\/span>Remove the Last Child<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">button<\/span>&gt;<\/span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span> <span class=\"hljs-attr\">src<\/span>=<span class=\"hljs-string\">\"app.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example illustrates how to use the <code>childList<\/code> property of the mutation <code>options<\/code> object to monitor for the child node changes.<\/p>\n\n\n\n<p>First, select the elements like the <code>list<\/code> and <code>buttons<\/code> using the <code>querySelector()<\/code> method. By default, the <code>Stop Observing<\/code> button is <code>disabled<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/\/ selecting list<\/span>\n<span class=\"hljs-keyword\">let<\/span> list = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#language'<\/span>);\n\n<span class=\"hljs-comment\">\/\/ selecting buttons<\/span>\n<span class=\"hljs-keyword\">let<\/span> btnAdd = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#btnAdd'<\/span>);\n<span class=\"hljs-keyword\">let<\/span> btnRemove = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#btnRemove'<\/span>);\n<span class=\"hljs-keyword\">let<\/span> btnStart = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#btnStart'<\/span>);\n\n<span class=\"hljs-keyword\">let<\/span> btnStop = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#btnStop'<\/span>);\nbtnStop.disabled = <span class=\"hljs-literal\">true<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, declare a <code>log()<\/code> function that will be used as a callback for the <code>MutationObserver<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">log<\/span>(<span class=\"hljs-params\">mutations<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> mutation <span class=\"hljs-keyword\">of<\/span> mutations) {\n        <span class=\"hljs-keyword\">if<\/span> (mutation.type === <span class=\"hljs-string\">'childList'<\/span>) {\n            <span class=\"hljs-built_in\">console<\/span>.log(mutation);\n        }\n    }\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, create a new <code>MutationObserver<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> observer = <span class=\"hljs-keyword\">new<\/span> MutationObserver(log);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Fourth, start observing the DOM changes to the child nodes of the list element when the <code>Start Observing<\/code> button is clicked by calling the <code>observe()<\/code> method with the <code>childList<\/code> of the <code>options<\/code> object is set to <code>true<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">btnStart.addEventListener(<span class=\"hljs-string\">'click'<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n    observer.observe(list, {\n        <span class=\"hljs-attr\">childList<\/span>: <span class=\"hljs-literal\">true<\/span>\n    });\n    \n    btnStart.disabled = <span class=\"hljs-literal\">true<\/span>;\n    btnStop.disabled = <span class=\"hljs-literal\">false<\/span>;\n});\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Fifth, add a new list item when the <code>add<\/code> button is clicked:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> counter = <span class=\"hljs-number\">1<\/span>;\nbtnAdd.addEventListener(<span class=\"hljs-string\">'click'<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-comment\">\/\/ create a new item element<\/span>\n    <span class=\"hljs-keyword\">let<\/span> item = <span class=\"hljs-built_in\">document<\/span>.createElement(<span class=\"hljs-string\">'li'<\/span>);\n    item.textContent = <span class=\"hljs-string\">`Item <span class=\"hljs-subst\">${counter++}<\/span>`<\/span>;\n\n    <span class=\"hljs-comment\">\/\/ append it to the child nodes of list<\/span>\n    list.appendChild(item);\n});\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Sixth, remove the last child of the <code>list<\/code> when the <code>Remove<\/code> button is clicked:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">btnRemove.addEventListener(<span class=\"hljs-string\">'click'<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n    list.lastElementChild ?\n        list.removeChild(list.lastElementChild) :\n        <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'No more child node to remove'<\/span>);\n});\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Finally, stop observing DOM changes when the <code>Stop Observing<\/code> button is clicked by calling the <code>disconnect()<\/code> method of the <code>MutationObserver<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">btnStop.addEventListener(<span class=\"hljs-string\">'click'<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n    observer.disconnect();    \n    <span class=\"hljs-comment\">\/\/ set button states<\/span>\n    btnStart.disabled = <span class=\"hljs-literal\">false<\/span>;\n    btnStop.disabled = <span class=\"hljs-literal\">true<\/span>;\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Put it all together:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-comment\">\/\/ selecting the list<\/span>\n    <span class=\"hljs-keyword\">let<\/span> list = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#language'<\/span>);\n\n    <span class=\"hljs-comment\">\/\/ selecting the buttons<\/span>\n    <span class=\"hljs-keyword\">let<\/span> btnAdd = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#btnAdd'<\/span>);\n    <span class=\"hljs-keyword\">let<\/span> btnRemove = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#btnRemove'<\/span>);\n    <span class=\"hljs-keyword\">let<\/span> btnStart = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#btnStart'<\/span>);\n\n    <span class=\"hljs-comment\">\/\/ disable the stop button<\/span>\n    <span class=\"hljs-keyword\">let<\/span> btnStop = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#btnStop'<\/span>);\n    btnStop.disabled = <span class=\"hljs-literal\">true<\/span>;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">log<\/span>(<span class=\"hljs-params\">mutations<\/span>) <\/span>{\n        <span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> mutation <span class=\"hljs-keyword\">of<\/span> mutations) {\n            <span class=\"hljs-keyword\">if<\/span> (mutation.type === <span class=\"hljs-string\">'childList'<\/span>) {\n                <span class=\"hljs-built_in\">console<\/span>.log(mutation);\n            }\n        }\n    }\n\n    <span class=\"hljs-keyword\">let<\/span> observer = <span class=\"hljs-keyword\">new<\/span> MutationObserver(log);\n\n    btnStart.addEventListener(<span class=\"hljs-string\">'click'<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n        observer.observe(list, {\n            <span class=\"hljs-attr\">childList<\/span>: <span class=\"hljs-literal\">true<\/span>\n        });\n\n        btnStart.disabled = <span class=\"hljs-literal\">true<\/span>;\n        btnStop.disabled = <span class=\"hljs-literal\">false<\/span>;\n    });\n\n    btnStop.addEventListener(<span class=\"hljs-string\">'click'<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n        observer.disconnect();\n\n        <span class=\"hljs-comment\">\/\/ Set the button state<\/span>\n        btnStart.disabled = <span class=\"hljs-literal\">false<\/span>;\n        btnStop.disabled = <span class=\"hljs-literal\">true<\/span>;\n    });\n\n    <span class=\"hljs-keyword\">let<\/span> counter = <span class=\"hljs-number\">1<\/span>;\n    btnAdd.addEventListener(<span class=\"hljs-string\">'click'<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n        <span class=\"hljs-comment\">\/\/ create a new item element<\/span>\n        <span class=\"hljs-keyword\">let<\/span> item = <span class=\"hljs-built_in\">document<\/span>.createElement(<span class=\"hljs-string\">'li'<\/span>);\n        item.textContent = <span class=\"hljs-string\">`Item <span class=\"hljs-subst\">${counter++}<\/span>`<\/span>;\n\n        <span class=\"hljs-comment\">\/\/ append it to the child nodes of list<\/span>\n        list.appendChild(item);\n    });\n\n    btnRemove.addEventListener(<span class=\"hljs-string\">'click'<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n        list.lastElementChild ?\n            list.removeChild(list.lastElementChild) :\n            <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'No more child node to remove'<\/span>);\n    });\n\n})();\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<div class=\"output-cont\"><div class=\"output\">\n<iframe src=\"\/sample\/dom\/mutationobserver\/index.html\" height=\"200\"><\/iframe>\n<\/div><\/div>\n\n\n\n<p>Notice that we placed all code in an <a href=\"https:\/\/www.javascripttutorial.net\/javascript-immediately-invoked-function-expression-iife\/\">IIFE<\/a> (Immediately Invoked Function Expression).<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Observing for changes to attributes<\/h3>\n\n\n\n<p>To observe for changes to attributes, you use the following <code>attributes<\/code> property of the <code>options<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> options = {\n  <span class=\"hljs-attr\">attributes<\/span>: <span class=\"hljs-literal\">true<\/span>\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you want to observe the changes to one or more specific <code>attributes<\/code> while ignoring the others, you can use the <code>attributeFilter<\/code> property:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> options = {\n  <span class=\"hljs-attr\">attributes<\/span>: <span class=\"hljs-literal\">true<\/span>,\n  <span class=\"hljs-attr\">attributeFilter<\/span>: &#91;<span class=\"hljs-string\">'class'<\/span>, <span class=\"hljs-string\">'style'<\/span>]\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>MutationObserver<\/code> will invoke the callback each time the <code>class<\/code> or <code>style<\/code> attribute changes.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Observing for changes to a subtree<\/h3>\n\n\n\n<p>To monitor the target node and its subtree of nodes, you set the <code>subtree<\/code> property of the <code>options<\/code> object to <code>true<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> options = {\n    <span class=\"hljs-attr\">subtree<\/span>: <span class=\"hljs-literal\">true<\/span>\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Observing for changes to character data<\/h3>\n\n\n\n<p>To monitor the node for changes to its textual contents, you set the <code>characterData<\/code> property of the <code>options<\/code> object to <code>true<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-18\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> options = {\n    <span class=\"hljs-attr\">characterData<\/span>: <span class=\"hljs-literal\">true<\/span>\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-18\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Accessing old values<\/h3>\n\n\n\n<p>To access the old values of attributes, you set the <code>attributeOldValue<\/code> property of the <code>options<\/code> object to <code>true<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-19\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> options = {\n    <span class=\"hljs-attr\">attributes<\/span>: <span class=\"hljs-literal\">true<\/span>,\n    <span class=\"hljs-attr\">attributeOldValue<\/span>: <span class=\"hljs-literal\">true<\/span>\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-19\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Similarly, you can access the old value of character data by setting the <code>characterDataOldValue<\/code> property of the <code>options<\/code> object to <code>true<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-20\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> options = {\n    <span class=\"hljs-attr\">characterData<\/span>: <span class=\"hljs-literal\">true<\/span>,\n    <span class=\"hljs-attr\">subtree<\/span>: <span class=\"hljs-literal\">true<\/span>,\n    <span class=\"hljs-attr\">characterDataOldValue<\/span>: <span class=\"hljs-literal\">true<\/span>\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-20\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">A practical example of MutationObserver<\/h2>\n\n\n\n<p>In JavaScript applications, the elements on the page are typically dynamically generated. To wait for a dynamic element, you need to use <code>MutationObserver<\/code>.<\/p>\n\n\n\n<p>The following <code>waitForElement()<\/code> function waits for one or more elements specified by a selector using <code>MutationObserver<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-21\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">waitForElement<\/span>(<span class=\"hljs-params\">selector<\/span>) <\/span>{\r\n  <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve<\/span>) =&gt;<\/span> {\r\n    <span class=\"hljs-keyword\">if<\/span> (<span class=\"hljs-built_in\">document<\/span>.querySelector(selector)) {\r\n      <span class=\"hljs-keyword\">return<\/span> resolve(element);\r\n    }\r\n    <span class=\"hljs-keyword\">const<\/span> observer = <span class=\"hljs-keyword\">new<\/span> MutationObserver(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\r\n      <span class=\"hljs-keyword\">const<\/span> element = <span class=\"hljs-built_in\">document<\/span>.querySelector(selector);\r\n      <span class=\"hljs-keyword\">if<\/span> (element) {\r\n        resolve(element);\r\n        observer.disconnect();\r\n      }\r\n    });\r\n    observer.observe(<span class=\"hljs-built_in\">document<\/span>.body, {\r\n      <span class=\"hljs-attr\">childList<\/span>: <span class=\"hljs-literal\">true<\/span>,\r\n      <span class=\"hljs-attr\">subtree<\/span>: <span class=\"hljs-literal\">true<\/span>,\r\n    });\r\n  });\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-21\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<p>The <code>waitForElement()<\/code> function returns a promise. The promise will be resolved once the element is available.<\/p>\n\n\n\n<p>First, resolve the element if it is available:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-22\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">if<\/span> (<span class=\"hljs-built_in\">document<\/span>.querySelector(selector)) {\r\n    <span class=\"hljs-keyword\">return<\/span> resolve(element);\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-22\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, create a new <code>MutationObserver<\/code> object to observe the DOM tree if the element is not available:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-23\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> observer = <span class=\"hljs-keyword\">new<\/span> MutationObserver(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\r\n  <span class=\"hljs-keyword\">const<\/span> element = <span class=\"hljs-built_in\">document<\/span>.querySelector(selector);\r\n  <span class=\"hljs-keyword\">if<\/span> (element) {\r\n    resolve(element);\r\n    observer.disconnect();\r\n  }\r\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-23\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The observer object will call the resolve() function once the element is available and stop observing the DOM tree.<\/p>\n\n\n\n<p>Third, observe elements of the whole DOM tree:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-24\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">observer<\/span><span class=\"hljs-selector-class\">.observe<\/span>(<span class=\"hljs-selector-tag\">document<\/span><span class=\"hljs-selector-class\">.body<\/span>, {\r\n      <span class=\"hljs-attribute\">childList<\/span>: true,\r\n      subtree: true,\r\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-24\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Because the <code>waitForElement()<\/code> returns a <code>Promise<\/code>, you can use the <code>then()<\/code> method like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-25\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">waitForElement()(<span class=\"hljs-string\">'.a-class'<\/span>).then(<span class=\"hljs-function\">(<span class=\"hljs-params\">element<\/span>) =&gt;<\/span> {\r\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Element is ready'<\/span>);\r\n    <span class=\"hljs-built_in\">console<\/span>.log(element.textContent);\r\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-25\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Or you can use <code><a href=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-async-await\/\">await<\/a><\/code> syntax:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-26\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> element = <span class=\"hljs-keyword\">await<\/span> waitForElement()(<span class=\"hljs-string\">'.a-class'<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(element.textContent);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-26\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned about the JavaScript <code>MutationObserver<\/code> API that monitors the DOM changes and executes a callback every time the change occurs.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"87190\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/\"\n\t\t\t\tdata-post-title=\"JavaScript MutationObserver\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"87190\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/\"\n\t\t\t\tdata-post-title=\"JavaScript MutationObserver\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the JavaScript MutationObserver API to watch for changes being made to the DOM tree.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":85107,"menu_order":49,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript MutationObserver<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to use the JavaScript MutationObserver API to watch for changes being made to the DOM tree.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript MutationObserver\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn how to use the JavaScript MutationObserver API to watch for changes being made to the DOM tree.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-08-31T08:52:21+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"6 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/\",\"name\":\"JavaScript MutationObserver\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-05-25T10:14:54+00:00\",\"dateModified\":\"2022-08-31T08:52:21+00:00\",\"description\":\"In this tutorial, you will learn how to use the JavaScript MutationObserver API to watch for changes being made to the DOM tree.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript DOM\",\"item\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript MutationObserver\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript MutationObserver","description":"In this tutorial, you will learn how to use the JavaScript MutationObserver API to watch for changes being made to the DOM tree.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript MutationObserver","og_description":"In this tutorial, you will learn how to use the JavaScript MutationObserver API to watch for changes being made to the DOM tree.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-08-31T08:52:21+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"6 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/","url":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/","name":"JavaScript MutationObserver","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-05-25T10:14:54+00:00","dateModified":"2022-08-31T08:52:21+00:00","description":"In this tutorial, you will learn how to use the JavaScript MutationObserver API to watch for changes being made to the DOM tree.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mutationobserver\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"JavaScript DOM","item":"https:\/\/www.javascripttutorial.net\/javascript-dom\/"},{"@type":"ListItem","position":3,"name":"JavaScript MutationObserver"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87190"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=87190"}],"version-history":[{"count":4,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87190\/revisions"}],"predecessor-version":[{"id":90382,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87190\/revisions\/90382"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85107"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=87190"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
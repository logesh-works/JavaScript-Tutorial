{"id":84512,"date":"2019-12-03T00:38:00","date_gmt":"2019-12-03T08:38:00","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=84512"},"modified":"2020-04-29T21:51:12","modified_gmt":"2020-04-30T04:51:12","slug":"javascript-primitive-wrapper-types","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/","title":{"rendered":"JavaScript Primitive Wrapper Types"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about the primitive wrapper types including Boolean, String, and Number.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to primitive wrapper types<\/h2>\n\n\n\n<p>JavaScript provides three primitive wrapper types: <a href=\"https:\/\/www.javascripttutorial.net\/javascript-boolean\/\">Boolean<\/a>, <a href=\"https:\/\/www.javascripttutorial.net\/javascript-number\/\">Number<\/a>, and <a href=\"https:\/\/www.javascripttutorial.net\/javascript-string-type\/\">String<\/a> types. <\/p>\n\n\n\n<p>The primitive wrapper types make it easier to use primitive values including booleans, numbers, and strings.<\/p>\n\n\n\n<p>See the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> language = <span class=\"hljs-string\">'JavaScript'<\/span>;\n<span class=\"hljs-keyword\">let<\/span> s = language.substring(<span class=\"hljs-number\">4<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(s);  <span class=\"hljs-comment\">\/\/ Script<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, The variable <code>language<\/code> holds a primitive string value. It doesn&#8217;t have any method like <code>substring()<\/code>. However, the above code works perfectly.<\/p>\n\n\n\n<p>When you call a method on a variable that holds a number, a string, or a boolean, JavaScript performs the following steps behind the scenes:<\/p>\n\n\n\n<ul><li>Create an object of a corresponding type.<\/li><li>Call a specific method on the instance.<\/li><li>Delete the instance immediately.<\/li><\/ul>\n\n\n\n<p>So the following code<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> language = <span class=\"hljs-string\">'JavaScript'<\/span>;\n<span class=\"hljs-keyword\">let<\/span> str = language.substring(<span class=\"hljs-number\">4<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>is technically equivalent to the following code:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> language = <span class=\"hljs-string\">'JavaScript'<\/span>;\n<span class=\"hljs-comment\">\/\/ behind the scenes of the language.substring(4);<\/span>\n<span class=\"hljs-keyword\">let<\/span> tmp = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">String<\/span>(language);\nstr = temp.substring(<span class=\"hljs-number\">4<\/span>);\ntemp = <span class=\"hljs-literal\">null<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Primitive wrapper types vs. reference types<\/h2>\n\n\n\n<p>When you create an object of a reference type using the <code>new<\/code> operator, the object will stay in the memory until it goes out of scope.<\/p>\n\n\n\n<p>The following variable <code>s<\/code> will stay on the heap until it goes out of the scope:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> s = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">String<\/span>(<span class=\"hljs-string\">'JavaScript'<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(s);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, an automatically created primitive wrapper object exists for one line of code only. See the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> s = <span class=\"hljs-string\">'JavaScript'<\/span>;\ns.language = <span class=\"hljs-string\">'ECMAScript'<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(s.language); <span class=\"hljs-comment\">\/\/ undefined<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we attempted to access the <code>language<\/code> property of the <code>s<\/code> variable and received a value of <code>undefined<\/code> instead of <code>'ECMAScript'<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(s.language); <span class=\"hljs-comment\">\/\/ undefined<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The reason is that the following code creates a <code>String<\/code> object and assigns a value to the <code>language<\/code> property. <\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">s.language = <span class=\"hljs-string\">'ECMAScript'<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, the String object with the <code>language<\/code> property only exists during the execution of this line of code.<\/p>\n\n\n\n<p>It&#8217;s not recommended to explicitly create primitive wrapper objects like the following:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> n = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Number<\/span>(<span class=\"hljs-number\">10<\/span>);\n<span class=\"hljs-keyword\">let<\/span> s = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">String<\/span>(<span class=\"hljs-string\">'JS'<\/span>);\n<span class=\"hljs-keyword\">let<\/span> b = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Boolean<\/span>(<span class=\"hljs-literal\">false<\/span>);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, you should know which methods are available for a primitive value in order to manipulate it more effectively.<\/p>\n\n\n\n<p>In this tutorial, you have learned about the JavaScript primitive wrapper types for Booleans, numbers, and strings.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"84512\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/\"\n\t\t\t\tdata-post-title=\"JavaScript Primitive Wrapper Types\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"84512\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/\"\n\t\t\t\tdata-post-title=\"JavaScript Primitive Wrapper Types\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you will learn about the primitive wrapper types including Boolean, String, and Number. Introduction to primitive wrapper types JavaScript provides three primitive wrapper types: Boolean, Number, and String types. The primitive wrapper types make it easier to use primitive values including booleans, numbers, and strings. See the following example: In this [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":126,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Primitive Wrapper Types<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn about the primitive wrapper types including Boolean, String, and Number.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Primitive Wrapper Types\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn about the primitive wrapper types including Boolean, String, and Number.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2020-04-30T04:51:12+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/\",\"name\":\"JavaScript Primitive Wrapper Types\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2019-12-03T08:38:00+00:00\",\"dateModified\":\"2020-04-30T04:51:12+00:00\",\"description\":\"In this tutorial, you will learn about the primitive wrapper types including Boolean, String, and Number.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Primitive Wrapper Types\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Primitive Wrapper Types","description":"In this tutorial, you will learn about the primitive wrapper types including Boolean, String, and Number.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Primitive Wrapper Types","og_description":"In this tutorial, you will learn about the primitive wrapper types including Boolean, String, and Number.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/","og_site_name":"PriFix Tutorial","article_modified_time":"2020-04-30T04:51:12+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/","url":"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/","name":"JavaScript Primitive Wrapper Types","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2019-12-03T08:38:00+00:00","dateModified":"2020-04-30T04:51:12+00:00","description":"In this tutorial, you will learn about the primitive wrapper types including Boolean, String, and Number.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript Primitive Wrapper Types"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/84512"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=84512"}],"version-history":[{"count":1,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/84512\/revisions"}],"predecessor-version":[{"id":86833,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/84512\/revisions\/86833"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=84512"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
{"id":85931,"date":"2020-03-17T02:09:59","date_gmt":"2020-03-17T09:09:59","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=85931"},"modified":"2022-08-21T21:48:48","modified_gmt":"2022-08-22T04:48:48","slug":"javascript-promise-race","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/","title":{"rendered":"JavaScript Promise.race()"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the JavaScript <code>Promise.race()<\/code> static method.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"introduction-to-javascript-promise-race-static-method\">Introduction to JavaScript Promise.race() static method<\/h2>\n\n\n\n<p>The <code>Promise.race()<\/code> static method accepts a list of <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promises\/\">promises<\/a>&nbsp;as an iterable object and returns a new promise that fulfills or rejects as soon as there is one promise that fulfills or rejects, with the value or reason from that promise.<\/p>\n\n\n\n<p>Here&#8217;s the syntax of the <code>Promise.race()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">Promise<\/span>.race(iterable)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax, the <code>iterable<\/code> is an <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-iterator\/\">iterable object<\/a> that contains a list of promises.<\/p>\n\n\n\n<p>The name of <code>Promise.race()<\/code> implies that all the promises race against each other with a single winner, either resolved or rejected.<\/p>\n\n\n\n<p>See the following diagram:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/02\/JavaScript-Promise-Race-Fulfilled.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/02\/JavaScript-Promise-Race-Fulfilled.svg\" alt=\"\" class=\"wp-image-89552\"\/><\/a><\/figure>\n\n\n\n<p>In this diagram:<\/p>\n\n\n\n<ul><li>The <code>promise1<\/code> is fulfilled with the value <code>v1<\/code> at <code>t1<\/code>.<\/li><li>The <code>promise2<\/code> is rejected with the <code>error<\/code> at <code>t2<\/code>.<\/li><li>Because the <code>promise1<\/code> is resolved earlier than the <code>promise2<\/code>, the <code>promise1<\/code> wins the race. Therefore, the <code>Promise.race([promise1, promise2])<\/code> returns a new promise that is fulfilled with the value <code>v1<\/code> at <code>t1<\/code>.<\/li><\/ul>\n\n\n\n<p>See another diagram:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/02\/JavaScript-Promise-Race-Rejected.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/02\/JavaScript-Promise-Race-Rejected.svg\" alt=\"\" class=\"wp-image-89553\"\/><\/a><\/figure>\n\n\n\n<p>In this diagram:<\/p>\n\n\n\n<ul><li>The <code>promise1<\/code> is fulfilled with <code>v1<\/code> at <code>t2<\/code>.<\/li><li>The <code>promise2<\/code> is rejected with <code>error<\/code> at <code>t1<\/code>.<\/li><li>Because the <code>promise2<\/code> is resolved earlier than the <code>promise1<\/code>, the <code>promise2<\/code> wins the race. Therefore, the <code>Promise.race([promise1, promise2])<\/code> returns a new promise that is rejected with the <code>error<\/code> at <code>t1<\/code>.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"javascript-promise-race-examples\">JavaScript Promise.race() examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the <code>Promise.race()<\/code> static method.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\" id=\"1-simple-javascript-promise-race-examples\">1) Simple JavaScript Promise.race() examples<\/h3>\n\n\n\n<p>The following creates two promises: one resolves in 1 second and the other resolves in 2 seconds. Because the first promise resolves faster than the second one, the <code>Promise.race()<\/code> resolves with the value from the first promise:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> p1 = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\n    setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n        <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'The first promise has resolved'<\/span>);\n        resolve(<span class=\"hljs-number\">10<\/span>);\n    }, <span class=\"hljs-number\">1<\/span> * <span class=\"hljs-number\">1000<\/span>);\n\n});\n\n<span class=\"hljs-keyword\">const<\/span> p2 = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\n    setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n        <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'The second promise has resolved'<\/span>);\n        resolve(<span class=\"hljs-number\">20<\/span>);\n    }, <span class=\"hljs-number\">2<\/span> * <span class=\"hljs-number\">1000<\/span>);\n});\n\n\n<span class=\"hljs-built_in\">Promise<\/span>.race(&#91;p1, p2])\n    .then(<span class=\"hljs-function\"><span class=\"hljs-params\">value<\/span> =&gt;<\/span> <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">`Resolved: <span class=\"hljs-subst\">${value}<\/span>`<\/span>))\n    .catch(<span class=\"hljs-function\"><span class=\"hljs-params\">reason<\/span> =&gt;<\/span> <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">`Rejected: <span class=\"hljs-subst\">${reason}<\/span>`<\/span>));\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">The first promise has resolved\nResolved: 10\nThe second promise has resolved\n<\/code><\/span><\/pre>\n\n\n<p>The following example creates two promises. The first promise resolves in 1 second while the second one rejects in 2 seconds. Because the first promise is faster than the second one, the returned promise resolves to the value of the first promise:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> p1 = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\n    setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n        <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'The first promise has resolved'<\/span>);\n        resolve(<span class=\"hljs-number\">10<\/span>);\n    }, <span class=\"hljs-number\">1<\/span> * <span class=\"hljs-number\">1000<\/span>);\n\n});\n\n<span class=\"hljs-keyword\">const<\/span> p2 = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\n    setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n        <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'The second promise has rejected'<\/span>);\n        reject(<span class=\"hljs-number\">20<\/span>);\n    }, <span class=\"hljs-number\">2<\/span> * <span class=\"hljs-number\">1000<\/span>);\n});\n\n\n<span class=\"hljs-built_in\">Promise<\/span>.race(&#91;p1, p2])\n    .then(<span class=\"hljs-function\"><span class=\"hljs-params\">value<\/span> =&gt;<\/span> <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">`Resolved: <span class=\"hljs-subst\">${value}<\/span>`<\/span>))\n    .catch(<span class=\"hljs-function\"><span class=\"hljs-params\">reason<\/span> =&gt;<\/span> <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">`Rejected: <span class=\"hljs-subst\">${reason}<\/span>`<\/span>));\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">The first promise has resolved\nResolved: 10\nThe second promise has rejected\n<\/code><\/span><\/pre>\n\n\n<p>Note that if the second promise was faster than the first one, the return promise would reject for the reason of the second promise.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\" id=\"2-practical-javascript-promise-race-example\">2) Practical JavaScript Promise.race() example<\/h3>\n\n\n\n<p>Suppose you have to show a spinner if the data loading process from the server is taking longer than a number of seconds.<\/p>\n\n\n\n<p>To do this, you can use the <code>Promise.race()<\/code> static method. If a timeout occurs, you show the loading indicator, otherwise, you show the message.<\/p>\n\n\n\n<p>The following illustrates the HTML code:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">charset<\/span>=<span class=\"hljs-string\">\"utf-8\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>JavaScript Promise.race() Demo<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link<\/span> <span class=\"hljs-attr\">href<\/span>=<span class=\"hljs-string\">\"css\/promise-race.css\"<\/span> <span class=\"hljs-attr\">rel<\/span>=<span class=\"hljs-string\">\"stylesheet\"<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"container\"<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"btnGet\"<\/span>&gt;<\/span>Get Message<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">button<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"message\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"loader\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span> <span class=\"hljs-attr\">src<\/span>=<span class=\"hljs-string\">\"js\/promise-race.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<div class=\"output-cont\">\n<div class=\"output\">\n    <iframe src=\"\/sample\/promise\/promise-race.html\" height=\"200\"><\/iframe>\n<\/div>\n<\/div>\n\n\n\n<p>To create the loading indicator, we use the CSS animation feature. See the <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/sample\/promise\/css\/promise-race.css\">promise-race.css<\/a><\/code> for more information. Technically speaking, if an element has the <code>.loader<\/code> class, it shows the loading indicator.<\/p>\n\n\n\n<p>First, define a new function that loads data. It uses the <code>setTimeout()<\/code> to emulate an asynchronous operation:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> DATA_LOAD_TIME = <span class=\"hljs-number\">5000<\/span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">getData<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\n        setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n            <span class=\"hljs-keyword\">const<\/span> message = <span class=\"hljs-string\">'Promise.race() Demo'<\/span>;\n            resolve(message);\n        }, DATA_LOAD_TIME);\n    });\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, develop a function that shows some contents:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">showContent<\/span>(<span class=\"hljs-params\">message<\/span>) <\/span>{\n    <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#message'<\/span>).textContent = message;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This function can also be used to set the <code>message<\/code> to blank.<\/p>\n\n\n\n<p>Third, define the <code>timeout()<\/code> function that returns a promise. The promise will reject when a specified <code>TIMEOUT<\/code> is passed.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> TIMEOUT = <span class=\"hljs-number\">500<\/span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">timeout<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\n        setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> reject(), TIMEOUT);\n    });\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Fourth, develop a couple of functions that show and hide the loading indicator:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">showLoadingIndicator<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#loader'<\/span>).className = <span class=\"hljs-string\">'loader'<\/span>;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">hideLoadingIndicator<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#loader'<\/span>).className = <span class=\"hljs-string\">''<\/span>;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Fifth, attach a click event listener to the<strong> Get Message<\/strong> button. Inside the click handler, use the <code>Promise.race()<\/code> static method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/\/ handle button click event<\/span>\n<span class=\"hljs-keyword\">const<\/span> btn = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#btnGet'<\/span>);\n\nbtn.addEventListener(<span class=\"hljs-string\">'click'<\/span>, () =&gt; {\n    <span class=\"hljs-comment\">\/\/ reset UI if users click the 2nd, 3rd, ... time<\/span>\n    reset();\n    \n    <span class=\"hljs-comment\">\/\/ show content or loading indicator<\/span>\n    <span class=\"hljs-built_in\">Promise<\/span>.race(&#91;getData()\n            .then(showContent)\n            .then(hideLoadingIndicator), timeout()\n        ])\n        .catch(showLoadingIndicator);\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>We pass two promises to the <code>Promise.race()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">Promise<\/span>.race(&#91;getData()\n            .then(showContent)\n            .then(hideLoadingIndicator), timeout()\n        ])\n        .catch(showLoadingIndicator);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The first promise gets data from the server, shows the content, and hides the loading indicator. The second promise sets a timeout.<\/p>\n\n\n\n<p>If the first promise takes more than 500 ms to settle, the <code>catch()<\/code> is called to show the loading indicator. Once the first promise resolves, it hides the loading indicator.<\/p>\n\n\n\n<p>Finally, develop a <code>reset()<\/code> function that hides the message and loading indicator if the button is clicked for the second time.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/\/ reset UI<\/span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">reset<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    hideLoadingIndicator();\n    showContent(<span class=\"hljs-string\">''<\/span>);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Put it all together.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">\/\/ after 0.5 seconds, if the getData() has not resolved, then show <\/span>\n<span class=\"hljs-comment\">\/\/ the Loading indicator<\/span>\n<span class=\"hljs-keyword\">const<\/span> TIMEOUT = <span class=\"hljs-number\">500<\/span>;\n<span class=\"hljs-keyword\">const<\/span> DATA_LOAD_TIME = <span class=\"hljs-number\">5000<\/span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">getData<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\n        setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n            <span class=\"hljs-keyword\">const<\/span> message = <span class=\"hljs-string\">'Promise.race() Demo'<\/span>;\n            resolve(message);\n        }, DATA_LOAD_TIME);\n    });\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">showContent<\/span>(<span class=\"hljs-params\">message<\/span>) <\/span>{\n    <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#message'<\/span>).textContent = message;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">timeout<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\n        setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> reject(), TIMEOUT);\n    });\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">showLoadingIndicator<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#loader'<\/span>).className = <span class=\"hljs-string\">'loader'<\/span>;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">hideLoadingIndicator<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#loader'<\/span>).className = <span class=\"hljs-string\">''<\/span>;\n}\n\n\n<span class=\"hljs-comment\">\/\/ handle button click event<\/span>\n<span class=\"hljs-keyword\">const<\/span> btn = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#btnGet'<\/span>);\n\nbtn.addEventListener(<span class=\"hljs-string\">'click'<\/span>, () =&gt; {\n    <span class=\"hljs-comment\">\/\/ reset UI if users click the second time<\/span>\n    reset();\n\n    <span class=\"hljs-comment\">\/\/ show content or loading indicator<\/span>\n    <span class=\"hljs-built_in\">Promise<\/span>.race(&#91;getData()\n            .then(showContent)\n            .then(hideLoadingIndicator), timeout()\n        ])\n        .catch(showLoadingIndicator);\n});\n\n<span class=\"hljs-comment\">\/\/ reset UI<\/span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">reset<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    hideLoadingIndicator();\n    showContent(<span class=\"hljs-string\">''<\/span>);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\" id=\"summary\">Summary<\/h2>\n\n\n\n<ul><li>The <code>Promise.race(iterable)<\/code>&nbsp;method returns a new promise that fulfills or rejects as soon as one of the promises in an iterable fulfills or rejects, with the value or error from that promise.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"85931\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/\"\n\t\t\t\tdata-post-title=\"JavaScript Promise.race()\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"85931\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/\"\n\t\t\t\tdata-post-title=\"JavaScript Promise.race()\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the JavaScript Promise.race() static method.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":88,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Learn JavaScript Promise.race() By Practical Examples<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to use the JavaScript Promise.race() static method through practical examples.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Learn JavaScript Promise.race() By Practical Examples\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn how to use the JavaScript Promise.race() static method through practical examples.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-08-22T04:48:48+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/02\/JavaScript-Promise-Race-Fulfilled.svg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"5 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/\",\"name\":\"Learn JavaScript Promise.race() By Practical Examples\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2020-03-17T09:09:59+00:00\",\"dateModified\":\"2022-08-22T04:48:48+00:00\",\"description\":\"In this tutorial, you will learn how to use the JavaScript Promise.race() static method through practical examples.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Promise.race()\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Learn JavaScript Promise.race() By Practical Examples","description":"In this tutorial, you will learn how to use the JavaScript Promise.race() static method through practical examples.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/","og_locale":"en_US","og_type":"article","og_title":"Learn JavaScript Promise.race() By Practical Examples","og_description":"In this tutorial, you will learn how to use the JavaScript Promise.race() static method through practical examples.","og_url":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-08-22T04:48:48+00:00","og_image":[{"url":"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/02\/JavaScript-Promise-Race-Fulfilled.svg"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"5 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/","url":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/","name":"Learn JavaScript Promise.race() By Practical Examples","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2020-03-17T09:09:59+00:00","dateModified":"2022-08-22T04:48:48+00:00","description":"In this tutorial, you will learn how to use the JavaScript Promise.race() static method through practical examples.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promise-race\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":3,"name":"JavaScript Promise.race()"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85931"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=85931"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85931\/revisions"}],"predecessor-version":[{"id":90350,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85931\/revisions\/90350"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=85931"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
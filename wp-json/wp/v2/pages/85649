{"id":85649,"date":"2020-02-18T04:31:20","date_gmt":"2020-02-18T12:31:20","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=85649"},"modified":"2022-08-18T17:47:28","modified_gmt":"2022-08-19T00:47:28","slug":"javascript-scroll-events","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/","title":{"rendered":"JavaScript Scroll Events"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about JavaScript scroll events and how to handle scroll events properly.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the JavaScript scroll events<\/h2>\n\n\n\n<p>When you scroll a document or an element, the scroll events fire. You can trigger the scroll events in the following ways, for example:<\/p>\n\n\n\n<ul><li>Using the scrollbar manually<\/li><li>Using the mouse wheel<\/li><li>Clicking an ID link<\/li><li>Calling functions in JavaScript<\/li><\/ul>\n\n\n\n<p>To register a <code>scroll<\/code> event handler, you call the <code>addEventListener()<\/code> method on the target element, like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">targetElement.addEventListener(<span class=\"hljs-string\">'scroll'<\/span>, (event) =&gt; {\n    <span class=\"hljs-comment\">\/\/ handle the scroll event <\/span>\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>or assign an event handler to the <code>onscroll<\/code> property of the target element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">targetElement.onscroll = <span class=\"hljs-function\">(<span class=\"hljs-params\">event<\/span>) =&gt;<\/span> {\n    <span class=\"hljs-comment\">\/\/ handle the scroll event<\/span>\n};<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Scrolling the document<\/h2>\n\n\n\n<p>Typically, you handle the <code>scroll<\/code> events on the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-bom\/javascript-window\/\">window<\/a><\/code> object to handle the scroll of the whole webpage.<\/p>\n\n\n\n<p>The following shows how to attach an event handler to the <code>scroll<\/code> event of a page:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">window<\/span>.addEventListener(<span class=\"hljs-string\">'scroll'<\/span>,(event) =&gt; {\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Scrolling...'<\/span>);\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Or you can use the <code>onscroll<\/code> property on the <code>window<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">window<\/span>.onscroll = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>(<span class=\"hljs-params\">event<\/span>) <\/span>{\n    <span class=\"hljs-comment\">\/\/<\/span>\n};<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>onscroll<\/code> property of the <code>window<\/code> object is the same as <code>document.body.onscroll<\/code> and you can use them interchangeably, for example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">document<\/span>.body.onscroll = <span class=\"hljs-literal\">null<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-built_in\">window<\/span>.onscroll); <span class=\"hljs-comment\">\/\/ null<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Scroll offsets<\/h3>\n\n\n\n<p>The <code>window<\/code> object has two properties related to the scroll events: <code>scrollX<\/code> and <code>scrollY<\/code>.<\/p>\n\n\n\n<p>The <code>scrollX<\/code> and <code>scrollY<\/code> properties return the number of pixels that the document is currently scrolled horizontally and vertically. The <code>scrollX<\/code> and <code>scrollY<\/code> are double-precision floating-point values so if you need integer values, you can use the <code>Math.round()<\/code> to round them off.<\/p>\n\n\n\n<p>The <code>scrollX<\/code> and <code>scrollY<\/code> are 0 if the document hasn&#8217;t been scrolled at all.<\/p>\n\n\n\n<p>The <code>pageXOffset<\/code> and <code>pageYOffset<\/code> are aliases of the <code>scrollX<\/code> and <code>scrollY<\/code> properties.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Scrolling an element<\/h2>\n\n\n\n<p>Like the <code>window<\/code> object, you can attach a <code>scroll<\/code> event handler to any HTML element. However, to track the scroll offset, you use the <code>scrollTop<\/code> and <code>scrollLeft<\/code> instead of the <code>scrollX<\/code> and <code>scrollY<\/code>.<\/p>\n\n\n\n<p>The <code>scrollTop<\/code> property sets or gets the number of pixels that the element&#8217;s content is vertically scrolled. The <code>scrollLeft<\/code> property gets and sets the number of pixels that an element&#8217;s content is scrolled from its left edge.<\/p>\n\n\n\n<p>The following example shows how to handle the <code>scroll<\/code> event of the <code>div<\/code> element with the id <code>scrollDemo<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>JS Scroll Events<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style<\/span>&gt;<\/span><span class=\"css\">\n        <span class=\"hljs-selector-id\">#scrollDemo<\/span> {\n            <span class=\"hljs-attribute\">height<\/span>: <span class=\"hljs-number\">200px<\/span>;\n            <span class=\"hljs-attribute\">width<\/span>: <span class=\"hljs-number\">200px<\/span>;\n            <span class=\"hljs-attribute\">overflow<\/span>: auto;\n            <span class=\"hljs-attribute\">background-color<\/span>: <span class=\"hljs-number\">#f0db4f<\/span>\n        }\n\n        <span class=\"hljs-selector-id\">#scrollDemo<\/span> <span class=\"hljs-selector-tag\">p<\/span> {\n            <span class=\"hljs-comment\">\/* show the scrollbar *\/<\/span>\n            <span class=\"hljs-attribute\">height<\/span>: <span class=\"hljs-number\">300px<\/span>;\n            <span class=\"hljs-attribute\">width<\/span>: <span class=\"hljs-number\">300px<\/span>;\n        }\n    <\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">style<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"scrollDemo\"<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p<\/span>&gt;<\/span>JS Scroll Event Demo<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">p<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"control\"<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"btnScrollLeft\"<\/span>&gt;<\/span>Scroll Left<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">button<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"btnScrollTop\"<\/span>&gt;<\/span>Scroll Top<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">button<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span>&gt;<\/span><span class=\"javascript\">\n        <span class=\"hljs-keyword\">let<\/span> control = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#control'<\/span>);\n\n        control.addEventListener(<span class=\"hljs-string\">'click'<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">e<\/span>) <\/span>{\n            <span class=\"hljs-comment\">\/\/ get the scrollDemo<\/span>\n            <span class=\"hljs-keyword\">let<\/span> div = <span class=\"hljs-built_in\">document<\/span>.getElementById(<span class=\"hljs-string\">'scrollDemo'<\/span>);\n            <span class=\"hljs-comment\">\/\/ get the target<\/span>\n            <span class=\"hljs-keyword\">let<\/span> target = e.target;\n            <span class=\"hljs-comment\">\/\/ handle each button's click<\/span>\n            <span class=\"hljs-keyword\">switch<\/span> (target.id) {\n                <span class=\"hljs-keyword\">case<\/span> <span class=\"hljs-string\">'btnScrollLeft'<\/span>:\n                    div.scrollLeft += <span class=\"hljs-number\">20<\/span>;\n                    <span class=\"hljs-keyword\">break<\/span>;\n\n                <span class=\"hljs-keyword\">case<\/span> <span class=\"hljs-string\">'btnScrollTop'<\/span>:\n                    div.scrollTop += <span class=\"hljs-number\">20<\/span>;\n                    <span class=\"hljs-keyword\">break<\/span>;\n            }\n        });\n    <\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<div class=\"output-cont\"><div class=\"output\">\n<iframe src=\"\/sample\/dom\/scroll\/\" height=\"300\"><\/iframe>\n<\/div><\/div>\n\n\n\n<h2 class=\"wp-block-heading\">The better ways to handle the scroll&nbsp;events<\/h2>\n\n\n\n<p>Many <code>scroll<\/code> events fire while you are scrolling a page or an element. If you attach an event listener to the <code>scroll<\/code> event, the code in the event handler needs time to execute.<\/p>\n\n\n\n<p>This will cause an issue which is known as the scroll jank. The scroll jank effect causes a delay so that the page doesn&#8217;t feel anchored to your finger.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Event throttling<\/h3>\n\n\n\n<p>It is much better to keep the <code>scroll<\/code> event handler lightweight and execute it every N milliseconds by using a timer. So instead of using the following code (and you should never use it):<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">window<\/span>.scroll = <span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n    <span class=\"hljs-comment\">\/\/ place the scroll handling logic here<\/span>\n};\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>You should use the following code:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> scrolling = <span class=\"hljs-literal\">false<\/span>;\n\n<span class=\"hljs-built_in\">window<\/span>.scroll = <span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n    scrolling = <span class=\"hljs-literal\">true<\/span>;\n};\n\nsetInterval(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n    <span class=\"hljs-keyword\">if<\/span> (scrolling) {\n        scrolling = <span class=\"hljs-literal\">false<\/span>;\n        <span class=\"hljs-comment\">\/\/ place the scroll handling logic here<\/span>\n    }\n},<span class=\"hljs-number\">300<\/span>);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works:<\/p>\n\n\n\n<ul><li>First, set the <code>scrolling<\/code> flag to <code>false<\/code>. If the <code>scroll<\/code> event fires set the <code>scrolling<\/code> flag to <code>true<\/code> inside the <code>scroll<\/code> event handler.<\/li><li>Then, execute the <code>scroll<\/code> event handler using the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-bom\/javascript-setinterval\/\">setInterval()<\/a><\/code> every 300 milliseconds if the <code>scroll<\/code> events have been fired.<\/li><\/ul>\n\n\n\n<p>This way of handling the <code>scroll<\/code> event is called the <strong>event throttling<\/strong> that throttles an <code>onscroll<\/code>&#8216;s underlying operation every 300 milliseconds. The throttling slows down the rate of execution of the scroll event handler.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Passive events<\/h3>\n\n\n\n<p>Recently, modern web browsers support passive events for the input events like <code>scroll<\/code>, <code>touchstart<\/code>, <code>wheel<\/code>, etc. It allows the UI thread to handle the event immediately before passing over control to your custom event handler.<\/p>\n\n\n\n<p>In the web browsers which support the passive events, you need to add the <code>passive<\/code> flag to any event listener that does not call <code>preventDefault()<\/code>, like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">document<\/span>.addEventListener(\n    <span class=\"hljs-string\">'scroll'<\/span>,\n    (event) =&gt; {\n        <span class=\"hljs-comment\">\/\/ handle scroll event<\/span>\n    }, \n    { <span class=\"hljs-attr\">passive<\/span>: <span class=\"hljs-literal\">true<\/span> }\n);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Without the <code>passive<\/code> option, the code in the event handler will always be invoked before the UI thread carries out the scrolling.<\/p>\n\n\n\n<p>Check out which browsers are supporting passive events <a href=\"https:\/\/caniuse.com\/#feat=passive-event-listener\" target=\"_blank\" rel=\"noopener noreferrer\">here<\/a>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>The <code>scroll<\/code> event fires when you scroll a webpage or an element.<\/li><li>For a page, the <code>scrollX<\/code> and <code>scrollY<\/code> properties return the number of pixels that the document is currently scrolled horizontally and vertically.<\/li><li>For an element, the <code>scrollTop<\/code> and <code>scrollLeft<\/code> properties set or get the number of pixels that the element&#8217;s content is vertically scrolled and scrolled from its left edge.<\/li><li>Use the event throttling technique to better handle the scroll events. In modern web browsers, you can use passive event listeners.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"85649\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/\"\n\t\t\t\tdata-post-title=\"JavaScript Scroll Events\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"85649\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/\"\n\t\t\t\tdata-post-title=\"JavaScript Scroll Events\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn about the JavaScript scroll events and how to handle the scroll event properly.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":85107,"menu_order":42,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Scroll Events, Event Throttling &amp; Passive Events<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn about the JavaScript scroll events and how to handle scroll event properly.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Scroll Events, Event Throttling &amp; Passive Events\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn about the JavaScript scroll events and how to handle scroll event properly.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-08-19T00:47:28+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/\",\"name\":\"JavaScript Scroll Events, Event Throttling & Passive Events\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-02-18T12:31:20+00:00\",\"dateModified\":\"2022-08-19T00:47:28+00:00\",\"description\":\"In this tutorial, you will learn about the JavaScript scroll events and how to handle scroll event properly.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript DOM\",\"item\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Scroll Events\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Scroll Events, Event Throttling & Passive Events","description":"In this tutorial, you will learn about the JavaScript scroll events and how to handle scroll event properly.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Scroll Events, Event Throttling & Passive Events","og_description":"In this tutorial, you will learn about the JavaScript scroll events and how to handle scroll event properly.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-08-19T00:47:28+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/","url":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/","name":"JavaScript Scroll Events, Event Throttling & Passive Events","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-02-18T12:31:20+00:00","dateModified":"2022-08-19T00:47:28+00:00","description":"In this tutorial, you will learn about the JavaScript scroll events and how to handle scroll event properly.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-scroll-events\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"JavaScript DOM","item":"https:\/\/www.javascripttutorial.net\/javascript-dom\/"},{"@type":"ListItem","position":3,"name":"JavaScript Scroll Events"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85649"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=85649"}],"version-history":[{"count":5,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85649\/revisions"}],"predecessor-version":[{"id":90337,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85649\/revisions\/90337"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85107"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=85649"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
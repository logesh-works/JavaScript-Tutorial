{"id":85187,"date":"2020-01-18T05:33:58","date_gmt":"2020-01-18T13:33:58","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=85187"},"modified":"2020-08-26T18:47:11","modified_gmt":"2020-08-27T01:47:11","slug":"javascript-textcontent","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/","title":{"rendered":"JavaScript textContent"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the JavaScript <code>textContent<\/code> property to get the text content of a node and its descendants.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Reading <code>textContent<\/code> from a node<\/h2>\n\n\n\n<p>To get the text content of a node and its descendants, you use the <code>textContent<\/code> property:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> text = node.textContent;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Suppose that you have the following HTML snippet:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"note\"<\/span>&gt;<\/span>\n    JavaScript textContent Demo!\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span<\/span> <span class=\"hljs-attr\">style<\/span>=<span class=\"hljs-string\">\"display:none\"<\/span>&gt;<\/span>Hidden Text!<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">span<\/span>&gt;<\/span>\n    <span class=\"hljs-comment\">&lt;!-- my comment --&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>    \n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example uses the <code>textContent<\/code> property to get the text of the <code>&lt;div&gt;<\/code> element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> note = <span class=\"hljs-built_in\">document<\/span>.getElementById(<span class=\"hljs-string\">'note'<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(note.textContent);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>First, select the <code>div<\/code> element with the id note by using the <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-getelementbyid\/\">getElementById()<\/a><\/code> method.<\/li><li>Then, display the text of the node by accessing the <code>textContent<\/code> property.<\/li><\/ul>\n\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">JavaScript textContent Demo!\nHidden Text!<\/code><\/span><\/pre>\n\n\n<p>As you can see clearly from the output, the <code>textContent<\/code> property returns the concatenation of the <code>textContent<\/code> of every <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-get-child-element\/\">child node<\/a>, excluding comments (and also processing instructions).<\/p>\n\n\n\n<h3 class=\"wp-block-heading\"><code>textContent<\/code> vs. <code>innerText<\/code><\/h3>\n\n\n\n<p>On the other hand, the <code>innerText<\/code> takes the CSS style into account and returns only human-readable text. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> note = <span class=\"hljs-built_in\">document<\/span>.getElementById(<span class=\"hljs-string\">'note'<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(note.innerText);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">JavaScript textContent Demo!<\/code><\/span><\/pre>\n\n\n<p>As you can see, the hidden text and comments are not returned.<\/p>\n\n\n\n<p>Since the <code>innerText<\/code> property uses the up-to-date CSS to compute the text, accessing it will trigger a reflow, which is computationally expensive.<\/p>\n\n\n\n<p class=\"note\">A <strong>reflow<\/strong>\u00a0occurs when a web brower needs to process and draw parts or all of a webpage again.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Setting <code>textContent<\/code> for a node<\/h2>\n\n\n\n<p>Besides reading <code>textContent<\/code>, you can also use the <code>textContent<\/code> property to set the text for a node:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">node.textContent = newText;<\/code><\/span><\/pre>\n\n\n<p>When you set <code>textContent<\/code> on a node, all the node&#8217;s children will be removed and replaced by a single text node with the <code>newText<\/code> value. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> note = <span class=\"hljs-built_in\">document<\/span>.getElementById(<span class=\"hljs-string\">'note'<\/span>);\nnote.textContent = <span class=\"hljs-string\">'This is a note'<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Use the <code>textContent<\/code> property to return the concatenation of the <code>textContent<\/code> of every child node. You can use it to set a text for a node.<\/li><li>The <code>innerText<\/code> returns the human-readable text that takes CSS into account.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"85187\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/\"\n\t\t\t\tdata-post-title=\"JavaScript textContent\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"85187\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/\"\n\t\t\t\tdata-post-title=\"JavaScript textContent\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the JavaScript textContent property to get the text content of a node and its descendants.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":85107,"menu_order":11,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript textContent: Getting or Setting Text for a Node<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to use the JavaScript textContent property to get the text content of a node and its descendants.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript textContent: Getting or Setting Text for a Node\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn how to use the JavaScript textContent property to get the text content of a node and its descendants.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2020-08-27T01:47:11+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/\",\"name\":\"JavaScript textContent: Getting or Setting Text for a Node\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2020-01-18T13:33:58+00:00\",\"dateModified\":\"2020-08-27T01:47:11+00:00\",\"description\":\"In this tutorial, you will learn how to use the JavaScript textContent property to get the text content of a node and its descendants.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript DOM\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript textContent\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript textContent: Getting or Setting Text for a Node","description":"In this tutorial, you will learn how to use the JavaScript textContent property to get the text content of a node and its descendants.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript textContent: Getting or Setting Text for a Node","og_description":"In this tutorial, you will learn how to use the JavaScript textContent property to get the text content of a node and its descendants.","og_url":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/","og_site_name":"PriFix Tutorial","article_modified_time":"2020-08-27T01:47:11+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/","url":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/","name":"JavaScript textContent: Getting or Setting Text for a Node","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2020-01-18T13:33:58+00:00","dateModified":"2020-08-27T01:47:11+00:00","description":"In this tutorial, you will learn how to use the JavaScript textContent property to get the text content of a node and its descendants.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/javascript-textcontent\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"JavaScript DOM","item":"https:\/\/https://jsprifix.netlify.app/\/javascript-dom\/"},{"@type":"ListItem","position":3,"name":"JavaScript textContent"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85187"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=85187"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85187\/revisions"}],"predecessor-version":[{"id":87429,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85187\/revisions\/87429"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/85107"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=85187"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
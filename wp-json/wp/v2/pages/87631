{"id":87631,"date":"2020-09-13T02:49:54","date_gmt":"2020-09-13T09:49:54","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=87631"},"modified":"2020-09-23T00:41:02","modified_gmt":"2020-09-23T07:41:02","slug":"javascript-word-counter","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/","title":{"rendered":"JavaScript Word Counter"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to build a Word Counter application using vanilla JavaScript.<\/p>\n\n\n\n<p>Here is the <a href=\"https:\/\/javascripttutorial.net\/sample\/dom\/word-counter\/index.html\" target=\"_blank\" rel=\"noreferrer noopener\">Word Counter App<\/a> that you&#8217;re going to build.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Create the project structure<\/h2>\n\n\n\n<p>First, create the project folder called <code>word-counter<\/code>. <\/p>\n\n\n\n<p>Second, under the <code>word-counter<\/code> project, create the <code>css<\/code> and <code>js<\/code> folders, which will store CSS and JavaScript files accordingly.<\/p>\n\n\n\n<p>Third, create a <code>style.css<\/code> file inside the <code>css<\/code> folder, and two JavaScript files called <code>word-counter.js<\/code> and <code>app.js<\/code> inside the <code>js<\/code> folder.<\/p>\n\n\n\n<p>Finally, create the <code>index.html<\/code> file in the project root folder.<\/p>\n\n\n\n<p>The final project folder structure will look like this:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"242\" height=\"129\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Word-Counter-Project-Structure.png\" alt=\"\" class=\"wp-image-87633\"\/><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">Create the HTML file<\/h2>\n\n\n\n<p>First, edit the <code>index.html<\/code> file and place the CSS and JavaScript files in the <code>index.html<\/code> file:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span> <span class=\"hljs-attr\">lang<\/span>=<span class=\"hljs-string\">\"en\"<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">charset<\/span>=<span class=\"hljs-string\">\"UTF-8\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"viewport\"<\/span> <span class=\"hljs-attr\">content<\/span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>JavaScript Word Counter<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link<\/span> <span class=\"hljs-attr\">rel<\/span>=<span class=\"hljs-string\">\"stylesheet\"<\/span> <span class=\"hljs-attr\">href<\/span>=<span class=\"hljs-string\">\"css\/style.css\"<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n   \n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span> <span class=\"hljs-attr\">src<\/span>=<span class=\"hljs-string\">\"js\/word-counter.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span> <span class=\"hljs-attr\">src<\/span>=<span class=\"hljs-string\">\"js\/app.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The WordCounter app will have a simple <code>&lt;textarea&gt;<\/code> element. When you enter some text, it&#8217;ll show the number of characters and words that you&#8217;ve entered.<\/p>\n\n\n\n<p>To do so, you&#8217;ll need to have  <code>&lt;textarea&gt;<\/code> and <code>&lt;div&gt;<\/code> elements :<\/p>\n\n\n\n<ul><li>The <code>&lt;textarea&gt;<\/code> element will allow you to enter text. <\/li><li>And the <code>&lt;div&gt;<\/code> element will show the number of characters and words entered into the <code>&lt;textarea&gt;<\/code> element. <\/li><\/ul>\n\n\n\n<p>By default the <code>&lt;div&gt;<\/code> element should show 0 characters and 0 words.<\/p>\n\n\n\n<p>Second, add the <code>&lt;textarea&gt;<\/code> and <code>&lt;div&gt;<\/code> elements to the <code>index.html<\/code> file after the opening <code>&lt;body&gt;<\/code> tag and before the first <code>&lt;script&gt;<\/code> tag:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span> <span class=\"hljs-attr\">lang<\/span>=<span class=\"hljs-string\">\"en\"<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">charset<\/span>=<span class=\"hljs-string\">\"UTF-8\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"viewport\"<\/span> <span class=\"hljs-attr\">content<\/span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>JavaScript Word Counter<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link<\/span> <span class=\"hljs-attr\">rel<\/span>=<span class=\"hljs-string\">\"stylesheet\"<\/span> <span class=\"hljs-attr\">href<\/span>=<span class=\"hljs-string\">\"css\/style.css\"<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n   \n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1<\/span>&gt;<\/span>Word Counter<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">h1<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label<\/span> <span class=\"hljs-attr\">for<\/span>=<span class=\"hljs-string\">\"text\"<\/span>&gt;<\/span>Enter some text below:<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">label<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">textarea<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"text\"<\/span> <span class=\"hljs-attr\">rows<\/span>=<span class=\"hljs-string\">\"10\"<\/span> <span class=\"hljs-attr\">cols<\/span>=<span class=\"hljs-string\">\"60\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">textarea<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"stat\"<\/span>&gt;<\/span>You've written 0 words and 0 characters.<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span> <span class=\"hljs-attr\">src<\/span>=<span class=\"hljs-string\">\"js\/word-counter.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span> <span class=\"hljs-attr\">src<\/span>=<span class=\"hljs-string\">\"js\/app.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Create the WordCounter class<\/h2>\n\n\n\n<p>First, you&#8217;ll create the <code>WordCounter<\/code> class in the <code>word-counter.js<\/code> file:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">WordCounter<\/span> <\/span>{\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>WordCounter<\/code> class will accept a <code>&lt;textarea&gt;<\/code> element. It&#8217;ll listen to the <code>input<\/code> event of the <code>&lt;textarea&gt;<\/code> element and calculate the number of characters and words that the <code>&lt;textarea&gt;<\/code> element has. <\/p>\n\n\n\n<p>Second, add the <code>constructor<\/code> to the <code>WordCounter<\/code> class. The <code>constructor<\/code> will accept a <code>&lt;textarea&gt;<\/code> element. <\/p>\n\n\n\n<p>Inside the <code>constructor<\/code>, you&#8217;ll initialize the <code>inputText<\/code> property of the class to the <code>inputText<\/code> argument and attach the <code>input<\/code> event listener to the <code>inputText<\/code> element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">WordCounter<\/span> <\/span>{\n    <span class=\"hljs-keyword\">constructor<\/span>(inputText) {\n        <span class=\"hljs-keyword\">this<\/span>.inputText = inputText;\n        <span class=\"hljs-keyword\">this<\/span>.inputText.addEventListener(<span class=\"hljs-string\">'input'<\/span>, <span class=\"hljs-keyword\">this<\/span>.count);\n    }\n    count(){\n    }\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>this.count()<\/code> method will execute every time the <code>input<\/code> event occurs. We&#8217;ll go back to implement the logic for the <code>count()<\/code> method later.<\/p>\n\n\n\n<p>Third, add a new method to the <code>WordCounter<\/code> class, which calculates the number of characters and words:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">WordCounter<\/span> <\/span>{\n    <span class=\"hljs-keyword\">constructor<\/span>(inputText) {\n        <span class=\"hljs-keyword\">this<\/span>.inputText = inputText;\n        <span class=\"hljs-keyword\">this<\/span>.inputText.addEventListener(<span class=\"hljs-string\">'input'<\/span>, <span class=\"hljs-keyword\">this<\/span>.count);\n    }\n    count(){\n    }\n    getWordStat(str) {\n        <span class=\"hljs-keyword\">let<\/span> matches = str.match(<span class=\"hljs-regexp\">\/\\S+\/g<\/span>);\n        <span class=\"hljs-keyword\">return<\/span> {\n            <span class=\"hljs-attr\">characters<\/span>: str.length,\n            <span class=\"hljs-attr\">words<\/span>: matches ? matches.length : <span class=\"hljs-number\">0<\/span>,\n        };\n    }\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>getWordStat()<\/code> method uses a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-regular-expression\/\">regular expression<\/a> <code>\/\\S\/g<\/code> to return the number words of a string. It also uses the string <code>length<\/code> property of the input string <code>str<\/code> to get the number of characters.<\/p>\n\n\n\n<p>Third, the <code>count()<\/code> method will need to call the <code>getWordStat()<\/code> to calculate the number of words and characters of the <code>inputText<\/code> element. <\/p>\n\n\n\n<p>To get the text of the <code>&lt;textarea&gt;<\/code> element, you use its <code>value<\/code> property:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">...\ncount() {\n   <span class=\"hljs-keyword\">let<\/span> wordStat = <span class=\"hljs-keyword\">this<\/span>.getWordStat(<span class=\"hljs-keyword\">this<\/span>.inputText.value.trim());\n   <span class=\"hljs-comment\">\/\/ how to expose the wordStat to the outside<\/span>\n   <span class=\"hljs-comment\">\/\/ ..<\/span>\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>And the <code>count()<\/code> method also needs to communicate with the outside the number of words and characters.<\/p>\n\n\n\n<p>To do this, you have two options: using a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-callback\/\">callback<\/a> and a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-custom-events\/\">custom event<\/a>. We&#8217;ll use a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-custom-events\/\">custom event<\/a> in this tutorial.<\/p>\n\n\n\n<p>If you want to know how to use a callback, check it out the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-countdown-timer\/\">countdown timer tutorial<\/a>.<\/p>\n\n\n\n<p>Fourth, add a new method called <code>emitEvent<\/code> to the <code>WordCounter<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">emitEvent(wordStat) {\n        <span class=\"hljs-comment\">\/\/ Create count event<\/span>\n        <span class=\"hljs-keyword\">let<\/span> countEvent = <span class=\"hljs-keyword\">new<\/span> CustomEvent(<span class=\"hljs-string\">'count'<\/span>, {\n            <span class=\"hljs-attr\">bubbles<\/span>: <span class=\"hljs-literal\">true<\/span>,\n            <span class=\"hljs-attr\">cancelable<\/span>: <span class=\"hljs-literal\">true<\/span>,\n            <span class=\"hljs-attr\">detail<\/span>: {\n                wordStat\n            }\n        });\n        <span class=\"hljs-comment\">\/\/ dispatch the count event<\/span>\n        <span class=\"hljs-keyword\">this<\/span>.inputText.dispatchEvent(countEvent);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>emitEvent()<\/code> method accepts a <code>wordStat<\/code> object. Inside the method, we create a custom event for the <code>inputText<\/code> element called <code>count<\/code> using the <code>CustomEvent<\/code> constructor and dispatch the <code>count<\/code> event using the <code>dispatchEvent<\/code> method.<\/p>\n\n\n\n<p>Later, you&#8217;ll attach an event listener to the <code>count<\/code> event and access the <code>wordStat<\/code> object using the <code>event.detail.wordStat<\/code> syntax.<\/p>\n\n\n\n<p>The <code>emitEvent()<\/code> should be called every time the <code>input<\/code> event occurs. Therefore, we invoke the <code>emitEvent()<\/code> inside the <code>count()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">count(){\n   <span class=\"hljs-keyword\">let<\/span> wordStat = <span class=\"hljs-keyword\">this<\/span>.getWordStat(<span class=\"hljs-keyword\">this<\/span>.inputText.value.trim());\n   <span class=\"hljs-keyword\">this<\/span>.emitEvent(wordStat);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>WordCounter<\/code> class will look like the following:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">WordCounter<\/span> <\/span>{\n    <span class=\"hljs-keyword\">constructor<\/span>(inputText) {\n        <span class=\"hljs-keyword\">this<\/span>.inputText = inputText;\n        <span class=\"hljs-keyword\">this<\/span>.inputText.addEventListener(<span class=\"hljs-string\">'input'<\/span>, <span class=\"hljs-keyword\">this<\/span>.count);\n    }\n    count(){\n        <span class=\"hljs-keyword\">let<\/span> wordStat = <span class=\"hljs-keyword\">this<\/span>.getWordStat(<span class=\"hljs-keyword\">this<\/span>.inputText.value.trim());\n        <span class=\"hljs-keyword\">this<\/span>.emitEvent(wordStat);\n    }\n\n    emitEvent(wordStat) {\n        <span class=\"hljs-comment\">\/\/ Create count event<\/span>\n        <span class=\"hljs-keyword\">let<\/span> countEvent = <span class=\"hljs-keyword\">new<\/span> CustomEvent(<span class=\"hljs-string\">'count'<\/span>, {\n            <span class=\"hljs-attr\">bubbles<\/span>: <span class=\"hljs-literal\">true<\/span>,\n            <span class=\"hljs-attr\">cancelable<\/span>: <span class=\"hljs-literal\">true<\/span>,\n            <span class=\"hljs-attr\">detail<\/span>: {\n                wordStat\n            }\n        });\n        <span class=\"hljs-comment\">\/\/ dispatch the count event<\/span>\n        <span class=\"hljs-keyword\">this<\/span>.inputText.dispatchEvent(countEvent);\n\n    }\n    getWordStat(str) {\n        <span class=\"hljs-keyword\">let<\/span> matches = str.match(<span class=\"hljs-regexp\">\/\\S+\/g<\/span>);\n        <span class=\"hljs-keyword\">return<\/span> {\n            <span class=\"hljs-attr\">characters<\/span>: str.length,\n            <span class=\"hljs-attr\">words<\/span>: matches ? matches.length : <span class=\"hljs-number\">0<\/span>,\n        };\n    }\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Add logic to app.js file<\/h2>\n\n\n\n<p>First, select the <code>&lt;textarea&gt;<\/code> and <code>&lt;div&gt;<\/code> element using the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-queryselector\/\"><code>querySelector()<\/code> <\/a>method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> inputText = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#text'<\/span>);\n<span class=\"hljs-keyword\">const<\/span> statElem = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#stat'<\/span>);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, create a new instance of the <code>WordCounter<\/code> class and pass the <code>inputText<\/code> element into its constructor:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">new<\/span> WordCounter(inputText);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, define a new function called <code>render()<\/code> that updates the word and character counts to the <code>statElem<\/code> element. <\/p>\n\n\n\n<p>The <code>render()<\/code> function accepts a custom event object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\">const render = (event) =&gt; {\n    statElem.innerHTML = `<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p<\/span>&gt;<\/span>You've written <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"highlight\"<\/span>&gt;<\/span>${event.detail.wordStat.words} words<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">span<\/span>&gt;<\/span> \n        and <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"highlight\"<\/span>&gt;<\/span>${event.detail.wordStat.characters} characters<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">span<\/span>&gt;<\/span>.<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">p<\/span>&gt;<\/span>`;\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Fourth, add an event listener to <code>count<\/code> even and execute the <code>render()<\/code> method each time the <code>count<\/code> event occurs:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">inputText.addEventListener(<span class=\"hljs-string\">'count'<\/span>, render);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>app.js<\/code> will look like the following:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> inputText = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#text'<\/span>);\n<span class=\"hljs-keyword\">const<\/span> statElem = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#stat'<\/span>);\n\n<span class=\"hljs-comment\">\/\/ create a new instance of WordCounter<\/span>\n<span class=\"hljs-keyword\">new<\/span> WordCounter(inputText);\n\n\n<span class=\"hljs-keyword\">const<\/span> render = <span class=\"hljs-function\">(<span class=\"hljs-params\">event<\/span>) =&gt;<\/span> {\n    statElem.innerHTML = <span class=\"hljs-string\">`&lt;p&gt;You've written &lt;span class=\"highlight\"&gt;<span class=\"hljs-subst\">${event.detail.wordStat.words}<\/span> words&lt;\/span&gt; \n        and &lt;span class=\"highlight\"&gt;<span class=\"hljs-subst\">${event.detail.wordStat.characters}<\/span> characters&lt;\/span&gt;.&lt;\/p&gt;`<\/span>;\n}\n\ninputText.addEventListener(<span class=\"hljs-string\">'count'<\/span>, render);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Now, if you open the <code>index.html<\/code> file in the web browser, you&#8217;ll see the following error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\">Uncaught TypeError: Cannot read property 'value' of undefined at HTMLTextAreaElement.count<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>And the problem occurred in the <code>count()<\/code> method of the <code>WordCounter<\/code> class:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"801\" height=\"143\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Word-Counter-Error.png\" alt=\"\" class=\"wp-image-87636\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Word-Counter-Error.png 801w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Word-Counter-Error-300x54.png 300w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Word-Counter-Error-768x137.png 768w\" sizes=\"(max-width: 801px) 100vw, 801px\" \/><\/figure>\n\n\n\n<p>It&#8217;s showing that the <code>this.inputText<\/code> is <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-undefined\/\">undefined<\/a><\/code>. Therefore, accessing the <code>value<\/code> property of the <code>this.inputText<\/code> causes an error.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Solve this issue<\/h2>\n\n\n\n<p>When an <code>input<\/code> event occurs on the <code>inputText<\/code> element, the <code>count()<\/code> method executes.<\/p>\n\n\n\n<p>And the object that executes the <code>count()<\/code> method is the <code>inputText<\/code> object, not the instance of the <code>WordCounter<\/code> class.<\/p>\n\n\n\n<p>It means that inside the <code>count()<\/code> method, the <code>this<\/code> value references the <code>inputText<\/code> element, not the <code>WordCounter<\/code> object.<\/p>\n\n\n\n<p>To prove this, you can log the <code>this<\/code> value inside the <code>count()<\/code> method as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">count() {\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-keyword\">this<\/span>); \n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>&#8230; and refresh the <code>index.html<\/code> again, you&#8217;ll see the <code>&lt;textarea&gt;<\/code> element in the console every time you type some text in the <code>&lt;textarea&gt;<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">textarea<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"text\"<\/span> <span class=\"hljs-attr\">rows<\/span>=<span class=\"hljs-string\">\"10\"<\/span> <span class=\"hljs-attr\">cols<\/span>=<span class=\"hljs-string\">\"60\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">textarea<\/span>&gt;<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Since the <code>this<\/code> value inside the <code>count()<\/code> method references the <code>&lt;textarea&gt;<\/code> element, it doesn&#8217;t have the <code>inputText<\/code> property. And it also doesn&#8217;t have the <code>emitEvent()<\/code> method.<\/p>\n\n\n\n<p>To fix the issue, you need to change the event listener to an <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-arrow-function\/\">arrow function<\/a> like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-18\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">constructor<\/span>(inputText) {\n   <span class=\"hljs-keyword\">this<\/span>.inputText = inputText;\n    <span class=\"hljs-keyword\">this<\/span>.inputText.addEventListener(<span class=\"hljs-string\">'input'<\/span>, () =&gt; {\n        <span class=\"hljs-keyword\">this<\/span>.count();\n    });\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-18\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>When you use the arrow function, the <code>this<\/code> value references the object of the surrounding block which is the <code>WordCounter<\/code> in this case. In other words, you can access all the properties and methods of the WordCounter in the <code>count()<\/code> method.<\/p>\n\n\n\n<p>The final <code>WordCounter<\/code> class will look like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-19\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">WordCounter<\/span> <\/span>{\n    <span class=\"hljs-keyword\">constructor<\/span>(inputText) {\n        <span class=\"hljs-keyword\">this<\/span>.inputText = inputText;\n        <span class=\"hljs-keyword\">this<\/span>.inputText.addEventListener(<span class=\"hljs-string\">'input'<\/span>, () =&gt; {\n            <span class=\"hljs-keyword\">this<\/span>.count();\n        });\n    }\n    count() {\n        <span class=\"hljs-keyword\">let<\/span> wordStat = <span class=\"hljs-keyword\">this<\/span>.getWordStat(<span class=\"hljs-keyword\">this<\/span>.inputText.value.trim());\n        <span class=\"hljs-keyword\">this<\/span>.emitEvent(wordStat);\n    }\n\n    emitEvent(wordStat) {\n        <span class=\"hljs-comment\">\/\/ Create count event<\/span>\n        <span class=\"hljs-keyword\">let<\/span> countEvent = <span class=\"hljs-keyword\">new<\/span> CustomEvent(<span class=\"hljs-string\">'count'<\/span>, {\n            <span class=\"hljs-attr\">bubbles<\/span>: <span class=\"hljs-literal\">true<\/span>,\n            <span class=\"hljs-attr\">cancelable<\/span>: <span class=\"hljs-literal\">true<\/span>,\n            <span class=\"hljs-attr\">detail<\/span>: {\n                wordStat\n            }\n        });\n        <span class=\"hljs-comment\">\/\/ dispatch the count event<\/span>\n        <span class=\"hljs-keyword\">this<\/span>.inputText.dispatchEvent(countEvent);\n\n    }\n    getWordStat(str) {\n        <span class=\"hljs-keyword\">let<\/span> matches = str.match(<span class=\"hljs-regexp\">\/\\S+\/g<\/span>);\n        <span class=\"hljs-keyword\">return<\/span> {\n            <span class=\"hljs-attr\">characters<\/span>: str.length,\n            <span class=\"hljs-attr\">words<\/span>: matches ? matches.length : <span class=\"hljs-number\">0<\/span>,\n        };\n    }\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-19\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p><a href=\"https:\/\/javascripttutorial.net\/sample\/dom\/word-counter\/index.html\" target=\"_blank\" rel=\"noreferrer noopener\">Click here to see the Word Counter App in action.<\/a><\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<p>In this tutorial, you have learned how to develop a Word Counter app using vanilla JavaScript. And the following are the key takeways:<\/p>\n\n\n\n<ul><li>How to create and emit a custom event.<\/li><li>How to resolve the <code>this<\/code>  issue using arrow functions.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"87631\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/\"\n\t\t\t\tdata-post-title=\"JavaScript Word Counter\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"87631\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/\"\n\t\t\t\tdata-post-title=\"JavaScript Word Counter\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to build a Word Counter application using vanilla JavaScript.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":85107,"menu_order":59,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Developing JavaScript Word Counter App - A Step-by-Step Guide<\/title>\n<meta name=\"description\" content=\"In this tutorial, you&#039;ll learn how to build a Word Counter application using vanilla JavaScript.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Developing JavaScript Word Counter App - A Step-by-Step Guide\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you&#039;ll learn how to build a Word Counter application using vanilla JavaScript.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2020-09-23T07:41:02+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Word-Counter-Project-Structure.png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"8 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/\",\"name\":\"Developing JavaScript Word Counter App - A Step-by-Step Guide\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-09-13T09:49:54+00:00\",\"dateModified\":\"2020-09-23T07:41:02+00:00\",\"description\":\"In this tutorial, you'll learn how to build a Word Counter application using vanilla JavaScript.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript DOM\",\"item\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Word Counter\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Developing JavaScript Word Counter App - A Step-by-Step Guide","description":"In this tutorial, you'll learn how to build a Word Counter application using vanilla JavaScript.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/","og_locale":"en_US","og_type":"article","og_title":"Developing JavaScript Word Counter App - A Step-by-Step Guide","og_description":"In this tutorial, you'll learn how to build a Word Counter application using vanilla JavaScript.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/","og_site_name":"PriFix Tutorial","article_modified_time":"2020-09-23T07:41:02+00:00","og_image":[{"url":"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/09\/JavaScript-Word-Counter-Project-Structure.png"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"8 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/","url":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/","name":"Developing JavaScript Word Counter App - A Step-by-Step Guide","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-09-13T09:49:54+00:00","dateModified":"2020-09-23T07:41:02+00:00","description":"In this tutorial, you'll learn how to build a Word Counter application using vanilla JavaScript.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-word-counter\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"JavaScript DOM","item":"https:\/\/www.javascripttutorial.net\/javascript-dom\/"},{"@type":"ListItem","position":3,"name":"JavaScript Word Counter"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87631"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=87631"}],"version-history":[{"count":5,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87631\/revisions"}],"predecessor-version":[{"id":87795,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87631\/revisions\/87795"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85107"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=87631"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
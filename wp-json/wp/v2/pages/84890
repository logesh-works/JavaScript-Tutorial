{"id":84890,"date":"2019-12-30T19:12:07","date_gmt":"2019-12-31T03:12:07","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=84890"},"modified":"2022-01-16T00:09:25","modified_gmt":"2022-01-16T08:09:25","slug":"javascript-object-properties","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/","title":{"rendered":"JavaScript Object Properties"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about the JavaScript object&#8217;s properties and attributes such as configurable, enumerable, writable, get, set, and value.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Object Property types<\/h2>\n\n\n\n<p>JavaScript specifies the characteristics of properties of <a href=\"https:\/\/www.javascripttutorial.net\/javascript-objects\/\">objects<\/a> via internal attributes surrounded by the two pairs of square brackets, e.g., <code>[[Enumerable]]<\/code>.<\/p>\n\n\n\n<p>Objects have two types of properties: data and accessor properties.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Data properties<\/h3>\n\n\n\n<p>A data property contains a single location for a data value. A data property has four attributes:<\/p>\n\n\n\n<ul><li>&nbsp;<code>[[Configurarable]]<\/code> &#8211; determines whether a property can be redefined or removed via <code>delete<\/code> operator.<\/li><li>&nbsp;<code>[[Enumerable]]<\/code> &#8211; indicates if a property can be returned in the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-for-in\/\">for...in<\/a><\/code> loop.<\/li><li>&nbsp;<code>[[Writable]]<\/code> &#8211; specifies that the value of a property can be changed.<\/li><li>&nbsp;<code>[[Value]]<\/code> &#8211; contains the actual value of a property.<\/li><\/ul>\n\n\n\n<p>By default, the <code>[[Configurable]]<\/code> , <code>[[Enumerable]]<\/code>And <code>[[Writable]]<\/code> attributes set to <code>true<\/code> for all properties defined directly on an object. The default value of the<code>[[Value]]<\/code> attribute is <code>undefined<\/code>.<\/p>\n\n\n\n<p>The following example creates a <code>person<\/code> object with two properties <code>firstName<\/code> and <code>lastName<\/code> with the configurable, enumerable, and writable attributes set to <code>true<\/code>. And their values are set to <code>'John'<\/code> and <code>'Doe'<\/code> respectively:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {\n    <span class=\"hljs-attr\">firstName<\/span>: <span class=\"hljs-string\">'John'<\/span>,\n    <span class=\"hljs-attr\">lastName<\/span>: <span class=\"hljs-string\">'Doe'<\/span>\n};<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To change any attribute of a property, you use the <code>Object.defineProperty()<\/code> method.<\/p>\n\n\n\n<p>The <code>Object.defineProperty()<\/code> method accepts three arguments:<\/p>\n\n\n\n<ul><li>An object.<\/li><li>A property name of the object.<\/li><li>A property descriptor object that has four properties: <code>configurable<\/code>, <code>enumerable<\/code>, <code>writable<\/code>, and <code>value<\/code>.<\/li><\/ul>\n\n\n\n<p>If you use the <code>Object.defineProperty()<\/code> method to define a property of the object, the default values of <code>[[Configurable]]<\/code>, <code>[[Enumerable]]<\/code>, and <code>[[Writable]]<\/code> are set to <code>false<\/code> unless otherwise specified.<\/p>\n\n\n\n<p>The following example creates a <code>person<\/code> object with the <code>age<\/code> property:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {};\nperson.age = <span class=\"hljs-number\">25<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Since the default value of the <code>[[Configurable]]<\/code> attribute is set to <code>true<\/code>, you can remove it via the <code>delete<\/code> operator:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">delete<\/span> <span class=\"hljs-selector-tag\">person<\/span><span class=\"hljs-selector-class\">.age<\/span>;\n<span class=\"hljs-selector-tag\">console<\/span><span class=\"hljs-selector-class\">.log<\/span>(<span class=\"hljs-selector-tag\">person<\/span><span class=\"hljs-selector-class\">.age<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-literal\">undefined<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example creates a <code>person<\/code> object and adds the <code>ssn<\/code> property to it using the <code>Object.defineProperty()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-meta\">'use strict'<\/span>;\n\n<span class=\"hljs-keyword\">let<\/span> person = {};\n\n<span class=\"hljs-built_in\">Object<\/span>.defineProperty(person, <span class=\"hljs-string\">'ssn'<\/span>, {\n    <span class=\"hljs-attr\">configurable<\/span>: <span class=\"hljs-literal\">false<\/span>,\n    <span class=\"hljs-attr\">value<\/span>: <span class=\"hljs-string\">'012-38-9119'<\/span>\n});\n\n<span class=\"hljs-keyword\">delete<\/span> person.ssn;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">TypeError: Cannot delete property <span class=\"hljs-string\">'ssn'<\/span> of <span class=\"hljs-comment\">#&lt;Object&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>configurable<\/code> attribute is set to <code>false<\/code>.  herefore, deleting the <code>ssn<\/code> property causes\u00a0an error.<\/p>\n\n\n\n<p>Also, once you define a property as non-configurable, you cannot change it to configurable. <\/p>\n\n\n\n<p>If you use the <code>Object.defineProperty()<\/code> method to change any attribute other than the writable, you&#8217;ll get an error.  or example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-meta\">'use strict'<\/span>;\n\n<span class=\"hljs-keyword\">let<\/span> person = {};\n\n<span class=\"hljs-built_in\">Object<\/span>.defineProperty(person, <span class=\"hljs-string\">'ssn'<\/span>, {\n    <span class=\"hljs-attr\">configurable<\/span>: <span class=\"hljs-literal\">false<\/span>,\n    <span class=\"hljs-attr\">value<\/span>: <span class=\"hljs-string\">'012-38-9119'<\/span>\n});\n\n\n<span class=\"hljs-built_in\">Object<\/span>.defineProperty(person, <span class=\"hljs-string\">'ssn'<\/span>, {\n    <span class=\"hljs-attr\">configurable<\/span>: <span class=\"hljs-literal\">true<\/span>\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">TypeError<\/span>: Cannot redefine property: ssn<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>By default, the <code>enumerable<\/code> attribute of all the properties defined on an object is <code>true<\/code>.  t means that you can iterate over all object properties using the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-for-in\/\"><code>for...in<\/code> <\/a>loop like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {};\nperson.age = <span class=\"hljs-number\">25<\/span>;\nperson.ssn = <span class=\"hljs-string\">'012-38-9119'<\/span>;\n\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> property <span class=\"hljs-keyword\">in<\/span> person) {\n    <span class=\"hljs-built_in\">console<\/span>.log(property);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">age\nssn<\/code><\/span><\/pre>\n\n\n<p>The following makes the <code>ssn<\/code> property non-enumerable by setting the <code>enumerable<\/code> attribute to <code>false<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {};\nperson.age = <span class=\"hljs-number\">25<\/span>;\nperson.ssn = <span class=\"hljs-string\">'012-38-9119'<\/span>;\n\n<span class=\"hljs-built_in\">Object<\/span>.defineProperty(person, <span class=\"hljs-string\">'ssn'<\/span>, {\n    <span class=\"hljs-attr\">enumerable<\/span>: <span class=\"hljs-literal\">false<\/span>\n});\n\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> prop <span class=\"hljs-keyword\">in<\/span> person) {\n    <span class=\"hljs-built_in\">console<\/span>.log(prop);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">age<\/code><\/span><\/pre>\n\n\n<h3 class=\"wp-block-heading\" id=\"accessor_property\">2) Accessor properties<\/h3>\n\n\n\n<p>Similar to data properties, accessor properties also have <code>[[Configurable]]<\/code> and <code>[[Enumerable]]<\/code> attributes. <\/p>\n\n\n\n<p>But the accessor properties have the <code>[[Get]]<\/code> and <code>[[Set]]<\/code> attributes instead of <code> [[Value]]<\/code> and <code>[[Writable]]<\/code>.<\/p>\n\n\n\n<p>When you read data from an accessor property, the <code>[[Get]]<\/code> function is called automatically to return a value. The default return value of the <code>[[Get]]<\/code> function is <code>undefined<\/code>.<\/p>\n\n\n\n<p>If you assign a value to an accessor property, the <code>[[Set]]<\/code> function is called automatically. <\/p>\n\n\n\n<p>To define an accessor property, you must use the <code>Object.defineProperty()<\/code> method.  or example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {\n    <span class=\"hljs-attr\">firstName<\/span>: <span class=\"hljs-string\">'John'<\/span>,\n    <span class=\"hljs-attr\">lastName<\/span>: <span class=\"hljs-string\">'Doe'<\/span>\n}\n\n<span class=\"hljs-built_in\">Object<\/span>.defineProperty(person, <span class=\"hljs-string\">'fullName'<\/span>, {\n    <span class=\"hljs-attr\">get<\/span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">this<\/span>.firstName + <span class=\"hljs-string\">' '<\/span> + <span class=\"hljs-keyword\">this<\/span>.lastName;\n    },\n    <span class=\"hljs-attr\">set<\/span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">value<\/span>) <\/span>{\n        <span class=\"hljs-keyword\">let<\/span> parts = value.split(<span class=\"hljs-string\">' '<\/span>);\n        <span class=\"hljs-keyword\">if<\/span> (parts.length == <span class=\"hljs-number\">2<\/span>) {\n            <span class=\"hljs-keyword\">this<\/span>.firstName = parts&#91;<span class=\"hljs-number\">0<\/span>];\n            <span class=\"hljs-keyword\">this<\/span>.lastName = parts&#91;<span class=\"hljs-number\">1<\/span>];\n        } <span class=\"hljs-keyword\">else<\/span> {\n            <span class=\"hljs-keyword\">throw<\/span> <span class=\"hljs-string\">'Invalid name format'<\/span>;\n        }\n    }\n});\n\n<span class=\"hljs-built_in\">console<\/span>.log(person.fullName);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-string\">'John Doe'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example:<\/p>\n\n\n\n<ul><li>First, define the <code>person<\/code> object that contains&nbsp;two properties: <code>firstName<\/code> and <code>lastName<\/code>.<\/li><li>Then, add the <code>fullName<\/code> property to the <code>person<\/code> object as an accessor property.<\/li><\/ul>\n\n\n\n<p>In the <code>fullname<\/code> accessor property:<\/p>\n\n\n\n<ul><li>The <code>[[Get]]<\/code> returns the full name that is the result of <a href=\"https:\/\/www.javascripttutorial.net\/javascript-string-concat\/\">concatenating<\/a> of <code>firstName<\/code>, <code>space<\/code>, and <code>lastName<\/code>.<\/li><li>The <code>[[Set]]<\/code> method <a href=\"https:\/\/www.javascripttutorial.net\/javascript-string-split\/\">splits<\/a> the argument by the space and assigns the <code>firstName<\/code> and <code>lastName <\/code>properties the corresponding parts of the name.<\/li><li>If the full name is not in the correct format i.e., first name, space, and last name, it will <a href=\"https:\/\/www.javascripttutorial.net\/es6\/promise-error-handling\/\">throw an error<\/a>.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Define multiple properties: <code>Object.defineProperties()<\/code><\/h2>\n\n\n\n<p>In ES5, you can define multiple properties in a single statement using the <code>Object.defineProperties()<\/code> method.  or example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var<\/span> product = {};\n\n<span class=\"hljs-built_in\">Object<\/span>.defineProperties(product, {\n    <span class=\"hljs-attr\">name<\/span>: {\n        <span class=\"hljs-attr\">value<\/span>: <span class=\"hljs-string\">'Smartphone'<\/span>\n    },\n    <span class=\"hljs-attr\">price<\/span>: {\n        <span class=\"hljs-attr\">value<\/span>: <span class=\"hljs-number\">799<\/span>\n    },\n    <span class=\"hljs-attr\">tax<\/span>: {\n        <span class=\"hljs-attr\">value<\/span>: <span class=\"hljs-number\">0.1<\/span>\n    },\n    <span class=\"hljs-attr\">netPrice<\/span>: {\n        <span class=\"hljs-attr\">get<\/span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n            <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">this<\/span>.price * (<span class=\"hljs-number\">1<\/span> + <span class=\"hljs-keyword\">this<\/span>.tax);\n        }\n    }\n});\n\n<span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'The net price of a '<\/span> + product.name + <span class=\"hljs-string\">' is '<\/span> + product.netPrice.toFixed(<span class=\"hljs-number\">2<\/span>) + <span class=\"hljs-string\">' USD'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">The<\/span> <span class=\"hljs-selector-tag\">net<\/span> <span class=\"hljs-selector-tag\">price<\/span> <span class=\"hljs-selector-tag\">of<\/span> <span class=\"hljs-selector-tag\">a<\/span> <span class=\"hljs-selector-tag\">Smartphone<\/span> <span class=\"hljs-selector-tag\">is<\/span> 878<span class=\"hljs-selector-class\">.90<\/span> <span class=\"hljs-selector-tag\">USD<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we defined three data properties: <code>name<\/code>, <code>price<\/code>, and <code>tax<\/code>, and one accessor property <code>netPrice<\/code> for the <code>product<\/code> object.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript object property descriptor<\/h2>\n\n\n\n<p>The\u00a0 <code>Object.getOwnPropertyDescriptor()<\/code> method allows you to get the descriptor object of a property. The <code>Object.getOwnPropertyDescriptor()<\/code> method takes two arguments:<\/p>\n\n\n\n<ol><li>An object<\/li><li>A property of the object<\/li><\/ol>\n\n\n\n<p>It returns a descriptor object that describes a property. The descriptor object has four properties: configurable, enumerable, writable, and value. <\/p>\n\n\n\n<p>The following example gets the descriptor object of the <code>name<\/code> property of the <code>product<\/code> object in the prior&nbsp;example.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {\n    <span class=\"hljs-attr\">firstName<\/span>: <span class=\"hljs-string\">'John'<\/span>,\n    <span class=\"hljs-attr\">lastName<\/span>: <span class=\"hljs-string\">'Doe'<\/span>\n};\n\n\n<span class=\"hljs-keyword\">let<\/span> descriptor = <span class=\"hljs-built_in\">Object<\/span>.getOwnPropertyDescriptor(person, <span class=\"hljs-string\">'firstName'<\/span>);\n\n<span class=\"hljs-built_in\">console<\/span>.log(descriptor);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{ <span class=\"hljs-attribute\">value<\/span>: <span class=\"hljs-string\">'John'<\/span>,\n  writable: true,\n  enumerable: true,\n  configurable: true }<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>JavaScript objects have two types of properties: data properties and accessor properties.<\/li><li>JavaScript uses internal attributes denoted by <code>[[...]]<\/code> to describe the characteristics of properties such as <code>[[Configurable]]<\/code>, <code>[[Enumerable]]<\/code>, <code>[[Writable]]<\/code>, and&nbsp; <code>[[Value]]<\/code>, <code>[[Get]]<\/code>, and <code>[[Set]]<\/code>.<\/li><li>The method <code>Object.getOwnPropertyDescriptor()<\/code> return a property descriptor of a property in an object.<\/li><li>A property can be defined directly on an object or indirectly via the <code>Object.defineProperty()<\/code>&nbsp;or <code>Object.defineProperties()<\/code> methods. These methods can be used to change the attributes of a property.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"84890\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/\"\n\t\t\t\tdata-post-title=\"JavaScript Object Properties\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"84890\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/\"\n\t\t\t\tdata-post-title=\"JavaScript Object Properties\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn about the JavaScript object&#8217;s properties and their attributes such as configurable, enumerable, writable, get, set, and value.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":50,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Understanding JavaScript Object Property Types and Their Attirbutes<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn about the JavaScript object&#039;s properties and their attributes such as configurable, enumerable, writable, get, set, and value.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Understanding JavaScript Object Property Types and Their Attirbutes\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn about the JavaScript object&#039;s properties and their attributes such as configurable, enumerable, writable, get, set, and value.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-16T08:09:25+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"5 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/\",\"name\":\"Understanding JavaScript Object Property Types and Their Attirbutes\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2019-12-31T03:12:07+00:00\",\"dateModified\":\"2022-01-16T08:09:25+00:00\",\"description\":\"In this tutorial, you will learn about the JavaScript object's properties and their attributes such as configurable, enumerable, writable, get, set, and value.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Object Properties\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Understanding JavaScript Object Property Types and Their Attirbutes","description":"In this tutorial, you will learn about the JavaScript object's properties and their attributes such as configurable, enumerable, writable, get, set, and value.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/","og_locale":"en_US","og_type":"article","og_title":"Understanding JavaScript Object Property Types and Their Attirbutes","og_description":"In this tutorial, you will learn about the JavaScript object's properties and their attributes such as configurable, enumerable, writable, get, set, and value.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-01-16T08:09:25+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"5 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/","url":"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/","name":"Understanding JavaScript Object Property Types and Their Attirbutes","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2019-12-31T03:12:07+00:00","dateModified":"2022-01-16T08:09:25+00:00","description":"In this tutorial, you will learn about the JavaScript object's properties and their attributes such as configurable, enumerable, writable, get, set, and value.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-object-properties\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript Object Properties"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/84890"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=84890"}],"version-history":[{"count":5,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/84890\/revisions"}],"predecessor-version":[{"id":89019,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/84890\/revisions\/89019"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=84890"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
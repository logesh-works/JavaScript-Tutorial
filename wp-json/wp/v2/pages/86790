{"id":86790,"date":"2020-04-26T21:23:09","date_gmt":"2020-04-27T04:23:09","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=86790"},"modified":"2022-02-13T07:16:39","modified_gmt":"2022-02-13T15:16:39","slug":"javascript-promise-allsettled","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/","title":{"rendered":"JavaScript Promise.allSettled()"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the <code>Promise.allSettled()<\/code> method to compose promises.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"introduction-to-the-promise-allsettled-method\">Introduction to the <code>Promise.allSettled()<\/code> method<\/h2>\n\n\n\n<p>ES2020 introduced the <code>Promise.allSettled()<\/code> method that accepts a list of <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-promises\/\">Promises<\/a> and returns a new promise that resolves after all the input promises have settled, either resolved or rejected.<\/p>\n\n\n\n<p>The following shows the syntax of the <code>Promise.allSettled()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">Promise<\/span>.allSettled(iterable);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>iterable<\/code> contains the promises. The <code>Promise.allSettled()<\/code> returns a pending promise that will be asynchronously fulfilled once every input promise has settled.<\/p>\n\n\n\n<p>The <code>Promise.allSettled()<\/code> method returns a promise that resolves to an <a href=\"https:\/\/www.javascripttutorial.net\/javascript-array\/\">array<\/a> of <a href=\"https:\/\/www.javascripttutorial.net\/javascript-objects\/\">objects<\/a> that each describes the result of the input promise. <\/p>\n\n\n\n<p>Each object has two properties: <code>status<\/code> and <code>value<\/code> (or <code>reason<\/code>). <\/p>\n\n\n\n<ul><li>The <code>status<\/code> can be either <code>fulfilled<\/code> or <code>rejected<\/code>. <\/li><li>The <code>value<\/code> if case the promise is fulfilled or <code>reason<\/code>) if the promise is rejected.<\/li><\/ul>\n\n\n\n<p>The following diagram illustrates how the <code>Promise.allSettled()<\/code> method works:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/02\/JavaScript-Promise.allSettled.svg\"><img decoding=\"async\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/02\/JavaScript-Promise.allSettled.svg\" alt=\"JavaScript Promise.allSettled\" class=\"wp-image-89572\"\/><\/a><\/figure>\n\n\n\n<p>In this diagram:<\/p>\n\n\n\n<ul><li>The <code>promise1<\/code> rejects to the <code>error<\/code> at <code>t1<\/code>.<\/li><li>The <code>promise2<\/code> resolves to a value at <code>t2<\/code>.<\/li><li>The <code>Promise.allSettled()<\/code> method resolves to a array containing objects that describe the statuses and outcomes of the <code>promise1<\/code> and <code>promise2<\/code>.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"javascript-promise-allsettled-example\">JavaScript Promise.allSettled() example<\/h2>\n\n\n\n<p>The following example uses the <code>Promise.allSettled()<\/code> to wait for all the input Promises to settle:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> p1 = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\n    setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n        <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'The first promise has resolved'<\/span>);\n        resolve(<span class=\"hljs-number\">10<\/span>);\n    }, <span class=\"hljs-number\">1<\/span> * <span class=\"hljs-number\">1000<\/span>);\n\n});\n\n<span class=\"hljs-keyword\">const<\/span> p2 = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\n    setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n        <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'The second promise has rejected'<\/span>);\n        reject(<span class=\"hljs-number\">20<\/span>);\n    }, <span class=\"hljs-number\">2<\/span> * <span class=\"hljs-number\">1000<\/span>);\n});\n\n<span class=\"hljs-built_in\">Promise<\/span>.allSettled(&#91;p1, p2])\n    .then(<span class=\"hljs-function\">(<span class=\"hljs-params\">result<\/span>) =&gt;<\/span> {\n        <span class=\"hljs-built_in\">console<\/span>.log(result);\n    });\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"472\" height=\"136\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/04\/allSettled.png\" alt=\"\" class=\"wp-image-86792\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/04\/allSettled.png 472w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2020\/04\/allSettled-300x86.png 300w\" sizes=\"(max-width: 472px) 100vw, 472px\" \/><\/figure>\n\n\n\n<p>How it works:<\/p>\n\n\n\n<ul><li>The first promise <code>p<\/code>1 resolves to the value <code>10<\/code> after one second <\/li><li>The second promise <code>p2<\/code> rejects for a reason with a value <code>20<\/code> after two seconds.<\/li><li>The <code>Promise.allSettled()<\/code> returns a promise that resolves to the <code>result<\/code> array that has two elements. The first element is an object resolved by the <code>p1<\/code> promise and the second one is another object which is rejected by the <code>p2<\/code> promise.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"summary\">Summary<\/h2>\n\n\n\n<ul><li>The <code>Promise.allSettled()<\/code> method accepts an iterable of promises and returns a new promise that resolves when every input promise has settled with an array of objects that describes the result of each promise in the iterable object.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"86790\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/\"\n\t\t\t\tdata-post-title=\"JavaScript Promise.allSettled()\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"86790\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/\"\n\t\t\t\tdata-post-title=\"JavaScript Promise.allSettled()\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn about the Promise.allSettled() method to compose promises. Introduction to the Promise.allSettled() method ES2020 introduced the Promise.allSettled() method that accepts a list of Promises and returns a new promise that resolves after all the input promises have settled, either resolved or rejected. The following shows the syntax of the Promise.allSettled() [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":90,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Promise.allSettled()<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Promise.allSettled()\" \/>\n<meta property=\"og:description\" content=\"Summary: in this tutorial, you&#8217;ll learn about the Promise.allSettled() method to compose promises. Introduction to the Promise.allSettled() method ES2020 introduced the Promise.allSettled() method that accepts a list of Promises and returns a new promise that resolves after all the input promises have settled, either resolved or rejected. The following shows the syntax of the Promise.allSettled() [&hellip;]\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-13T15:16:39+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/02\/JavaScript-Promise.allSettled.svg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/\",\"name\":\"JavaScript Promise.allSettled()\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-04-27T04:23:09+00:00\",\"dateModified\":\"2022-02-13T15:16:39+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Promise.allSettled()\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Promise.allSettled()","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Promise.allSettled()","og_description":"Summary: in this tutorial, you&#8217;ll learn about the Promise.allSettled() method to compose promises. Introduction to the Promise.allSettled() method ES2020 introduced the Promise.allSettled() method that accepts a list of Promises and returns a new promise that resolves after all the input promises have settled, either resolved or rejected. The following shows the syntax of the Promise.allSettled() [&hellip;]","og_url":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-02-13T15:16:39+00:00","og_image":[{"url":"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/02\/JavaScript-Promise.allSettled.svg"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/","url":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/","name":"JavaScript Promise.allSettled()","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-04-27T04:23:09+00:00","dateModified":"2022-02-13T15:16:39+00:00","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-allsettled\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript Promise.allSettled()"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86790"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=86790"}],"version-history":[{"count":4,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86790\/revisions"}],"predecessor-version":[{"id":89574,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86790\/revisions\/89574"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=86790"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
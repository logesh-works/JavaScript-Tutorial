{"id":86400,"date":"2020-04-05T09:02:02","date_gmt":"2020-04-05T16:02:02","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=86400"},"modified":"2022-01-22T00:24:29","modified_gmt":"2022-01-22T08:24:29","slug":"javascript-async-generators","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/","title":{"rendered":"JavaScript Async Generators"},"content":{"rendered":"\r\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the JavaScript async generators that iterate over data which comes asynchronously.<\/p>\r\n\r\n\r\n\r\n<h2 class=\"wp-block-heading\">What is an async generator<\/h2>\r\n\r\n\r\n\r\n<p>An async generator is similar to a regular <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-generators\/\">generator<\/a> except that its <code>next()<\/code> method returns a <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promises\/\">Promise<\/a>. To iterate over an async generator, you use the <code>for await...of<\/code> statement.<\/p>\r\n\r\n\r\n\r\n<h2 class=\"wp-block-heading\">Introduction to the JavaScript async generators<\/h2>\r\n\r\n\r\n\r\n<p>A regular generator is a function that can pause midway and continues from where it paused. See the following example:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>* <span class=\"hljs-title\">sequence<\/span>(<span class=\"hljs-params\">start, end<\/span>) <\/span>{\r\n    <span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> i = start; i &lt;= end; i++) {\r\n        <span class=\"hljs-keyword\">yield<\/span> i;\r\n    }\r\n}\r\n\r\n<span class=\"hljs-keyword\">let<\/span> seq = sequence(<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">5<\/span>);\r\n\r\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">const<\/span> num <span class=\"hljs-keyword\">of<\/span> seq) {\r\n    <span class=\"hljs-built_in\">console<\/span>.log(num);\r\n}\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>The <code>sequence<\/code> is a generator that returns a number from the <code>start<\/code> to the <code>end<\/code>.<\/p>\r\n\r\n\r\n\r\n<p>An async generator is similar to a regular generator with the following differences:<\/p>\r\n\r\n\r\n\r\n<ul><li>The <code>async<\/code> keyword is placed in front of the <code>function<\/code> keyword.<\/li><li>The <code>yield<\/code> returns a <code>Promise<\/code> , instead of a value. The <code>Promise<\/code> is typically a wrapper of an asynchronous operation.<\/li><\/ul>\r\n\r\n\r\n\r\n<p>The following illustrates how to convert the generator <code>sequence<\/code> to the async generator <code>asyncSequence<\/code>:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">async<\/span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>* <span class=\"hljs-title\">asyncSequence<\/span>(<span class=\"hljs-params\">start, end<\/span>) <\/span>{\r\n    <span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> i = start; i &lt;= end; i++) {\r\n        <span class=\"hljs-keyword\">yield<\/span> <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\r\n            setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\r\n                resolve(i);\r\n            }, <span class=\"hljs-number\">1000<\/span>);\r\n        });\r\n\r\n    }\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Note that we used the <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/\">setTimeout()<\/a><\/code> to simulate an asynchronous operation.<\/p>\r\n\r\n\r\n\r\n<p>To iterate over the entire async generator, you use the <code>for await...of<\/code> statement.<\/p>\r\n\r\n\r\n\r\n<p>Since we only can use the <code>await<\/code> keyword inside an <code>async<\/code> function, we wrap the code inside an async <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-immediately-invoked-function-expression-iife\/\">IIFE<\/a> as follows:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">(<span class=\"hljs-keyword\">async<\/span> () =&gt; {\r\n    <span class=\"hljs-keyword\">let<\/span> seq = asyncSequence(<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">5<\/span>);\r\n\r\n    <span class=\"hljs-keyword\">for<\/span> <span class=\"hljs-keyword\">await<\/span> (<span class=\"hljs-keyword\">let<\/span> num <span class=\"hljs-keyword\">of<\/span> seq) {\r\n        <span class=\"hljs-built_in\">console<\/span>.log(num);\r\n    }\r\n})();\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>The code returns a sequence from 1 to 5 after every second:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-number\">1<\/span>\r\n<span class=\"hljs-number\">2<\/span>\r\n<span class=\"hljs-number\">3<\/span>\r\n<span class=\"hljs-number\">4<\/span>\r\n<span class=\"hljs-number\">5<\/span>\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>The async generators can be very useful when you access a stream of data and want to report the progress like using a progress bar.<\/p>\r\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"86400\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/\"\n\t\t\t\tdata-post-title=\"JavaScript Async Generators\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"86400\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/\"\n\t\t\t\tdata-post-title=\"JavaScript Async Generators\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn about the JavaScript async generators that iterate over data which comes asynchronously.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":99,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Async Generators<\/title>\n<meta name=\"description\" content=\"In this tutorial, you&#039;ll learn about the JavaScript async generators that iterate over data which comes asynchronously.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Async Generators\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you&#039;ll learn about the JavaScript async generators that iterate over data which comes asynchronously.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-22T08:24:29+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"1 minute\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/\",\"name\":\"JavaScript Async Generators\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2020-04-05T16:02:02+00:00\",\"dateModified\":\"2022-01-22T08:24:29+00:00\",\"description\":\"In this tutorial, you'll learn about the JavaScript async generators that iterate over data which comes asynchronously.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Async Generators\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Async Generators","description":"In this tutorial, you'll learn about the JavaScript async generators that iterate over data which comes asynchronously.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Async Generators","og_description":"In this tutorial, you'll learn about the JavaScript async generators that iterate over data which comes asynchronously.","og_url":"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-01-22T08:24:29+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"1 minute"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/","url":"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/","name":"JavaScript Async Generators","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2020-04-05T16:02:02+00:00","dateModified":"2022-01-22T08:24:29+00:00","description":"In this tutorial, you'll learn about the JavaScript async generators that iterate over data which comes asynchronously.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-async-generators\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":3,"name":"JavaScript Async Generators"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/86400"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=86400"}],"version-history":[{"count":2,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/86400\/revisions"}],"predecessor-version":[{"id":86403,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/86400\/revisions\/86403"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=86400"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
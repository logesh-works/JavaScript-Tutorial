{"id":622,"date":"2016-09-11T23:31:46","date_gmt":"2016-09-12T06:31:46","guid":{"rendered":"http:\/\/www.javascripttutorial.net\/?page_id=622"},"modified":"2022-08-17T17:22:14","modified_gmt":"2022-08-18T00:22:14","slug":"javascript-prototype","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-prototype\/","title":{"rendered":"JavaScript Prototype"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the JavaScript prototype and how it works under the hood.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to JavaScript prototype<\/h2>\n\n\n\n<p>In JavaScript, objects can inherit features from one another via <strong>prototypes<\/strong>. Every object has its own property called prototype. <\/p>\n\n\n\n<p>Because a prototype itself is also another object, the prototype has its own prototype. This creates a something called <strong>prototype chain<\/strong>. The prototype chain ends when a prototype has <code><a href=\"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/\">null<\/a><\/code> for its own prototype.<\/p>\n\n\n\n<p>Suppose you have an object <code>person<\/code> with a property called <code>name<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {<span class=\"hljs-string\">'name'<\/span> : <span class=\"hljs-string\">'John'<\/span>}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>When examining the <code>person<\/code> object in the console, you&#8217;ll find that the <code>person<\/code> object has a property called <code>prototype<\/code> denoted by the <code>[[Prototype]]<\/code>:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype.png\"><img decoding=\"async\" loading=\"lazy\" width=\"429\" height=\"133\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype.png\" alt=\"\" class=\"wp-image-90289\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype.png 429w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype-300x93.png 300w\" sizes=\"(max-width: 429px) 100vw, 429px\" \/><\/a><\/figure>\n\n\n\n<p>The prototype itself is an object with its own properties:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype-object.png\"><img decoding=\"async\" loading=\"lazy\" width=\"561\" height=\"445\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype-object.png\" alt=\"\" class=\"wp-image-90290\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype-object.png 561w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype-object-300x238.png 300w\" sizes=\"(max-width: 561px) 100vw, 561px\" \/><\/a><\/figure>\n\n\n\n<p>When you access a property of an object, if the object has that property, it&#8217;ll return the property value. The following example accesses the <code>name<\/code> property of the <code>person<\/code> object:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype-access-property-that-exists.png\"><img decoding=\"async\" loading=\"lazy\" width=\"203\" height=\"57\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype-access-property-that-exists.png\" alt=\"\" class=\"wp-image-90291\"\/><\/a><\/figure>\n\n\n\n<p>It returns the value of the <code>name<\/code> property as expected.<\/p>\n\n\n\n<p>However, if you access a property that doesn&#8217;t exist in an object, the JavaScript engine will search in the prototype of the object. <\/p>\n\n\n\n<p>If the JavaScript engine cannot find the property in the object&#8217;s prototype, it&#8217;ll search in the prototype&#8217;s prototype until either it finds the property or reaches the end of the prototype chain.<\/p>\n\n\n\n<p>For example, you can call the <code>toString()<\/code> method of the <code>person<\/code> object like this:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype-toString-method.png\"><img decoding=\"async\" loading=\"lazy\" width=\"215\" height=\"62\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype-toString-method.png\" alt=\"\" class=\"wp-image-90292\"\/><\/a><\/figure>\n\n\n\n<p>The <code>toString()<\/code> method returns the string representation of the <code>person<\/code> object. By default, it&#8217;s <code>[object Object]<\/code> which is not obvious.<\/p>\n\n\n\n<p class=\"note\">Note that when a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-function\/\">function<\/a> is a value of an object&#8217;s property, it&#8217;s called a method. Therefore, a method is a property with value as a function.<\/p>\n\n\n\n<p>In this example, when we call the <code>toString()<\/code> method on the <code>person<\/code> object, the JavaScript engine finds it in the <code>person<\/code> object. Because the <code>person<\/code> object doesn&#8217;t have the <code>toString()<\/code> method, it&#8217;ll search for the <code>toString()<\/code> method in the person&#8217;s prototype object.<\/p>\n\n\n\n<p>Since the person&#8217;s prototype has the <code>toString()<\/code> method, JavaScript calls the <code>toString()<\/code> of the person&#8217;s prototype object.<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype-prototype-chain-search.png\"><img decoding=\"async\" loading=\"lazy\" width=\"490\" height=\"394\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype-prototype-chain-search.png\" alt=\"\" class=\"wp-image-90293\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype-prototype-chain-search.png 490w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype-prototype-chain-search-300x241.png 300w\" sizes=\"(max-width: 490px) 100vw, 490px\" \/><\/a><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript prototype illustration<\/h2>\n\n\n\n<p>JavaScript has the built-in <code>Object()<\/code> function. The <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-typeof\/\">typeof<\/a><\/code> operator returns <code>'function'<\/code> if you pass the <code>Object<\/code> function to it. For example: <\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">typeof<\/span>(<span class=\"hljs-built_in\">Object<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-string\">'function'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p class=\"note\">Please note that <code>Object()<\/code> is a function, not an object. It&#8217;s confusing if this is the first time you&#8217;ve learned about the JavaScript prototype.<\/p>\n\n\n\n<p>Also, JavaScript provides an anonymous <a href=\"https:\/\/www.javascripttutorial.net\/javascript-objects\/\">object<\/a> that can be referenced via the <code>prototype<\/code> property of the <code>Object()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-built_in\">Object<\/span>.prototype);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2021\/01\/JavaScript-Prototype-Object.prototype.png\"><img decoding=\"async\" loading=\"lazy\" width=\"769\" height=\"274\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2021\/01\/JavaScript-Prototype-Object.prototype.png\" alt=\"\" class=\"wp-image-88180\" srcset=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2021\/01\/JavaScript-Prototype-Object.prototype.png 769w, https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2021\/01\/JavaScript-Prototype-Object.prototype-300x107.png 300w\" sizes=\"(max-width: 769px) 100vw, 769px\" \/><\/a><\/figure><\/div>\n\n\n<p>The <code>Object.prototype<\/code> object has some useful <a href=\"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/\">properties<\/a> and <a href=\"https:\/\/www.javascripttutorial.net\/javascript-object-methods\/\">methods<\/a> such as <code>toString()<\/code> and <code>valueOf()<\/code>. <\/p>\n\n\n\n<p>The <code>Object.prototype<\/code> also has an important property called <code>constructor<\/code> that references the <code>Object()<\/code> function.<\/p>\n\n\n\n<p>The following statement confirms that the <code>Object.prototype.constructor<\/code> property references the <code>Object<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-built_in\">Object<\/span>.prototype.constructor === <span class=\"hljs-built_in\">Object<\/span>); <span class=\"hljs-comment\">\/\/ true<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Suppose a circle represents a function and a square represents an object. The following picture illustrates the relationship between the <code>Object()<\/code> function and the <code>Object.prototype<\/code> object:<\/p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/01\/JS-prototype.svg\"><img decoding=\"async\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/01\/JS-prototype.svg\" alt=\"JavaScript Prototype\" class=\"wp-image-89282\"\/><\/a><\/figure><\/div>\n\n\n<p>First, define a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-constructor-function\/\">constructor function<\/a> called <code>Person<\/code> as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">Person<\/span>(<span class=\"hljs-params\">name<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">this<\/span>.name = name;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>Person()<\/code> function accepts a <code>name<\/code> argument and assigns it to the <code>name<\/code> property of the <code>this<\/code> object.<\/p>\n\n\n\n<p>Behind the scenes, JavaScript creates a new function <code>Person()<\/code> and an anonymous object:<\/p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/01\/JS-prototype-Person-type.svg\"><img decoding=\"async\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/01\/JS-prototype-Person-type.svg\" alt=\"JS prototype- Person type\" class=\"wp-image-89281\"\/><\/a><\/figure><\/div>\n\n\n<p>Like the <code>Object()<\/code> function, the <code>Person()<\/code> function has a property called <code>prototype<\/code> that references an anonymous object. And the anonymous object has the <code>constructor<\/code> property that references the <code>Person()<\/code> function.<\/p>\n\n\n\n<p>The following shows the <code>Person()<\/code> function and the anonymous object referenced by the <code>Person.prototype<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">console<\/span><span class=\"hljs-selector-class\">.log<\/span>(<span class=\"hljs-selector-tag\">Person<\/span>);\n<span class=\"hljs-selector-tag\">console<\/span><span class=\"hljs-selector-class\">.log<\/span>(<span class=\"hljs-selector-tag\">Person<\/span><span class=\"hljs-selector-class\">.prototype<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2021\/01\/JavaScript-Prototype-Person-function.png\"><img decoding=\"async\" loading=\"lazy\" width=\"292\" height=\"271\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2021\/01\/JavaScript-Prototype-Person-function.png\" alt=\"\" class=\"wp-image-88168\"\/><\/a><\/figure><\/div>\n\n\n<p>In addition, JavaScript links the <code>Person.prototype<\/code> object to the <code>Object.prototype<\/code> object via the <code>[[Prototype]]<\/code>, which is known as a <em>prototype linkage<\/em>. <\/p>\n\n\n\n<p>The prototype linkage is denoted by <code>[[Prototype]]<\/code> in the following figure:<\/p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/01\/JS-prototype-Person-prototype.svg\"><img decoding=\"async\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/01\/JS-prototype-Person-prototype.svg\" alt=\"JS prototype- Person prototype\" class=\"wp-image-89280\"\/><\/a><\/figure><\/div>\n\n\n<h2 class=\"wp-block-heading\">Defining methods in the JavaScript prototype object<\/h2>\n\n\n\n<p>The following defines a new method called <code>greet()<\/code> in the <code>Person.prototype<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">Person.prototype.greet = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">\"Hi, I'm \"<\/span> + <span class=\"hljs-keyword\">this<\/span>.name + <span class=\"hljs-string\">\"!\"<\/span>;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this case, the JavaScript engine adds the <code>greet()<\/code> method to the <code>Person.prototype<\/code> object:<\/p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/01\/JS-prototype-method.svg\"><img decoding=\"async\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/01\/JS-prototype-method.svg\" alt=\"\" class=\"wp-image-89288\"\/><\/a><\/figure><\/div>\n\n\n<p>The following creates a new instance of the <code>Person<\/code> :<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> p1 = <span class=\"hljs-keyword\">new<\/span> Person(<span class=\"hljs-string\">'John'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Internally, the JavaScript engine creates a new object named <code>p1<\/code>&nbsp;and links the <code>p1<\/code> object&nbsp;to the <code>Person.prototype<\/code> object via the prototype linkage:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/01\/JS-prototype-Person-object.svg\"><img decoding=\"async\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/01\/JS-prototype-Person-object.svg\" alt=\"\" class=\"wp-image-89286\"\/><\/a><\/figure>\n\n\n\n<p>The link between <code>p1<\/code>, <code>Person.prototype<\/code>, and <code>Object.protoype<\/code> is called&nbsp;a <em>prototype chain<\/em>.<\/p>\n\n\n\n<p>The following calls the <code>greet()<\/code> method on the <code>p1<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> greeting = p1.greet();\n<span class=\"hljs-built_in\">console<\/span>.log(greeting);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Because <code>p1<\/code> doesn&#8217;t have the <code>greet()<\/code> method, JavaScript follows the prototype linkage and finds it on the <code>Person.prototype<\/code> object.<\/p>\n\n\n\n<p>Since JavaScript can find the <code>greet()<\/code> method on the <code>Person.prototype<\/code> object, it executes the <code>greet()<\/code> method and returns the result:<\/p>\n\n\n\n<p>The following calls the <code>toString()<\/code> method on the p1 object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> s = p1.toString();\n<span class=\"hljs-built_in\">console<\/span>.log(s);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this case, the JavaScript engine follows the prototype chain to look up for the <code>toString()<\/code> method in the <code>Person.prototype<\/code>. <\/p>\n\n\n\n<p>Because the <code>Person.prototype<\/code> doesn&#8217;t have the <code>toString()<\/code> method, the JavaScript engine goes up to the prototype chain and  searches for the <code>toString()<\/code> method in the <code>Object.prototype<\/code> object.<\/p>\n\n\n\n<p>Since JavaScript can find the <code>toString()<\/code> method in the <code>Object.prototype<\/code>, it executes the <code>toString()<\/code> method.<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/01\/JS-prototype-calling-a-method.svg\"><img decoding=\"async\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/01\/JS-prototype-calling-a-method.svg\" alt=\"\" class=\"wp-image-89283\"\/><\/a><\/figure>\n\n\n\n<p>If you call a method that doesn&#8217;t exist on the <code>Person.prototype<\/code> and <code>Object.prototype<\/code> object, the JavaScript engine will follow the prototype chain and throw an error if it cannot find the method. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">p1<\/span><span class=\"hljs-selector-class\">.fly<\/span>();\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Because the <code>fly()<\/code> method doesn&#8217;t exist on any object in the prototype chain, the JavaScript engine issues the following error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">TypeError<\/span>: p1.fly is not a <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following creates another instance of the <code>Person<\/code> whose name property is <code>'Jane'<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> p2 = <span class=\"hljs-keyword\">new<\/span> Person(<span class=\"hljs-string\">'Jane'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/01\/JS-prototype-two-person-objects.svg\"><img decoding=\"async\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/01\/JS-prototype-two-person-objects.svg\" alt=\"JS prototype-two person objects\" class=\"wp-image-89292\"\/><\/a><\/figure>\n\n\n\n<p>The <code>p2<\/code> object has the properties and methods as the <code>p1<\/code> object.<\/p>\n\n\n\n<p>In conclusion, when you define a method on the <code>prototype<\/code> object, this method is shared by all instances.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Defining methods in an individual object<\/h2>\n\n\n\n<p>The following defines the <code>draw()<\/code> method on the <code>p2<\/code> object.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">p2.draw = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">\"I can draw.\"<\/span>;\n};\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The JavaScript engine adds the <code>draw()<\/code> method\u00a0to the <code>p2<\/code> object, not the <code>Person.prototype<\/code> object:<\/p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><a href=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/01\/JS-prototype-object-with-method.svg\"><img decoding=\"async\" src=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/01\/JS-prototype-object-with-method.svg\" alt=\"JS prototype - object with method\" class=\"wp-image-89293\"\/><\/a><\/figure><\/div>\n\n\n<p>It means that you can call the <code>draw()<\/code> method on the <code>p2<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">p2<\/span><span class=\"hljs-selector-class\">.draw<\/span>();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>But you cannot call the <code>draw()<\/code> method on the <code>p1<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">p1<\/span><span class=\"hljs-selector-class\">.draw<\/span>()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-18\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">TypeError<\/span>: p1.draw is not a <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-18\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>When you define a method in an object, the method is only available to that object. It cannot be shared with other objects by default.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Getting prototype linkage<\/h2>\n\n\n\n<p>The <code>__proto__<\/code> is pronounced as dunder proto. The <code>__proto__<\/code> is an <a href=\"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/\">accessor property<\/a> of the <code>Object.prototype<\/code> object. It&nbsp;exposes the internal prototype linkage ( <code>[[Prototype]])<\/code> of an object through which it is accessed.<\/p>\n\n\n\n<p>The <code>__proto__ <\/code>has been standardized in <a href=\"https:\/\/www.javascripttutorial.net\/es6\/\">ES6<\/a> to ensure compatibility for web browsers. However, it may be deprecated in favor of <code>Object.getPrototypeOf()<\/code> in the future. Therefore, you should never use the <code>__proto__<\/code>&nbsp;in&nbsp;your production code.<\/p>\n\n\n\n<p>The&nbsp; <code>p1.__proto__<\/code> exposes the <code>[[Prototype]]<\/code> that references the <code>Person.prototype<\/code> object. <\/p>\n\n\n\n<p>Similarly, <code>p2.__proto__<\/code> also references the same object as <code>p1.__proto__:<\/code><\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-19\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(p1.__proto__ === Person.prototype); <span class=\"hljs-comment\">\/\/ true<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(p1.__proto__ === p2.__proto__); <span class=\"hljs-comment\">\/\/ true<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-19\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>As mentioned earlier, you should use the <code>Object.getPrototypeOf()<\/code> method instead of the <code>__proto__<\/code>. The <code>Object.getPrototypeOf()<\/code> method returns the prototype of a specified object.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-20\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(p1.__proto__ === <span class=\"hljs-built_in\">Object<\/span>.getPrototypeOf(p1)); <span class=\"hljs-comment\">\/\/ true<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-20\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Another popular way to get the prototype linkage is when the <code>Object.getPrototypeOf()<\/code> method is not available is via the <code>constructor<\/code> property as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-21\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">p1<\/span><span class=\"hljs-selector-class\">.constructor<\/span><span class=\"hljs-selector-class\">.prototype<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-21\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>p1.constructor<\/code> returns <code>Person<\/code>, therefore, <code>p1.constructor.prototype<\/code> returns the prototype&nbsp;object.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Shadowing<\/h2>\n\n\n\n<p>See the following method call:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-22\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">console<\/span><span class=\"hljs-selector-class\">.log<\/span>(<span class=\"hljs-selector-tag\">p1<\/span><span class=\"hljs-selector-class\">.greet<\/span>());<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-22\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>p1<\/code> object doesn&#8217;t have the <code>greet()<\/code> method defined, therefore JavaScript goes up to the prototype chain to find it. In this case, it can find the method in the <code>Person.prototype<\/code> object.<\/p>\n\n\n\n<p>Let&#8217;s add a new method to the object <code>p1<\/code> with the same name as the method in the <code>Person.prototype<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-23\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">p1.greet = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Hello'<\/span>);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-23\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>And call the <code>greet()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-24\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">console<\/span><span class=\"hljs-selector-class\">.log<\/span>(<span class=\"hljs-selector-tag\">p1<\/span><span class=\"hljs-selector-class\">.greet<\/span>());<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-24\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Because the <code>p1<\/code> object has the <code>greet()<\/code> method, JavaScript just executes it immediately without looking it up in the prototype chain.<\/p>\n\n\n\n<p>This is an example of shadowing. The <code>greet()<\/code> method of the <code>p1<\/code> object shadows the <code>greet()<\/code> method of the <code>prototype<\/code> object which the <code>p1<\/code> object references.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>The <code>Object()<\/code> function has a property called <code>prototype<\/code> that references a <code>Object.prototype<\/code> object.<\/li><li>The <code>Object.prototype<\/code> object has all properties and methods which are available in all objects such as <code>toString()<\/code> and <code>valueOf()<\/code>.<\/li><li>The <code>Object.prototype<\/code> object has the <code>constructor<\/code> property that references the <code>Object<\/code> function.<\/li><li>Every function has a <code>prototype<\/code> object. This prototype object references the <code>Object.prototype<\/code> object via <code>[[prototype]]<\/code> linkage or <code>__proto__<\/code> property.<\/li><li>The prototype chain allows one object to use the methods and properties of its <code>prototype<\/code> objects via the <code>[[prototype]]<\/code> linkages.<\/li><li>The <code>Object.getPrototypeOf()<\/code> method returns the prototype object of a given object. Do use the <code>Object.getPrototypeOf()<\/code> method instead of <code>__proto__<\/code>.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"622\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-prototype\/\"\n\t\t\t\tdata-post-title=\"JavaScript Prototype\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"622\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-prototype\/\"\n\t\t\t\tdata-post-title=\"JavaScript Prototype\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>This tutorial explains the prototype concept in detail and clears all confusion that you may have regarding the prototype.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":45,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Prototype<\/title>\n<meta name=\"description\" content=\"This tutorial explains the JavaScript prototype concept in detail and clears all confusions that you may have regarding prototype in JavaScript.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-prototype\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Prototype\" \/>\n<meta property=\"og:description\" content=\"This tutorial explains the JavaScript prototype concept in detail and clears all confusions that you may have regarding prototype in JavaScript.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-prototype\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-08-18T00:22:14+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype.png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"10 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-prototype\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-prototype\/\",\"name\":\"JavaScript Prototype\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2016-09-12T06:31:46+00:00\",\"dateModified\":\"2022-08-18T00:22:14+00:00\",\"description\":\"This tutorial explains the JavaScript prototype concept in detail and clears all confusions that you may have regarding prototype in JavaScript.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-prototype\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-prototype\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-prototype\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Prototype\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Prototype","description":"This tutorial explains the JavaScript prototype concept in detail and clears all confusions that you may have regarding prototype in JavaScript.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-prototype\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Prototype","og_description":"This tutorial explains the JavaScript prototype concept in detail and clears all confusions that you may have regarding prototype in JavaScript.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-prototype\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-08-18T00:22:14+00:00","og_image":[{"url":"https:\/\/www.javascripttutorial.net\/wp-content\/uploads\/2022\/08\/JavaScript-Prototype.png"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"10 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-prototype\/","url":"https:\/\/www.javascripttutorial.net\/javascript-prototype\/","name":"JavaScript Prototype","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2016-09-12T06:31:46+00:00","dateModified":"2022-08-18T00:22:14+00:00","description":"This tutorial explains the JavaScript prototype concept in detail and clears all confusions that you may have regarding prototype in JavaScript.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-prototype\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-prototype\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-prototype\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript Prototype"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/622"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=622"}],"version-history":[{"count":5,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/622\/revisions"}],"predecessor-version":[{"id":90295,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/622\/revisions\/90295"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=622"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
{"id":86774,"date":"2020-04-26T03:26:52","date_gmt":"2020-04-26T10:26:52","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=86774"},"modified":"2022-03-04T23:48:38","modified_gmt":"2022-03-05T07:48:38","slug":"javascript-optional-chaining-operator","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/","title":{"rendered":"JavaScript Optional Chaining Operator"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the optional chaining operator (<code>?.<\/code>) that simplifies the way to access values through connected objects.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the JavaScript optional chaining operator<\/h2>\n\n\n\n<p>The optional chaining operator (<code>?.<\/code>) allows you to access the value of a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-object-properties\/\">property<\/a> located deep within a chain of <a href=\"https:\/\/www.javascripttutorial.net\/javascript-objects\/\">objects<\/a> without explicitly checking if each reference in the chain is <code>null<\/code> or <code>undefined<\/code>.<\/p>\n\n\n\n<p>If one of the references in the chain is <code>null<\/code> or <code>undefined<\/code>, the optional chaining operator (<code>?.<\/code>) will short circuit and return <code>undefined<\/code>.<\/p>\n\n\n\n<p>Suppose that you have a function that returns a <code>user<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">getUser<\/span>(<span class=\"hljs-params\">id<\/span>) <\/span>{\n\n    <span class=\"hljs-keyword\">if<\/span>(id &lt;= <span class=\"hljs-number\">0<\/span>) {\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">null<\/span>;\n    }\n\n    <span class=\"hljs-comment\">\/\/ get the user from database<\/span>\n    <span class=\"hljs-comment\">\/\/ and return null if id does not exist<\/span>\n    <span class=\"hljs-comment\">\/\/ ...<\/span>\n    \n    <span class=\"hljs-comment\">\/\/ if user was found, return the user<\/span>\n    <span class=\"hljs-keyword\">return<\/span> {\n        <span class=\"hljs-attr\">id<\/span>: id,\n        <span class=\"hljs-attr\">username<\/span>: <span class=\"hljs-string\">'admin'<\/span>,\n        <span class=\"hljs-attr\">profile<\/span>: {\n            <span class=\"hljs-attr\">avatar<\/span>: <span class=\"hljs-string\">'\/avatar.png'<\/span>,\n            <span class=\"hljs-attr\">language<\/span>: <span class=\"hljs-string\">'English'<\/span>\n        }\n    }\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following uses the <code>getUser()<\/code> function to access the user profile:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> user = getUser(<span class=\"hljs-number\">1<\/span>);\n<span class=\"hljs-keyword\">let<\/span> profile = user.profile;\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, if you pass the <code>id<\/code> that is less than or equal to zero or the <code>id<\/code> doesn&#8217;t exist in the database, the <code>getUser()<\/code> function will return <code>null<\/code>.<\/p>\n\n\n\n<p>Therefore, before accessing the <code>avatar<\/code> property, you need to check if the <code>user<\/code> is not <code>null<\/code> using the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-logical-operators\/\">logical operator<\/a> AND:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> user = getUser(<span class=\"hljs-number\">2<\/span>);\n<span class=\"hljs-keyword\">let<\/span> profile = user &amp;&amp; user.profile;\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we confirm that the <code>user<\/code> is not <code>null<\/code> or <code>undefined<\/code> before accessing the value of <code>user.profile<\/code> property. It prevents the error that would occur if you simply access the <code>user.profile<\/code> directly without checking the user first.<\/p>\n\n\n\n<p>ES2020 introduced the optional chaining operator denoted by the question mark followed by a dot:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">?.<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To access a property of an object using the optional chaining operator, you use one of the following:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">objectName ?. propertyName\nobjectName ?. &#91;expression]\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The optional chaining operator implicitly checks if the <code>user<\/code> is not <code>null<\/code> or <code>undefined<\/code> before attempting to access the <code>user.profile<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> user = getUser(<span class=\"hljs-number\">2<\/span>);\n<span class=\"hljs-keyword\">let<\/span> profile = user ?. profile;\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, if the <code>user<\/code> is <code>null<\/code> or <code>undefined<\/code>, the optional chaining operator (<code>?.<\/code>) immediately returns <code>undefined<\/code>.<\/p>\n\n\n\n<p>Technically, it is equivalent to the following:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> user = getUser(<span class=\"hljs-number\">2<\/span>);\n<span class=\"hljs-keyword\">let<\/span> profile = (user !== <span class=\"hljs-literal\">null<\/span> || user !== <span class=\"hljs-literal\">undefined<\/span>)\n            ? user.profile\n            : <span class=\"hljs-literal\">undefined<\/span>;\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Stacking the optional chaining operator<\/h3>\n\n\n\n<p>In case the <code>user<\/code> object returned by the <code>getUser()<\/code> does not have the <code>profile<\/code> property. Trying to access the <code>avatar<\/code> without checking the <code>user.profile<\/code> first will result in an error.<\/p>\n\n\n\n<p>To avoid the error, you can use the optional chaining operator multiple times like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> user = getUser(<span class=\"hljs-number\">-1<\/span>);\n<span class=\"hljs-keyword\">let<\/span> avatar = user ?. profile ?. avatar;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this case, the <code>avatar<\/code> is <code>undefined<\/code>.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Combining with the nullish coalescing operator<\/h3>\n\n\n\n<p>If you want to assign a default profile to the <code>user<\/code>, you can combine the optional chaining operator (<code>?.<\/code>) with the nullish coalescing operator (<code>??<\/code>) as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> defaultProfile =  { <span class=\"hljs-attr\">default<\/span>: <span class=\"hljs-string\">'\/default.png'<\/span>, <span class=\"hljs-attr\">language<\/span>: <span class=\"hljs-string\">'English'<\/span>};\n\n<span class=\"hljs-keyword\">let<\/span> user = getUser(<span class=\"hljs-number\">2<\/span>);\n<span class=\"hljs-keyword\">let<\/span> profile = user ?. profile ?? defaultProfile;\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, if the <code>user.profile<\/code> is <code>null<\/code> or <code>undefined<\/code>, the profile will take the <code>defaultProfile<\/code> due to the nullish coalescing operator:<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Using optional chaining operator with function calls<\/h2>\n\n\n\n<p>Suppose that you have a file API as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> file = {\n    read() {\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">'file content'<\/span>;\n    },\n    write(content) {\n        <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">`Writing <span class=\"hljs-subst\">${content}<\/span> to file...`<\/span>);\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">true<\/span>;\n    }\n};<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This example calls the <code>read()<\/code> method of the <code>file<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> data = file.read();\n<span class=\"hljs-built_in\">console<\/span>.log(data);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you call a method that doesn&#8217;t exist in the <code>file<\/code> object, you&#8217;ll get a <code>TypeError<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> compressedData = file.compress();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">Uncaught <span class=\"hljs-built_in\">TypeError<\/span>: file.compress is not a <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, if you use the optional chaining operator with the method call, the expression will return <code>undefined<\/code> instead of throwing an error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> compressedData = file.compress?.();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>compressedData<\/code> is now <code>undefined<\/code>.<\/p>\n\n\n\n<p>This is useful when you use an API in which a method might be not available for some reason e.g., a specific browser or device.<\/p>\n\n\n\n<p>The following illustrates the syntax for using the optional chaining operator with a function or method call:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">functionName ?. (args)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The optional chaining operator (<code>?.<\/code>) is also helpful if you have a function with an optional <a href=\"https:\/\/www.javascripttutorial.net\/javascript-callback\/\">callback<\/a>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">getUser<\/span>(<span class=\"hljs-params\">id, callback<\/span>) <\/span>{\n    <span class=\"hljs-comment\">\/\/ get user<\/span>\n    <span class=\"hljs-comment\">\/\/ ...<\/span>\n\n    <span class=\"hljs-keyword\">let<\/span> user = {\n        <span class=\"hljs-attr\">id<\/span>: id,\n        <span class=\"hljs-attr\">username<\/span>: <span class=\"hljs-string\">'admin'<\/span>\n    };\n\n    <span class=\"hljs-comment\">\/\/ test if the callback exists<\/span>\n    <span class=\"hljs-keyword\">if<\/span> ( callback ) {\n        callback(user);\n    }\n\n    <span class=\"hljs-keyword\">return<\/span> user;\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>By using the optional chaining operator, you can skip the test if the callback exists:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">getUser<\/span>(<span class=\"hljs-params\">id, callback<\/span>) <\/span>{\n    <span class=\"hljs-comment\">\/\/ get user<\/span>\n    <span class=\"hljs-comment\">\/\/ ...<\/span>\n\n    <span class=\"hljs-keyword\">let<\/span> user = {\n        <span class=\"hljs-attr\">id<\/span>: id,\n        <span class=\"hljs-attr\">username<\/span>: <span class=\"hljs-string\">'admin'<\/span>\n    };\n\n    <span class=\"hljs-comment\">\/\/ test if the callback exists<\/span>\n    callback ?. (user);\n\n\n    <span class=\"hljs-keyword\">return<\/span> user;\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>The optional chaining operator (<code>?.<\/code>) returns <code>undefined<\/code> instead of throwing an error if you attempt to access a property of an <code>null<\/code> or <code>undefined<\/code> object: <code>obj ?. property<\/code>. <\/li><li>Combine the optional chaining operator (<code>?.<\/code>) with the nullish coalescing operator (<code>??<\/code>) to assign a default value. <\/li><li>Use <code>functionName ?. (args)<\/code> to avoid explicitly checking if the <code>functionName<\/code> is not <code>undefined<\/code> or <code>null<\/code> before invoking it. <\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"86774\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/\"\n\t\t\t\tdata-post-title=\"JavaScript Optional Chaining Operator\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"86774\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/\"\n\t\t\t\tdata-post-title=\"JavaScript Optional Chaining Operator\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn about the optional chaining operator (?.) that simplifies the way to access values through connected objects<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":60,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Optional Chaining Operator (?.)<\/title>\n<meta name=\"description\" content=\"In this tutorial, you&#039;ll learn about the optional chaining operator (?.) that simplifies the way to access values through connected objects\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Optional Chaining Operator (?.)\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you&#039;ll learn about the optional chaining operator (?.) that simplifies the way to access values through connected objects\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-03-05T07:48:38+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/\",\"name\":\"JavaScript Optional Chaining Operator (?.)\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-04-26T10:26:52+00:00\",\"dateModified\":\"2022-03-05T07:48:38+00:00\",\"description\":\"In this tutorial, you'll learn about the optional chaining operator (?.) that simplifies the way to access values through connected objects\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Optional Chaining Operator\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Optional Chaining Operator (?.)","description":"In this tutorial, you'll learn about the optional chaining operator (?.) that simplifies the way to access values through connected objects","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Optional Chaining Operator (?.)","og_description":"In this tutorial, you'll learn about the optional chaining operator (?.) that simplifies the way to access values through connected objects","og_url":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-03-05T07:48:38+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/","url":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/","name":"JavaScript Optional Chaining Operator (?.)","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-04-26T10:26:52+00:00","dateModified":"2022-03-05T07:48:38+00:00","description":"In this tutorial, you'll learn about the optional chaining operator (?.) that simplifies the way to access values through connected objects","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript Optional Chaining Operator"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86774"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=86774"}],"version-history":[{"count":5,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86774\/revisions"}],"predecessor-version":[{"id":90173,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86774\/revisions\/90173"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=86774"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
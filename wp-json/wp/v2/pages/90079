{"id":90079,"date":"2022-02-18T17:16:12","date_gmt":"2022-02-19T01:16:12","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=90079"},"modified":"2022-02-18T17:16:52","modified_gmt":"2022-02-19T01:16:52","slug":"javascript-regex-lookbehind","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/","title":{"rendered":"JavaScript Regex Lookbehind"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use JavaScript regex lookbehind in regular expressions to match <code>X<\/code> if it is preceded by <code>Y<\/code>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"introduction-to-the-javascript-regex-lookbehind\">Introduction to the JavaScript regex lookbehind<\/h2>\n\n\n\n<p>In <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/javascript-regular-expressions\/\">regular expressions<\/a>, a lookbehind matches an element if there is another specific element before it. A lookbehind has the following syntax:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">(?&lt;=Y)X<\/code><\/span><\/pre>\n\n\n<p>In this syntax, the pattern match <code>X<\/code> if there is <code>Y<\/code> before it. <\/p>\n\n\n\n<p>For example, suppose you want to match the number <code>900<\/code> not the number <code>1<\/code> in the following string:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-string\">'1 computer costs $900'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To do it, you use a lookahead in the regular expression as follows:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">\/(?&lt;=\\$)\\d+\/<\/code><\/span><\/pre>\n\n\n<p>In this regular expression:<\/p>\n\n\n\n<ul><li>The <code>(?&lt;=\\$)<\/code> matches an element if there is a literal string <code>$<\/code> before it.  Because <code>$<\/code> is a special character in the regex, we need to use the backslash <code>\\<\/code> to escape it. By doing this, the regex engine treats <code>\\$<\/code> as a literal character <code>$<\/code>.<\/li><li>The <code>\\d+<\/code> matches one or more digits.<\/li><\/ul>\n\n\n\n<p>The following example illustrates how to use a lookbehind in a regular expression to match a number that has the <code>$<\/code> sign before it:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> s = <span class=\"hljs-string\">'1 computer costs $900'<\/span>;\r\n<span class=\"hljs-keyword\">const<\/span> pattern = <span class=\"hljs-regexp\">\/(?&lt;=\\$)\\d+\/<\/span>;\r\n\r\n<span class=\"hljs-keyword\">const<\/span> match = s.match(pattern);\r\n<span class=\"hljs-built_in\">console<\/span>.log(match);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91; '<span class=\"hljs-number\">900<\/span>', index: <span class=\"hljs-number\">18<\/span>, input: '<span class=\"hljs-number\">1<\/span> computer costs $<span class=\"hljs-number\">900<\/span>', groups: undefined ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\" id=\"negative-lookbehind\">Negative lookbehind<\/h2>\n\n\n\n<p>To negate a lookbehind, you use a negative lookbehind with the following syntax:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">(?&lt;!Y)X<\/code><\/span><\/pre>\n\n\n<p>In this syntax, the regex engine matches <code>X<\/code> if there is <strong>no<\/strong> <code>Y<\/code> before it. The following example uses a regular expression with a negative lookbehind to match a number that doesn&#8217;t have the <code>$<\/code> letter before it:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> s = <span class=\"hljs-string\">'1 computer costs $900'<\/span>;\r\n<span class=\"hljs-keyword\">const<\/span> pattern = <span class=\"hljs-regexp\">\/(?&lt;!\\$)\\d+\/<\/span>;\r\n\r\n<span class=\"hljs-keyword\">const<\/span> match = s.match(pattern);\r\n<span class=\"hljs-built_in\">console<\/span>.log(match);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">1<\/code><\/span><\/pre>\n\n\n<h2 class=\"wp-block-heading\" id=\"summary\">Summary<\/h2>\n\n\n\n<ul><li>A lookbehind <code>(?&lt;!Y)X<\/code> matches <code>X<\/code> only if is is preceded by <code>Y<\/code>.<\/li><li>A negative lookbehind <code>(?&lt;!Y)X<\/code> matches <code>X<\/code> only if it is not preceded by <code>Y<\/code>.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"90079\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/\"\n\t\t\t\tdata-post-title=\"JavaScript Regex Lookbehind\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"90079\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/\"\n\t\t\t\tdata-post-title=\"JavaScript Regex Lookbehind\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to use JavaScript regex lookbehind in regular expressions to match X if it is preceded by Y.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":90024,"menu_order":12,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Regex Lookbehind<\/title>\n<meta name=\"description\" content=\"In this tutorial, you&#039;ll learn how to use JavaScript regex lookbehind in regular expressions to match X if it is preceded by Y.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Regex Lookbehind\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you&#039;ll learn how to use JavaScript regex lookbehind in regular expressions to match X if it is preceded by Y.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-19T01:16:52+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/\",\"name\":\"JavaScript Regex Lookbehind\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2022-02-19T01:16:12+00:00\",\"dateModified\":\"2022-02-19T01:16:52+00:00\",\"description\":\"In this tutorial, you'll learn how to use JavaScript regex lookbehind in regular expressions to match X if it is preceded by Y.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Javascript Regex\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Regex Lookbehind\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Regex Lookbehind","description":"In this tutorial, you'll learn how to use JavaScript regex lookbehind in regular expressions to match X if it is preceded by Y.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Regex Lookbehind","og_description":"In this tutorial, you'll learn how to use JavaScript regex lookbehind in regular expressions to match X if it is preceded by Y.","og_url":"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-02-19T01:16:52+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/","url":"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/","name":"JavaScript Regex Lookbehind","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2022-02-19T01:16:12+00:00","dateModified":"2022-02-19T01:16:52+00:00","description":"In this tutorial, you'll learn how to use JavaScript regex lookbehind in regular expressions to match X if it is preceded by Y.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/lookbehind\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"Javascript Regex","item":"https:\/\/https://jsprifix.netlify.app/\/javascript-regex\/"},{"@type":"ListItem","position":3,"name":"JavaScript Regex Lookbehind"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/90079"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=90079"}],"version-history":[{"count":3,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/90079\/revisions"}],"predecessor-version":[{"id":90083,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/90079\/revisions\/90083"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/90024"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=90079"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
{"id":89111,"date":"2022-01-19T17:00:38","date_gmt":"2022-01-20T01:00:38","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=89111"},"modified":"2023-04-28T06:50:01","modified_gmt":"2023-04-28T13:50:01","slug":"javascript-private-methods","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/","title":{"rendered":"JavaScript Private Methods"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about JavaScript private methods including private instance methods, private static methods, and private getter\/setter.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to JavaScript private methods<\/h2>\n\n\n\n<p>By default, members of a <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class\/\">class<\/a> are public. ES2020 introduced the private members that include <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-private-fields\/\">private fields<\/a> and methods.<\/p>\n\n\n\n<p>To make a public method private, you prefix its name with a hash <code>#<\/code>. JavaScript allows you to define private methods for instance methods, <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-static-method\/\">static methods<\/a>, and <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-getters-and-setters\/\">getter\/setters<\/a>.<\/p>\n\n\n\n<p>The following shows the syntax of defining a private instance method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MyClass<\/span> <\/span>{\n  #privateMethod() {\n    <span class=\"hljs-comment\">\/\/...<\/span>\n  }\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax, the <code>#privateMethod<\/code> is a private instance method. It can only be called inside the <code>MyClass<\/code>. In other words, it cannot be called from outside the class or in the subclasses of the <code>MyClass<\/code>. <\/p>\n\n\n\n<p>To call the <code>#privateMethod<\/code> inside the <code>MyClass<\/code>, you use the <code>this<\/code> keyword as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">this<\/span>.#privateMethod();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following illustrates the syntax of defining a private static method: <\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MyClass<\/span> <\/span>{\n  <span class=\"hljs-keyword\">static<\/span> #privateStaticMethod() {\n    <span class=\"hljs-comment\">\/\/...<\/span>\n  }\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To call the <code>#privateStaticMethod()<\/code> inside the <code>MyClass<\/code>, you use the class name instead of the <code>this<\/code> keyword:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">MyClass.#privateStaticMethod();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following shows the syntax of the private getters\/setters:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MyClass<\/span> <\/span>{\n  #field;\n  <span class=\"hljs-keyword\">get<\/span> #myField() {\n      <span class=\"hljs-keyword\">return<\/span> #field;\n  }\n  <span class=\"hljs-keyword\">set<\/span> #myField(value){\n      #field = value;\n  }\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>#myField<\/code> is the private getter and setter that provide access to the private field <code>#field<\/code>.<\/p>\n\n\n\n<p>In practice, you use private methods to minimize the number of methods that the object exposes. <\/p>\n\n\n\n<p>As a rule of thumb, you should make all class methods private by default first. And then you make a method public whenever the object needs to use that method to interact with other objects.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript private method examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using private methods<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Private instance method example<\/h3>\n\n\n\n<p>The following illustrates how to define the <code>Person<\/code> class with private instance methods:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Person<\/span> <\/span>{\n  #firstName;\n  #lastName;\n  <span class=\"hljs-keyword\">constructor<\/span>(firstName, lastName) {\n    <span class=\"hljs-keyword\">this<\/span>.#firstName = firstName;\n    <span class=\"hljs-keyword\">this<\/span>.#lastName = lastName;\n  }\n  getFullName(format = <span class=\"hljs-literal\">true<\/span>) {\n    <span class=\"hljs-keyword\">return<\/span> format ? <span class=\"hljs-keyword\">this<\/span>.#firstLast() : <span class=\"hljs-keyword\">this<\/span>.#lastFirst();\n  }\n\n  #firstLast() {\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this<\/span>.#firstName}<\/span> <span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this<\/span>.#lastName}<\/span>`<\/span>;\n  }\n  #lastFirst() {\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this<\/span>.#lastName}<\/span>, <span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this<\/span>.#firstName}<\/span>`<\/span>;\n  }\n}\n\n<span class=\"hljs-keyword\">let<\/span> person = <span class=\"hljs-keyword\">new<\/span> Person(<span class=\"hljs-string\">'John'<\/span>, <span class=\"hljs-string\">'Doe'<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(person.getFullName());<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">John Doe<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example: <\/p>\n\n\n\n<p>First, define two private fields <code>#firstName<\/code> and <code>#lastName<\/code> in the <code>Person<\/code> class body.<\/p>\n\n\n\n<p>Second, define the private methods  <code>#firstLast()<\/code> and <code>#lastFirst()<\/code>. These methods return the full name in different formats.<\/p>\n\n\n\n<p>Third, define the public instance method <code>getFullName()<\/code> that returns a person&#8217;s full name. The <code>getFullName()<\/code> method calls the private method <code>#firstLast()<\/code> and <code>#lastFirst()<\/code> to return the full name.<\/p>\n\n\n\n<p>Finally, create a new <code>person<\/code> object and output the full name to the console.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">2) Private static method example<\/h3>\n\n\n\n<p>The following adds the <code>#validate()<\/code> private static method to the <code>Person<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Person<\/span> <\/span>{\n  #firstName;\n  #lastName;\n  <span class=\"hljs-keyword\">constructor<\/span>(firstName, lastName) {\n    <span class=\"hljs-keyword\">this<\/span>.#firstName = Person.#validate(firstName);\n    <span class=\"hljs-keyword\">this<\/span>.#lastName = Person.#validate(lastName);\n  }\n  getFullName(format = <span class=\"hljs-literal\">true<\/span>) {\n    <span class=\"hljs-keyword\">return<\/span> format ? <span class=\"hljs-keyword\">this<\/span>.#firstLast() : <span class=\"hljs-keyword\">this<\/span>.#lastFirst();\n  }\n  <span class=\"hljs-keyword\">static<\/span> #validate(name) {\n    <span class=\"hljs-keyword\">if<\/span> (<span class=\"hljs-keyword\">typeof<\/span> name === <span class=\"hljs-string\">'string'<\/span>) {\n      <span class=\"hljs-keyword\">let<\/span> str = name.trim();\n      <span class=\"hljs-keyword\">if<\/span> (str.length &gt;= <span class=\"hljs-number\">3<\/span>) {\n        <span class=\"hljs-keyword\">return<\/span> str;\n      }\n    }\n    <span class=\"hljs-keyword\">throw<\/span> <span class=\"hljs-string\">'The name must be a string with at least 3 characters'<\/span>;\n  }\n\n  #firstLast() {\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this<\/span>.#firstName}<\/span> <span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this<\/span>.#lastName}<\/span>`<\/span>;\n  }\n  #lastFirst() {\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this<\/span>.#lastName}<\/span>, <span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this<\/span>.#firstName}<\/span>`<\/span>;\n  }\n}\n\n<span class=\"hljs-keyword\">let<\/span> person = <span class=\"hljs-keyword\">new<\/span> Person(<span class=\"hljs-string\">'John'<\/span>, <span class=\"hljs-string\">'Doe'<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(person.getFullName());<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, define the static method <code>#validate()<\/code> that returns a value if it is a string with at least three characters. The method raises an exception otherwise.<\/p>\n\n\n\n<p>Second, call the <code>#validate()<\/code> private static method in the constructor to validate the <code>firstName<\/code> and <code>lastName<\/code> arguments before assigning them to the corresponding private attributes.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Summary<\/h3>\n\n\n\n<ul>\n<li>Prefix a method name with the <code>#<\/code> to make it private.<\/li>\n\n\n\n<li>Private methods can be called inside the class, not from outside of the class or in the subclasses.<\/li>\n<\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"89111\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/\"\n\t\t\t\tdata-post-title=\"JavaScript Private Methods\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"89111\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/\"\n\t\t\t\tdata-post-title=\"JavaScript Private Methods\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn about JavaScript private methods including private instance methods, private static methods, and private getter\/setter. Introduction to JavaScript private methods By default, members of a class are public. ES2020 introduced the private members that include private fields and methods. To make a public method private, you prefix its name with [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":72,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Private Methods<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Private Methods\" \/>\n<meta property=\"og:description\" content=\"Summary: in this tutorial, you&#8217;ll learn about JavaScript private methods including private instance methods, private static methods, and private getter\/setter. Introduction to JavaScript private methods By default, members of a class are public. ES2020 introduced the private members that include private fields and methods. To make a public method private, you prefix its name with [&hellip;]\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2023-04-28T13:50:01+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/\",\"name\":\"JavaScript Private Methods\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2022-01-20T01:00:38+00:00\",\"dateModified\":\"2023-04-28T13:50:01+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Private Methods\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Private Methods","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Private Methods","og_description":"Summary: in this tutorial, you&#8217;ll learn about JavaScript private methods including private instance methods, private static methods, and private getter\/setter. Introduction to JavaScript private methods By default, members of a class are public. ES2020 introduced the private members that include private fields and methods. To make a public method private, you prefix its name with [&hellip;]","og_url":"https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/","og_site_name":"PriFix Tutorial","article_modified_time":"2023-04-28T13:50:01+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/","url":"https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/","name":"JavaScript Private Methods","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2022-01-20T01:00:38+00:00","dateModified":"2023-04-28T13:50:01+00:00","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-private-methods\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":3,"name":"JavaScript Private Methods"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/89111"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=89111"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/89111\/revisions"}],"predecessor-version":[{"id":90424,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/89111\/revisions\/90424"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=89111"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
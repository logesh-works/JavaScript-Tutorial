{"id":88456,"date":"2021-06-01T20:50:22","date_gmt":"2021-06-02T03:50:22","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=88456"},"modified":"2022-02-13T06:52:46","modified_gmt":"2022-02-13T14:52:46","slug":"javascript-promise-any","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/","title":{"rendered":"JavaScript Promise.any()"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the JavaScript <code>Promise.any()<\/code> method to compose promises.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"introduction-to-javascript-promise-any-method\">Introduction to JavaScript Promise.any() method<\/h2>\n\n\n\n<p>The <code>Promise.any()<\/code> method accepts a list of <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-promises\/\">Promise<\/a> objects as an <a href=\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-asynchronous-iterators\/\">iterable object<\/a>: <\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">Promise<\/span>.any(iterable);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If one of the promises in the iterable object is fulfilled, the <code>Promise.any()<\/code> returns a single promise that resolves to a value which is the result of the fulfilled promise:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/02\/JavaScript-Promise.any-Fulfilled.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/02\/JavaScript-Promise.any-Fulfilled.svg\" alt=\"\" class=\"wp-image-89560\"\/><\/a><\/figure>\n\n\n\n<p>In this diagram:<\/p>\n\n\n\n<ul><li>The <code>promise1<\/code> resolves to a value <code>v1<\/code> at <code>t1<\/code>.<\/li><li>The <code>promise2<\/code> resolves to a value <code>v2<\/code> at <code>t2<\/code>.<\/li><li>The <code>Promise.any()<\/code> returns a promise that resolves to a value <code>v1<\/code>, which is the result of the <code>promise1<\/code>,  at <code>t1<\/code> <\/li><\/ul>\n\n\n\n<p>The <code>Promise.any()<\/code> returns a promise that is fulfilled with any first fulfilled promise even if some promises in the iterable object are rejected:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/02\/JavaScript-Promise.any-rejected.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/02\/JavaScript-Promise.any-rejected.svg\" alt=\"\" class=\"wp-image-89561\"\/><\/a><\/figure>\n\n\n\n<p>In this diagram:<\/p>\n\n\n\n<ul><li>The <code>promise1<\/code> is rejected with an <code>error<\/code> at <code>t1<\/code>.<\/li><li>The <code>promise2<\/code> is fulfilled to value <code>v2<\/code> at <code>t2<\/code>.<\/li><li>The <code>Promise.any()<\/code> returns the a promise that resolves to a value <code>v2<\/code> which is the result of the <code>promise2<\/code>. Note that the <code>Promise.any()<\/code> method ignores the rejected promise (<code>promise1<\/code>).<\/li><\/ul>\n\n\n\n<p>If all promises in the iterable object are rejected or if the iterable object is empty, the <code>Promise.any()<\/code> return a promise that rejects with an <code>AggregateError<\/code> containing all the rejection reasons. The <code>AggregateError<\/code> is a subclass of <code>Error<\/code>.<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/02\/JavaScript-Promise.any-all-rejected.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/02\/JavaScript-Promise.any-all-rejected.svg\" alt=\"\" class=\"wp-image-89562\"\/><\/a><\/figure>\n\n\n\n<p>In this diagram:<\/p>\n\n\n\n<ul><li>The <code>promise1<\/code> is rejected for an <code>error1<\/code> at <code>t1<\/code>.<\/li><li>The <code>promise2<\/code> is rejected for an <code>error2<\/code> at <code>t2<\/code>.<\/li><li>The <code>Promise.any()<\/code> returns a promise that is rejected at <code>t2<\/code> with an <code>AggregateError<\/code> containing the <code>error1<\/code> and <code>error2<\/code> of all the rejected promises.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"javascript-promise-any-examples\">JavaScript Promise.any() examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the <code>Promise.any()<\/code> method.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\" id=\"1-all-promises-fulfilled-example\">1) All promises fulfilled example<\/h3>\n\n\n\n<p>The following example demonstrates the <code>Promise.any()<\/code> method with all promises fulfilled:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> p1 = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\r\n  setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\r\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Promise 1 fulfilled'<\/span>);\r\n    resolve(<span class=\"hljs-number\">1<\/span>);\r\n  }, <span class=\"hljs-number\">1000<\/span>);\r\n});\r\n\r\n<span class=\"hljs-keyword\">const<\/span> p2 = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\r\n  setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\r\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Promise 2 fulfilled'<\/span>);\r\n    resolve(<span class=\"hljs-number\">2<\/span>);\r\n  }, <span class=\"hljs-number\">2000<\/span>);\r\n});\r\n\r\n<span class=\"hljs-keyword\">const<\/span> p = <span class=\"hljs-built_in\">Promise<\/span>.any(&#91;p1, p2]);\r\np.then(<span class=\"hljs-function\">(<span class=\"hljs-params\">value<\/span>) =&gt;<\/span> {\r\n  <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Returned Promise'<\/span>);\r\n  <span class=\"hljs-built_in\">console<\/span>.log(value);\r\n});\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">Promise<\/span> <span class=\"hljs-number\">1<\/span> fulfilled\r\nReturned <span class=\"hljs-built_in\">Promise<\/span>\r\n<span class=\"hljs-number\">1<\/span>\r\n<span class=\"hljs-built_in\">Promise<\/span> <span class=\"hljs-number\">2<\/span> fulfilled<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>First, create a new promise <code>p1<\/code> that will resolve to a value <code>1<\/code> after one second.<\/li><li>Second, create a new promise <code>p2<\/code> that will resolve to a value <code>2<\/code> after two seconds.<\/li><li>Third, use the <code>Promise.any()<\/code> method that uses two promises <code>p1<\/code> and <code>p2<\/code>.  The <code>Promise.any()<\/code> returns a promise <code>p<\/code> that will resolve to the value <code>1<\/code> of the first fulfilled promise (<code>p1<\/code>) after one second.<\/li><\/ul>\n\n\n\n<h3 class=\"wp-block-heading\" id=\"2-one-promise-rejected-example\">2) One promise rejected example<\/h3>\n\n\n\n<p>The following example uses the <code>Promise.any()<\/code> method with list of promises that has a rejected promise:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> p1 = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\r\n  setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\r\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Promise 1 rejected'<\/span>);\r\n    reject(<span class=\"hljs-string\">'error'<\/span>);\r\n  }, <span class=\"hljs-number\">1000<\/span>);\r\n});\r\n\r\n<span class=\"hljs-keyword\">const<\/span> p2 = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\r\n  setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\r\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Promise 2 fulfilled'<\/span>);\r\n    resolve(<span class=\"hljs-number\">2<\/span>);\r\n  }, <span class=\"hljs-number\">2000<\/span>);\r\n});\r\n\r\n<span class=\"hljs-keyword\">const<\/span> p = <span class=\"hljs-built_in\">Promise<\/span>.any(&#91;p1, p2]);\r\np.then(<span class=\"hljs-function\">(<span class=\"hljs-params\">value<\/span>) =&gt;<\/span> {\r\n  <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Returned Promise'<\/span>);\r\n  <span class=\"hljs-built_in\">console<\/span>.log(value);\r\n});\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">Promise<\/span> <span class=\"hljs-number\">1<\/span> rejected\r\n<span class=\"hljs-built_in\">Promise<\/span> <span class=\"hljs-number\">2<\/span> fulfilled\r\nReturned <span class=\"hljs-built_in\">Promise<\/span>\r\n<span class=\"hljs-number\">2<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>Promise.any()<\/code> ignores the rejected promise. When the <code>p2<\/code> resolves with the value <code>2<\/code>, the <code>Promise.any()<\/code> returns a promise that resolves to the same value of the result of the <code>p2<\/code>.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\" id=\"3-all-promises-rejected-example\">3) All promises rejected example<\/h3>\n\n\n\n<p>The following example demonstrates how to use the <code>Promise.any()<\/code> method with all promises rejected:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> p1 = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\r\n  setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\r\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Promise 1 rejected'<\/span>);\r\n    reject(<span class=\"hljs-string\">'error1'<\/span>);\r\n  }, <span class=\"hljs-number\">1000<\/span>);\r\n});\r\n\r\n<span class=\"hljs-keyword\">const<\/span> p2 = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\r\n  setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\r\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Promise 2 rejected'<\/span>);\r\n    reject(<span class=\"hljs-string\">'error2'<\/span>);\r\n  }, <span class=\"hljs-number\">2000<\/span>);\r\n});\r\n\r\n<span class=\"hljs-keyword\">const<\/span> p = <span class=\"hljs-built_in\">Promise<\/span>.any(&#91;p1, p2]);\r\np.catch(<span class=\"hljs-function\">(<span class=\"hljs-params\">e<\/span>) =&gt;<\/span> {\r\n  <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Returned Promise'<\/span>);\r\n  <span class=\"hljs-built_in\">console<\/span>.log(e, e.errors);\r\n});\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">Promise<\/span> <span class=\"hljs-number\">1<\/span> rejected\r\n<span class=\"hljs-built_in\">Promise<\/span> <span class=\"hljs-number\">2<\/span> rejected\r\nReturned <span class=\"hljs-built_in\">Promise<\/span>\r\n&#91;AggregateError: All promises were rejected] &#91; <span class=\"hljs-string\">'error1'<\/span>, <span class=\"hljs-string\">'error2'<\/span> ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, both <code>p1<\/code> and <code>p2<\/code> were rejected with the string <code>error1<\/code> and <code>error2<\/code>. Therefore, the <code>Promise.any()<\/code> method was rejected with an <code>AggregateError<\/code> object that has the <code>errors<\/code> property containing all the errors of the rejected promises.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"when-to-use-the-javascript-promise-any-method\">When to use the JavaScript Promise.any() method<\/h2>\n\n\n\n<p>In practice, you use the <code>Promise.any()<\/code> to return the first fulfilled promise. Once a promise is fulfilled, the <code>Promise.any()<\/code> method does not wait for other promises to be complete. In other words, the <code>Promise.any()<\/code> short-circuits after a promise is fulfilled.<\/p>\n\n\n\n<p>For example, you have a resource served by two or more content delivery networks (CDN). To dynamically load the first available resource, you can use the <code>Promise.any()<\/code> method.<\/p>\n\n\n\n<p>The following example uses the <code>Promise.any()<\/code> method to fetch two images and displays the first available image.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\" id=\"the-index-html-file\">The index.html file<\/h3>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">&lt;!DOCTYPE html&gt;\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span> <span class=\"hljs-attr\">lang<\/span>=<span class=\"hljs-string\">\"en\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">charset<\/span>=<span class=\"hljs-string\">\"UTF-8\"<\/span> \/&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"viewport\"<\/span> <span class=\"hljs-attr\">content<\/span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"<\/span> \/&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>JavaScript Promise.any() Demo<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span> <span class=\"hljs-attr\">src<\/span>=<span class=\"hljs-string\">\"js\/app.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\" id=\"the-app-js-file\">The app.js file<\/h3>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">getImageBlob<\/span>(<span class=\"hljs-params\">url<\/span>) <\/span>{\r\n  <span class=\"hljs-keyword\">return<\/span> fetch(url).then(<span class=\"hljs-function\">(<span class=\"hljs-params\">response<\/span>) =&gt;<\/span> {\r\n    <span class=\"hljs-keyword\">if<\/span> (!response.ok) {\r\n      <span class=\"hljs-keyword\">throw<\/span> <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Error<\/span>(<span class=\"hljs-string\">`HTTP status: <span class=\"hljs-subst\">${response.status}<\/span>`<\/span>);\r\n    }\r\n    <span class=\"hljs-keyword\">return<\/span> response.blob();\r\n  });\r\n}\r\n\r\n<span class=\"hljs-keyword\">let<\/span> cat = getImageBlob(\r\n  <span class=\"hljs-string\">'https:\/\/upload.wikimedia.org\/wikipedia\/commons\/4\/43\/Siberian_black_tabby_blotched_cat_03.jpg'<\/span>\r\n);\r\n<span class=\"hljs-keyword\">let<\/span> dog = getImageBlob(\r\n  <span class=\"hljs-string\">'https:\/\/upload.wikimedia.org\/wikipedia\/commons\/a\/af\/Golden_retriever_eating_pigs_foot.jpg'<\/span>\r\n);\r\n\r\n<span class=\"hljs-built_in\">Promise<\/span>.any(&#91;cat, dog])\r\n  .then(<span class=\"hljs-function\">(<span class=\"hljs-params\">data<\/span>) =&gt;<\/span> {\r\n    <span class=\"hljs-keyword\">let<\/span> objectURL = URL.createObjectURL(data);\r\n    <span class=\"hljs-keyword\">let<\/span> image = <span class=\"hljs-built_in\">document<\/span>.createElement(<span class=\"hljs-string\">'img'<\/span>);\r\n    image.src = objectURL;\r\n    <span class=\"hljs-built_in\">document<\/span>.body.appendChild(image);\r\n  })\r\n  .catch(<span class=\"hljs-function\">(<span class=\"hljs-params\">e<\/span>) =&gt;<\/span> {\r\n    <span class=\"hljs-built_in\">console<\/span>.log(e.message);\r\n  });\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>First, define the <code>getImageBlob()<\/code> function that uses the <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-fetch-api\/\">fetch API<\/a> to get the image&#8217;s blob from an URL. The <code>getImageBlob()<\/code> returns a <code>Promise<\/code> object that resolves to the image blob.<\/li><li>Second, define two promises that load the images.<\/li><li>Third, show the first available image by using the <code>Promise.any()<\/code> method.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"summary\">Summary<\/h2>\n\n\n\n<ul><li>Use the JavaScript <code>Promise.any()<\/code> method to take a list of promises and return a promise that fulfills first.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"88456\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/\"\n\t\t\t\tdata-post-title=\"JavaScript Promise.any()\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"88456\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/\"\n\t\t\t\tdata-post-title=\"JavaScript Promise.any()\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn about the JavaScript Promise.any() method to return the first Promise that fulfills.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":89,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Promise.any<\/title>\n<meta name=\"description\" content=\"In this tutorial, you&#039;ll learn about the JavaScript Promise.any() method to return the first Promise that fulfills.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Promise.any\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you&#039;ll learn about the JavaScript Promise.any() method to return the first Promise that fulfills.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-13T14:52:46+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/02\/JavaScript-Promise.any-Fulfilled.svg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"5 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/\",\"name\":\"JavaScript Promise.any\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2021-06-02T03:50:22+00:00\",\"dateModified\":\"2022-02-13T14:52:46+00:00\",\"description\":\"In this tutorial, you'll learn about the JavaScript Promise.any() method to return the first Promise that fulfills.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Promise.any()\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Promise.any","description":"In this tutorial, you'll learn about the JavaScript Promise.any() method to return the first Promise that fulfills.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Promise.any","og_description":"In this tutorial, you'll learn about the JavaScript Promise.any() method to return the first Promise that fulfills.","og_url":"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-02-13T14:52:46+00:00","og_image":[{"url":"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/02\/JavaScript-Promise.any-Fulfilled.svg"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"5 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/","url":"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/","name":"JavaScript Promise.any","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2021-06-02T03:50:22+00:00","dateModified":"2022-02-13T14:52:46+00:00","description":"In this tutorial, you'll learn about the JavaScript Promise.any() method to return the first Promise that fulfills.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-promise-any\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":3,"name":"JavaScript Promise.any()"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/88456"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=88456"}],"version-history":[{"count":4,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/88456\/revisions"}],"predecessor-version":[{"id":89565,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/88456\/revisions\/89565"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=88456"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
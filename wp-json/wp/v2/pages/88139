{"id":88139,"date":"2021-01-19T02:03:24","date_gmt":"2021-01-19T10:03:24","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=88139"},"modified":"2022-01-22T00:10:57","modified_gmt":"2022-01-22T08:10:57","slug":"javascript-class-expressions","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/","title":{"rendered":"JavaScript Class Expressions"},"content":{"rendered":"\r\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use JavaScript class expressions to declare new classes.<\/p>\r\n\r\n\r\n\r\n<h2 class=\"wp-block-heading\">Introduction to JavaScript class expressions<\/h2>\r\n\r\n\r\n\r\n<p>Similar to <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-function\/\">functions<\/a>, <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class\/\">classes<\/a> have expression forms. A class expression provides you with an alternative way to define a new class.<\/p>\r\n\r\n\r\n\r\n<p>A class expression doesn&#8217;t require an identifier after the <code>class<\/code> keyword. And you can use a class expression in a <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-variables\/\">variable declaration<\/a> and pass it into a function as an argument.<\/p>\r\n\r\n\r\n\r\n<p>For example, the following defines a class expression:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">let Person = <span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> {\r\n    <span class=\"hljs-title\">constructor<\/span><span class=\"hljs-params\">(name)<\/span> {\r\n        <span class=\"hljs-title\">this<\/span>.<span class=\"hljs-title\">name<\/span> = <span class=\"hljs-title\">name<\/span>;\r\n    }\r\n    <span class=\"hljs-title\">getName<\/span><span class=\"hljs-params\">()<\/span> {\r\n        <span class=\"hljs-title\">return<\/span> <span class=\"hljs-title\">this<\/span>.<span class=\"hljs-title\">name<\/span>;\r\n    }\r\n}<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>How it works.<\/p>\r\n\r\n\r\n\r\n<p>On the left side of the expression is the <code>Person<\/code> variable. It&#8217;s assigned to a class expression.<\/p>\r\n\r\n\r\n\r\n<p>The class expression starts with the keyword <code>class<\/code> followed by the class definition.<\/p>\r\n\r\n\r\n\r\n<p>A class expression may have a name or not. In this example, we have an unnamed class expression. <\/p>\r\n\r\n\r\n\r\n<p>If a class expression has a name, its name can be local to the class body.<\/p>\r\n\r\n\r\n\r\n<p>The following creates an instance of the <code>Person<\/code> class expression. Its syntax is the same as if it were a class declaration.<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">let person = new Person(<span class=\"hljs-string\">'John Doe'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Like a <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class\/\">class declaration<\/a>, the type of a class expression is also a <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-function\/\">function<\/a>:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">console.log(typeof Person); \/\/ function<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Similar to function expressions, class expressions are not <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-hoisting\/\">hoisted<\/a>. It means that you cannot create an instance of the class before defining the class expression.<\/p>\r\n\r\n\r\n\r\n<h2 class=\"wp-block-heading\">First-class citizen<\/h2>\r\n\r\n\r\n\r\n<p><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-functions-are-first-class-citizens\/\">JavaScript classes are first-class citizens<\/a>. It means that you can pass a class into a function, return it from a function, and assign it to a variable.<\/p>\r\n\r\n\r\n\r\n<p>See the following example:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">function factory(aClass) {\r\n    <span class=\"hljs-keyword\">return<\/span> new aClass();\r\n}\r\n\r\nlet greeting = factory(<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> {\r\n    <span class=\"hljs-title\">sayHi<\/span><span class=\"hljs-params\">()<\/span> { <span class=\"hljs-title\">console<\/span>.<span class=\"hljs-title\">log<\/span><span class=\"hljs-params\">(<span class=\"hljs-string\">'Hi'<\/span>)<\/span>; }\r\n});\r\n\r\n<span class=\"hljs-title\">greeting<\/span>.<span class=\"hljs-title\">sayHi<\/span><span class=\"hljs-params\">()<\/span>; \/\/ '<span class=\"hljs-title\">Hi<\/span>'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>How it works.<\/p>\r\n\r\n\r\n\r\n<p>First, define a <code>factory()<\/code> function that takes a class expression as an argument and return the instance of the class:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">function factory(aClass) {\r\n    <span class=\"hljs-keyword\">return<\/span> new aClass();\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Second, pass an unnamed class expression to the factory() function and assign its result to the greeting variable:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">let greeting = factory(<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> {\r\n    <span class=\"hljs-title\">sayHi<\/span><span class=\"hljs-params\">()<\/span> { <span class=\"hljs-title\">console<\/span>.<span class=\"hljs-title\">log<\/span><span class=\"hljs-params\">(<span class=\"hljs-string\">'Hi'<\/span>)<\/span>; }\r\n});<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>The class expression has a method called <code>sayHi()<\/code>. And the <code>greeting<\/code> variable is an instance of the class expression.<\/p>\r\n\r\n\r\n\r\n<p>Third, call the <code>sayHi()<\/code> method on the greeting object:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">greeting.sayHi(); \/\/ <span class=\"hljs-string\">'Hi'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<h2 class=\"wp-block-heading\">Singleton<\/h2>\r\n\r\n\r\n\r\n<p>Singleton is a design pattern that limits the instantiation of a class to a single instance. It ensures that only one instance of a class can be created throughout the system.<\/p>\r\n\r\n\r\n\r\n<p>Class expressions can be used to create a singleton by calling the class constructor immediately.<\/p>\r\n\r\n\r\n\r\n<p>To do that, you use the <code>new<\/code> operator with a class expression and include the parentheses at the end of class declaration as shown in the following example:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">let app = new <span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> {\r\n    <span class=\"hljs-title\">constructor<\/span><span class=\"hljs-params\">(name)<\/span> {\r\n        <span class=\"hljs-title\">this<\/span>.<span class=\"hljs-title\">name<\/span> = <span class=\"hljs-title\">name<\/span>;\r\n    }\r\n    <span class=\"hljs-title\">start<\/span><span class=\"hljs-params\">()<\/span> {\r\n        <span class=\"hljs-title\">console<\/span>.<span class=\"hljs-title\">log<\/span><span class=\"hljs-params\">(`Starting the ${this.name}...`)<\/span>;\r\n    }\r\n}<span class=\"hljs-params\">(<span class=\"hljs-string\">'Awesome App'<\/span>)<\/span>;\r\n\r\n<span class=\"hljs-title\">app<\/span>.<span class=\"hljs-title\">start<\/span><span class=\"hljs-params\">()<\/span>; \/\/ <span class=\"hljs-title\">Starting<\/span> <span class=\"hljs-title\">the<\/span> <span class=\"hljs-title\">Awesome<\/span> <span class=\"hljs-title\">App<\/span>...<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>How it works.<\/p>\r\n\r\n\r\n\r\n<p>The following is an unnamed class expresion:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">new <span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> {\r\n    <span class=\"hljs-title\">constructor<\/span><span class=\"hljs-params\">(name)<\/span> {\r\n        <span class=\"hljs-title\">this<\/span>.<span class=\"hljs-title\">name<\/span> = <span class=\"hljs-title\">name<\/span>;\r\n    }\r\n    <span class=\"hljs-title\">start<\/span><span class=\"hljs-params\">()<\/span> {\r\n        <span class=\"hljs-title\">console<\/span>.<span class=\"hljs-title\">log<\/span><span class=\"hljs-params\">(`Starting the ${this.name}...`)<\/span>;\r\n    }\r\n}<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>The class has a <code>constructor()<\/code> that accepts an argument. It aslo has a method called <code>start()<\/code>.<\/p>\r\n\r\n\r\n\r\n<p>The class expression evaluates to a class. Therefore, you can call its constructor immediately by placing parentheses after the expression:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">new <span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> {\r\n    <span class=\"hljs-title\">constructor<\/span><span class=\"hljs-params\">(name)<\/span> {\r\n        <span class=\"hljs-title\">this<\/span>.<span class=\"hljs-title\">name<\/span> = <span class=\"hljs-title\">name<\/span>;\r\n    }\r\n    <span class=\"hljs-title\">start<\/span><span class=\"hljs-params\">()<\/span> {\r\n        <span class=\"hljs-title\">console<\/span>.<span class=\"hljs-title\">log<\/span><span class=\"hljs-params\">(`Starting the ${this.name}...`)<\/span>;\r\n    }\r\n}<span class=\"hljs-params\">(<span class=\"hljs-string\">'Awesome App'<\/span>)<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>This expression returns an instance of the class expression which is assigned to the app variable.<\/p>\r\n\r\n\r\n\r\n<p>The following calls the <code>start()<\/code> method on the app object:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">app.start(); \/\/ Starting the Awesome App...<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<h2 class=\"wp-block-heading\">Summary<\/h2>\r\n\r\n\r\n\r\n<ul><li>ES6 provides you with an alternative way to defining a new class using a class expression.<\/li><li>Class expressions can be named or unnamed.<\/li><li>The class expression can be used to create a singleton object.<\/li><\/ul>\r\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"88139\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/\"\n\t\t\t\tdata-post-title=\"JavaScript Class Expressions\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"88139\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/\"\n\t\t\t\tdata-post-title=\"JavaScript Class Expressions\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn how to use JavaScript class expressions to declare new classes. Introduction to JavaScript class expressions Similar to functions, classes have expression forms. A class expression provides you with an alternative way to define a new class. A class expression doesn&#8217;t require an identifier after the class keyword. And you [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":64,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Class Expressions<\/title>\n<meta name=\"description\" content=\"In this tutorial, you&#039;ll learn about JavaScript class expressions and how to use them effectively in your code.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Class Expressions\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you&#039;ll learn about JavaScript class expressions and how to use them effectively in your code.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-22T08:10:57+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/\",\"name\":\"JavaScript Class Expressions\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2021-01-19T10:03:24+00:00\",\"dateModified\":\"2022-01-22T08:10:57+00:00\",\"description\":\"In this tutorial, you'll learn about JavaScript class expressions and how to use them effectively in your code.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Class Expressions\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Class Expressions","description":"In this tutorial, you'll learn about JavaScript class expressions and how to use them effectively in your code.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Class Expressions","og_description":"In this tutorial, you'll learn about JavaScript class expressions and how to use them effectively in your code.","og_url":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-01-22T08:10:57+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/","url":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/","name":"JavaScript Class Expressions","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2021-01-19T10:03:24+00:00","dateModified":"2022-01-22T08:10:57+00:00","description":"In this tutorial, you'll learn about JavaScript class expressions and how to use them effectively in your code.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-class-expressions\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":3,"name":"JavaScript Class Expressions"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/88139"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=88139"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/88139\/revisions"}],"predecessor-version":[{"id":88391,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/88139\/revisions\/88391"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=88139"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
{"id":381,"date":"2016-08-20T18:22:55","date_gmt":"2016-08-21T01:22:55","guid":{"rendered":"http:\/\/https://jsprifix.netlify.app/\/?page_id=381"},"modified":"2022-02-14T18:01:53","modified_gmt":"2022-02-15T02:01:53","slug":"javascript-array-filter","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/","title":{"rendered":"JavaScript Array filter: Filtering Elements"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the JavaScript Array <code>filter()<\/code> method to filter elements in an array.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to JavaScript array <code>filter()<\/code> method<\/h2>\n\n\n\n<p>One of the most common tasks when working with an <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array\/\">array<\/a> is to create a new array that contains a subset of elements of the original array.<\/p>\n\n\n\n<p>Suppose you have an array of city objects where each object contains two properties: <code>name<\/code> and <code>population<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> cities = &#91;\n    {<span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'Los Angeles'<\/span>, <span class=\"hljs-attr\">population<\/span>: <span class=\"hljs-number\">3792621<\/span>},\n    {<span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'New York'<\/span>, <span class=\"hljs-attr\">population<\/span>: <span class=\"hljs-number\">8175133<\/span>},\n    {<span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'Chicago'<\/span>, <span class=\"hljs-attr\">population<\/span>: <span class=\"hljs-number\">2695598<\/span>},\n    {<span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'Houston'<\/span>, <span class=\"hljs-attr\">population<\/span>: <span class=\"hljs-number\">2099451<\/span>},\n    {<span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'Philadelphia'<\/span>, <span class=\"hljs-attr\">population<\/span>: <span class=\"hljs-number\">1526006<\/span>}\n];<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To find the city whose population is greater than 3 million, you typically loop over the array elements using a <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-for-loop\/\">for loop<\/a> and test if the value of the <code>population<\/code> property satisfies the condition, like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> bigCities = &#91;];\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> i = <span class=\"hljs-number\">0<\/span>; i &lt; cities.length; i++) {\n    <span class=\"hljs-keyword\">if<\/span> (cities&#91;i].population &gt; <span class=\"hljs-number\">3000000<\/span>) {\n        bigCities.push(cities&#91;i]);\n    }\n}\n<span class=\"hljs-built_in\">console<\/span>.log(bigCities);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">&#91;\n  { <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'Los Angeles'<\/span>, <span class=\"hljs-attr\">population<\/span>: <span class=\"hljs-number\">3792621<\/span> },\n  { <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'New York'<\/span>, <span class=\"hljs-attr\">population<\/span>: <span class=\"hljs-number\">8175133<\/span> }\n]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>JavaScript Array provides the <code>filter()<\/code> method that allows you to do this task in a shorter and cleaner way.<\/p>\n\n\n\n<p>The following example returns the same result as the example above:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> bigCities = cities.filter(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">e<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> e.population &gt; <span class=\"hljs-number\">3000000<\/span>;\n});\n<span class=\"hljs-built_in\">console<\/span>.log(bigCities);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we call the <code>filter()<\/code> method of the <code>cities<\/code> array object and pass a function that tests each element.<\/p>\n\n\n\n<p>Inside the function, we check if the <code>population<\/code> of each city in the array is greater than 3 million. If it is the case, the function returns <code>true<\/code> or <code>false<\/code> otherwise.\u00a0<\/p>\n\n\n\n<p>The <code>filter()<\/code> method includes the only elements in the result array if they satisfy the test in the callback function.<\/p>\n\n\n\n<p>Starting with ES6, you can use the <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-arrow-function\/\">arrow function<\/a> to make it more concise:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> bigCities = cities.filter(<span class=\"hljs-function\"><span class=\"hljs-params\">city<\/span> =&gt;<\/span> city.population &gt; <span class=\"hljs-number\">3000000<\/span>);\n\n<span class=\"hljs-built_in\">console<\/span>.log(bigCities);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">JavaScript Array filter() method in detail<\/h2>\n\n\n\n<p>The following illustrates the syntax of the <code>filter()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">arrayObject<\/span><span class=\"hljs-selector-class\">.filter<\/span>(<span class=\"hljs-selector-tag\">callback<\/span>, <span class=\"hljs-selector-tag\">contextObject<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>filter()<\/code> method creates a new array with all the elements that pass the test implemented by the <code>callback()<\/code> function.<\/p>\n\n\n\n<p>Internally, the <code>filter()<\/code> method iterates over each element of the array and passes each element to the <code>callback<\/code>\u00a0function. If the <code>callback<\/code>\u00a0function returns <code>true<\/code>, it includes the element in the return array.<\/p>\n\n\n\n<p>The <code>filter()<\/code> method accepts two named arguments: a <code>callback<\/code>&nbsp;function and an optional object.<\/p>\n\n\n\n<p>Like other iterative methods of the Array object such as <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-every\/\">every()<\/a>,<\/code> <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-every\/\">some()<\/a>,<\/code> <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-map\/\"><code>map()<\/code><\/a> and <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-foreach\/\">forEach()<\/a>,<\/code> the <code>callback<\/code>&nbsp;function has the following form:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">callback<\/span>(<span class=\"hljs-params\">currentElement, index, array<\/span>)<\/span>{\n   <span class=\"hljs-comment\">\/\/ ...<\/span>\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>callback<\/code> function takes three arguments:<\/p>\n\n\n\n<ul><li>The <code>currentElement<\/code> argument is the current element&nbsp;in the array that is being processed by the <code>callback<\/code> function.<\/li><li>The <code>index<\/code> of the <code>currentElement<\/code> that is being processed by the <code>callback<\/code> function.<\/li><li>The <code>array<\/code> object being traversed.<\/li><\/ul>\n\n\n\n<p>The <code>index<\/code> and <code>array<\/code> arguments are optional.<\/p>\n\n\n\n<p>The <code>contexObject<\/code> argument of the <code>filter()<\/code> method is optional. If you pass the <code>this<\/code> value, you can reference it by using <code>this<\/code> keyword inside the <code>callback<\/code>\u00a0function.<\/p>\n\n\n\n<p>It is important to note that the <code>filter()<\/code> method does not change the original array.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">More JavaScript Array <code>filter()<\/code> method examples<\/h2>\n\n\n\n<p>Because the <code>filter()<\/code> method returns a new array, you can chain the result with other array methods such as <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-sort\/\">sort()<\/a><\/code> and <code><a href=\"http:\/\/map()\">map()<\/a><\/code>.<\/p>\n\n\n\n<p>For example, the following illustrates how to chain the three methods: <code>filter(),sort(),<\/code> and <code>map():<\/code><\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">cities\n    .filter(<span class=\"hljs-function\"><span class=\"hljs-params\">city<\/span> =&gt;<\/span> city.population &lt; <span class=\"hljs-number\">3000000<\/span>)\n    .sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">c1, c2<\/span>) =&gt;<\/span> c1.population - c2.population)\n    .map(<span class=\"hljs-function\"><span class=\"hljs-params\">city<\/span> =&gt;<\/span> <span class=\"hljs-built_in\">console<\/span>.log(city.name + <span class=\"hljs-string\">':'<\/span> + city.population));\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">Philadelphia<\/span><span class=\"hljs-selector-pseudo\">:1526006<\/span>\n<span class=\"hljs-selector-tag\">Houston<\/span><span class=\"hljs-selector-pseudo\">:2099451<\/span>\n<span class=\"hljs-selector-tag\">Chicago<\/span><span class=\"hljs-selector-pseudo\">:2695598<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>First, filter the cities whose populations are less than 3 million using the <code>filter()<\/code> method.<\/li><li>Second, sort the resulting cities by the populations in descending order using the <code>sort()<\/code> method.<\/li><li>Third, output array element to the console using the <code>map()<\/code> method.<\/li><\/ul>\n\n\n\n<p>The following example illustrates the use of the <code>contextObject<\/code> argument that specifies an object which can be referenced in the <code>callback()<\/code> function using the <code>this<\/code> keyword<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">isInRange<\/span>(<span class=\"hljs-params\">value<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">if<\/span> (<span class=\"hljs-keyword\">typeof<\/span> value !== <span class=\"hljs-string\">'number'<\/span>) {\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">false<\/span>;\n    }\n    <span class=\"hljs-keyword\">return<\/span> value &gt;= <span class=\"hljs-keyword\">this<\/span>.lower &amp;&amp; value &lt;= <span class=\"hljs-keyword\">this<\/span>.upper;\n}\n\n<span class=\"hljs-keyword\">let<\/span> data = &#91;<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-string\">\"30\"<\/span>, <span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">5<\/span>, <span class=\"hljs-string\">'JavaScript filter'<\/span>, <span class=\"hljs-literal\">undefined<\/span>, <span class=\"hljs-string\">'example'<\/span>];\n\n<span class=\"hljs-keyword\">let<\/span> range = {\n    <span class=\"hljs-attr\">lower<\/span>: <span class=\"hljs-number\">1<\/span>,\n    <span class=\"hljs-attr\">upper<\/span>: <span class=\"hljs-number\">10<\/span>\n};\n\n<span class=\"hljs-keyword\">let<\/span> numberInRange = data.filter(isInRange, range);\n\n<span class=\"hljs-built_in\">console<\/span>.log(numberInRange); <span class=\"hljs-comment\">\/\/ &#91;10, 1, 5]<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91; <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">5<\/span> ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>First, define the <code>isInRange()<\/code> function that checks if its argument is a number and in the range specified by the <code>lower<\/code> and <code>upper<\/code> properties of an object.<\/li><li>Next, define an array of mixed data that contains <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-data-types\/#number\">numbers<\/a>, <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-data-types\/#string\">strings<\/a>, and <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-data-types\/#undefined\">undefined<\/a>.<\/li><li>Then, define the <code>range<\/code> object with two properties <code>lower<\/code> and <code>upper<\/code>.<\/li><li>After that, call the <code>filter()<\/code> methods of the <code>data<\/code> array and pass in the <code>isInRange()<\/code> function and the <code>range <\/code>object. Because we pass in the <code>range<\/code> object, inside the <code>isInRange()<\/code> function, the <code>this<\/code> keyword references to the <code>range<\/code> object.<\/li><li>Finally, show the result array in the console.<\/li><\/ul>\n\n\n\n<p>In this tutorial, you have learned how to use the JavaScript Array <code>filter()<\/code> method to filter elements in an array based on a test provided by a callback function.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"381\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/\"\n\t\t\t\tdata-post-title=\"JavaScript Array filter: Filtering Elements\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"381\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/\"\n\t\t\t\tdata-post-title=\"JavaScript Array filter: Filtering Elements\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the JavaScript Array filter() method to filter elements in an array.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":89577,"menu_order":12,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Array Filter: Filtering Array Elements Based on a Test Function<\/title>\n<meta name=\"description\" content=\"This tutorial shows you how to use the JavaScript array filter method to filter elements in an array based on a specified condition.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Array Filter: Filtering Array Elements Based on a Test Function\" \/>\n<meta property=\"og:description\" content=\"This tutorial shows you how to use the JavaScript array filter method to filter elements in an array based on a specified condition.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-15T02:01:53+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/\",\"name\":\"JavaScript Array Filter: Filtering Array Elements Based on a Test Function\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2016-08-21T01:22:55+00:00\",\"dateModified\":\"2022-02-15T02:01:53+00:00\",\"description\":\"This tutorial shows you how to use the JavaScript array filter method to filter elements in an array based on a specified condition.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript Array Methods\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-methods\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Array filter: Filtering Elements\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Array Filter: Filtering Array Elements Based on a Test Function","description":"This tutorial shows you how to use the JavaScript array filter method to filter elements in an array based on a specified condition.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Array Filter: Filtering Array Elements Based on a Test Function","og_description":"This tutorial shows you how to use the JavaScript array filter method to filter elements in an array based on a specified condition.","og_url":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-02-15T02:01:53+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/","url":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/","name":"JavaScript Array Filter: Filtering Array Elements Based on a Test Function","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2016-08-21T01:22:55+00:00","dateModified":"2022-02-15T02:01:53+00:00","description":"This tutorial shows you how to use the JavaScript array filter method to filter elements in an array based on a specified condition.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-filter\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"JavaScript Array Methods","item":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-methods\/"},{"@type":"ListItem","position":3,"name":"JavaScript Array filter: Filtering Elements"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/381"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=381"}],"version-history":[{"count":4,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/381\/revisions"}],"predecessor-version":[{"id":88765,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/381\/revisions\/88765"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/89577"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=381"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
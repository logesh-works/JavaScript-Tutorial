{"id":86070,"date":"2020-03-21T19:17:48","date_gmt":"2020-03-22T02:17:48","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=86070"},"modified":"2022-08-30T17:19:33","modified_gmt":"2022-08-31T00:19:33","slug":"javascript-anonymous-functions","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/","title":{"rendered":"JavaScript Anonymous Functions"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about JavaScript anonymous functions.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to JavaScript anonymous functions<\/h2>\n\n\n\n<p>An anonymous function is a <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-function\/\">function<\/a> without a name. The following shows how to define an anonymous function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n   <span class=\"hljs-comment\">\/\/...<\/span>\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Note that if you don&#8217;t place the anonymous function inside the <code>()<\/code>, you&#8217;ll get a syntax error. The <code>()<\/code> makes the anonymous function an expression that returns a function object.<\/p>\n\n\n\n<p>An anonymous function is not accessible after its initial creation. Therefore, you often need to assign it to a variable.<\/p>\n\n\n\n<p>For example, the following shows an anonymous function that displays a message:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> show = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Anonymous function'<\/span>);\n};\n\nshow();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the anonymous function has no name between the <code>function<\/code> keyword and parentheses <code>()<\/code>. <\/p>\n\n\n\n<p>Because we need to call the anonymous function later, we assign the anonymous function to the <code>show<\/code> variable.<\/p>\n\n\n\n<p>Since the whole assignment of the anonymous function to the show variable makes a valid expression, you don&#8217;t need to wrap the anonymous function inside the parentheses <code>()<\/code>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Using anonymous functions as arguments<\/h2>\n\n\n\n<p>In practice, you often pass anonymous functions as arguments to other functions. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">setTimeout(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Execute later after 1 second'<\/span>)\n}, <span class=\"hljs-number\">1000<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we pass an anonymous function into the <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-bom\/javascript-settimeout\/\">setTimeout()<\/a><\/code> function. The <code>setTimeout()<\/code> function executes this anonymous function one second later.<\/p>\n\n\n\n<p class=\"note\">Note that <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-functions-are-first-class-citizens\/\">functions are <\/a>first-class citizens in JavaScript. Therefore, you can pass a function to another function as an argument.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Immediately invoked function execution <\/h2>\n\n\n\n<p>If you want to create a function and execute it immediately after the declaration, you can declare an anonymous function like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'IIFE'<\/span>);\n})();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, define a function expression:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Immediately invoked function execution'<\/span>);\n})<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This expression returns a function.<\/p>\n\n\n\n<p>Second, call the function by adding the trailing parentheses <code>()<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Immediately invoked function execution'<\/span>);\n})();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>and sometimes, you may want to pass arguments into it, like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {\n    <span class=\"hljs-attr\">firstName<\/span>: <span class=\"hljs-string\">'John'<\/span>,\n    <span class=\"hljs-attr\">lastName<\/span>: <span class=\"hljs-string\">'Doe'<\/span>\n};\n\n(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(person.firstName} + <span class=\"hljs-string\">' '<\/span> + person.lastName);\n})(person);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Arrow functions<\/h2>\n\n\n\n<p>ES6 introduced <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-arrow-function\/\">arrow function<\/a>\u00a0expressions that provide a shorthand for declaring anonymous functions:<\/p>\n\n\n\n<p>For example, this function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> show = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Anonymous function'<\/span>);\n};<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>&#8230; can be shortened using the following arrow function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> show = <span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Anonymous function'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Similarly, the following anonymous function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> add = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">a, b<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> a + b;\n};<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>&#8230; is functionally equivalent to the following arrow function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> add = <span class=\"hljs-function\">(<span class=\"hljs-params\">a, b<\/span>) =&gt;<\/span> a + b;   <\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Anonymous functions are functions without names.<\/li><li>Anonymous functions can be used as an argument to other functions or as an immediately invoked function execution.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"86070\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/\"\n\t\t\t\tdata-post-title=\"JavaScript Anonymous Functions\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"86070\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/\"\n\t\t\t\tdata-post-title=\"JavaScript Anonymous Functions\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn about JavaScript anonymous functions that can be used as arguments to other functions<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":39,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Anonymous Functions<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn about JavaScript anonymous functions that can be used as arguments for other functions.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Anonymous Functions\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn about JavaScript anonymous functions that can be used as arguments for other functions.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-08-31T00:19:33+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/\",\"name\":\"JavaScript Anonymous Functions\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2020-03-22T02:17:48+00:00\",\"dateModified\":\"2022-08-31T00:19:33+00:00\",\"description\":\"In this tutorial, you will learn about JavaScript anonymous functions that can be used as arguments for other functions.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Anonymous Functions\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Anonymous Functions","description":"In this tutorial, you will learn about JavaScript anonymous functions that can be used as arguments for other functions.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Anonymous Functions","og_description":"In this tutorial, you will learn about JavaScript anonymous functions that can be used as arguments for other functions.","og_url":"https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-08-31T00:19:33+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/","url":"https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/","name":"JavaScript Anonymous Functions","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2020-03-22T02:17:48+00:00","dateModified":"2022-08-31T00:19:33+00:00","description":"In this tutorial, you will learn about JavaScript anonymous functions that can be used as arguments for other functions.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-anonymous-functions\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":3,"name":"JavaScript Anonymous Functions"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/86070"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=86070"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/86070\/revisions"}],"predecessor-version":[{"id":90354,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/86070\/revisions\/90354"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=86070"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
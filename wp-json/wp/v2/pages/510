{"id":510,"date":"2016-08-27T03:17:58","date_gmt":"2016-08-27T10:17:58","guid":{"rendered":"http:\/\/https://jsprifix.netlify.app/\/?page_id=510"},"modified":"2022-08-16T21:51:10","modified_gmt":"2022-08-17T04:51:10","slug":"javascript-default-parameters","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/","title":{"rendered":"JavaScript Default Parameters"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to handle JavaScript default parameters in ES6.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">TL;DR<\/h2>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">say<\/span>(<span class=\"hljs-params\">message=<span class=\"hljs-string\">'Hi'<\/span><\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(message);\n}\n\nsay(); <span class=\"hljs-comment\">\/\/ 'Hi'<\/span>\nsay(<span class=\"hljs-string\">'Hello'<\/span>) <span class=\"hljs-comment\">\/\/ 'Hello'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The default value of the <code>message<\/code> paramater in the <code>say()<\/code> function is <code>'Hi'<\/code>.<\/p>\n\n\n\n<p>In JavaScript, default function parameters allow you to initialize named parameters with default values if no values or <code>undefined<\/code> are passed into the function.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Arguments vs. Parameters<\/h2>\n\n\n\n<p>Sometimes, you can use the terms argument and parameter interchangeably. However, by definition, parameters are what you specify in the <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-function\/\">function declaration<\/a> whereas the arguments are what you pass into the function.<\/p>\n\n\n\n<p>Consider the following <code>add()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">add<\/span>(<span class=\"hljs-params\">x, y<\/span>) <\/span>{\n   <span class=\"hljs-keyword\">return<\/span> x + y;\n}\n\nadd(<span class=\"hljs-number\">100<\/span>,<span class=\"hljs-number\">200<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>x<\/code> and <code>y<\/code> are the parameters of the <code>add()<\/code> function, and the values passed to the <code>add()<\/code> function <code>100<\/code> and <code>200<\/code> are the arguments.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Setting JavaScript default parameters for a function<\/h2>\n\n\n\n<p>In JavaScript, a parameter has a default value of <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-data-types\/#undefined\">undefined<\/a>. It means that if you don&#8217;t pass the arguments into the <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-function\/\">function<\/a>, its parameters will have the&nbsp;default values of <code>undefined<\/code>.<\/p>\n\n\n\n<p>See the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">say<\/span>(<span class=\"hljs-params\">message<\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(message);\n}\n\nsay(); <span class=\"hljs-comment\">\/\/ undefined<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>say()<\/code> function takes the <code>message<\/code> parameter. Because we didn&#8217;t pass any argument into the <code>say()<\/code> function, the value of the&nbsp;<code>message<\/code> parameter is <code>undefined<\/code>.<\/p>\n\n\n\n<p>Suppose that you want to give the <code>message<\/code> parameter a default value 10. <\/p>\n\n\n\n<p>A typical way for achieving this is to test parameter value and assign a default value if it is&nbsp;<code>undefined<\/code> using a <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-ternary-operator\/\">ternary operator<\/a>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">say<\/span>(<span class=\"hljs-params\">message<\/span>) <\/span>{\n    message = <span class=\"hljs-keyword\">typeof<\/span> message !== <span class=\"hljs-string\">'undefined'<\/span> ? message : <span class=\"hljs-string\">'Hi'<\/span>;\n    <span class=\"hljs-built_in\">console<\/span>.log(message);\n}\nsay(); <span class=\"hljs-comment\">\/\/ 'Hi'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we didn&#8217;t pass any value into the <code>say()<\/code> function. Therefore, the default value of the message argument is <code>undefined<\/code>. Inside the function, we reassigned the <code>message<\/code> variable the <code>Hi<\/code> string.<\/p>\n\n\n\n<p>ES6 provides you with an easier way to set the default values for the function parameters like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">fn<\/span>(<span class=\"hljs-params\">param1=default1, param2=default2,..<\/span>) <\/span>{\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In the syntax above, you use the <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-assignment-operators\/\">assignment operator<\/a> (<code>=<\/code>) and the default value after the parameter name to set a default value for that parameter. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">say<\/span>(<span class=\"hljs-params\">message=<span class=\"hljs-string\">'Hi'<\/span><\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(message);\n}\n\nsay(); <span class=\"hljs-comment\">\/\/ 'Hi'<\/span>\nsay(<span class=\"hljs-literal\">undefined<\/span>); <span class=\"hljs-comment\">\/\/ 'Hi'<\/span>\nsay(<span class=\"hljs-string\">'Hello'<\/span>); <span class=\"hljs-comment\">\/\/ 'Hello'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>In the first function call, we didn&#8217;t pass any argument into the <code>say()<\/code> function, therefore <code>message<\/code> parameter took the default value <code>'Hi'<\/code>.<\/li><li>In the second function call, we passed the <code>undefined<\/code> into the <code>say()<\/code> function, hence the <code>message<\/code> parameter also took the default value <code>'Hi'<\/code>.<\/li><li>In the third function call, we passed the <code>'Hello'<\/code>  string into the <code>say()<\/code> function, therefore <code>message<\/code> parameter took the string <code>'Hello'<\/code> as the default value.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">More JavaScript default parameter examples<\/h2>\n\n\n\n<p>Let&#8217;s look at some more examples to learn some available options for setting default values of the function parameters.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Passing undefined arguments<\/h3>\n\n\n\n<p>The following <code>createDiv()<\/code> function creates a new <code>&lt;div><\/code> element in the document with a specific height, width, and border-style:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">createDiv<\/span>(<span class=\"hljs-params\">height = <span class=\"hljs-string\">'100px'<\/span>, width = <span class=\"hljs-string\">'100px'<\/span>, border = <span class=\"hljs-string\">'solid 1px red'<\/span><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">let<\/span> div = <span class=\"hljs-built_in\">document<\/span>.createElement(<span class=\"hljs-string\">'div'<\/span>);\n    div.style.height = height;\n    div.style.width = width;\n    div.style.border = border;\n    <span class=\"hljs-built_in\">document<\/span>.body.appendChild(div);\n    <span class=\"hljs-keyword\">return<\/span> div;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following doesn&#8217;t pass any arguments to the function so the <code>createDiv()<\/code> function uses the default&nbsp;values for the parameters.<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">createDiv();<\/code><\/span><\/pre>\n\n\n<p>Suppose you want to&nbsp;use the default values for the height and width parameters and specific border style. In this case, you need to pass  <code>undefined<\/code> values to the first two parameters as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">createDiv(<span class=\"hljs-literal\">undefined<\/span>,<span class=\"hljs-literal\">undefined<\/span>,<span class=\"hljs-string\">'solid 5px blue'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">2) Evaluating default&nbsp;parameters<\/h3>\n\n\n\n<p>JavaScript engine evaluates the default arguments at the time you call the function. See the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">put<\/span>(<span class=\"hljs-params\">toy, toyBox = &#91;]<\/span>) <\/span>{\n    toyBox.push(toy);\n    <span class=\"hljs-keyword\">return<\/span> toyBox;\n}\n\n<span class=\"hljs-built_in\">console<\/span>.log(put(<span class=\"hljs-string\">'Toy Car'<\/span>));\n<span class=\"hljs-comment\">\/\/ -&gt; &#91;'Toy Car']<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(put(<span class=\"hljs-string\">'Teddy Bear'<\/span>));\n<span class=\"hljs-comment\">\/\/ -&gt; &#91;'Teddy Bear'], not &#91;'Toy Car','Teddy Bear']<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The parameter can take a default value which is a result of a function.<\/p>\n\n\n\n<p>Consider the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">date<\/span>(<span class=\"hljs-params\">d = today(<\/span>)) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(d);\n}\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">today<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> (<span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Date<\/span>()).toLocaleDateString(<span class=\"hljs-string\">\"en-US\"<\/span>);\n}\ndate();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>date()<\/code> function takes one parameter whose default value is the returned value of the <code>today()<\/code> function.&nbsp;The <code>today()<\/code> function returns today&#8217;s date in a specified string format.<\/p>\n\n\n\n<p>When we declared the <code>date()<\/code> function, the <code>today()<\/code> function has not yet evaluated until we called the <code>date()<\/code> function.<\/p>\n\n\n\n<p>We can use this feature to make arguments mandatory. If the caller doesn&#8217;t pass any argument, we throw an error as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">requiredArg<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n   <span class=\"hljs-keyword\">throw<\/span> <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Error<\/span>(<span class=\"hljs-string\">'The argument is required'<\/span>);\n}\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">add<\/span>(<span class=\"hljs-params\">x = requiredArg(<\/span>), <span class=\"hljs-title\">y<\/span> = <span class=\"hljs-title\">requiredArg<\/span>(<span class=\"hljs-params\"><\/span>))<\/span>{\n   <span class=\"hljs-keyword\">return<\/span> x + y;\n}\n\nadd(<span class=\"hljs-number\">10<\/span>); <span class=\"hljs-comment\">\/\/ error<\/span>\nadd(<span class=\"hljs-number\">10<\/span>,<span class=\"hljs-number\">20<\/span>); <span class=\"hljs-comment\">\/\/ OK<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\" id=\"_referring-to-other-parameters-in-default-values\">3) Using other parameters in default values<\/h3>\n\n\n\n<p>You can assign a parameter a default value that references other default parameters as shown in the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">add<\/span>(<span class=\"hljs-params\">x = <span class=\"hljs-number\">1<\/span>, y = x, z = x + y<\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> x + y + z;\n}\n\n<span class=\"hljs-built_in\">console<\/span>.log(add()); <span class=\"hljs-comment\">\/\/ 4<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In the <code>add()<\/code> function:<\/p>\n\n\n\n<ul><li>The default value of the <code>y<\/code> is set to <code>x<\/code> parameter.<\/li><li>The default value of the <code>z<\/code> is the sum of <code>x<\/code> and <code>y<\/code><\/li><li>The <code>add()<\/code> function returns the sum of <code>x<\/code>, <code>y<\/code>, and <code>z<\/code>.<\/li><\/ul>\n\n\n\n<p>The parameter list seems to have its own <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-variable-scope\/\">scope<\/a>. If you reference the parameter that has not been initialized yet, you will get an error. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">subtract<\/span>(<span class=\"hljs-params\"> x = y, y = <span class=\"hljs-number\">1<\/span> <\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> x - y;\n}\nsubtract(<span class=\"hljs-number\">10<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Error message:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">Uncaught <span class=\"hljs-built_in\">ReferenceError<\/span>: Cannot access <span class=\"hljs-string\">'y'<\/span> before initialization<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Using functions<\/h3>\n\n\n\n<p>You can use a return value of a function as a default value for a parameter. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> taxRate = <span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> <span class=\"hljs-number\">0.1<\/span>;\n<span class=\"hljs-keyword\">let<\/span> getPrice = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>(<span class=\"hljs-params\"> price, tax = price * taxRate(<\/span>) ) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> price + tax;\n}\n\n<span class=\"hljs-keyword\">let<\/span> fullPrice = getPrice(<span class=\"hljs-number\">100<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(fullPrice); <span class=\"hljs-comment\">\/\/ 110<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In the <code>getPrice()<\/code> function, we called the <code>taxRate()<\/code> function to get the tax rate and use this tax rate to calculate the tax amount from the price.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">The arguments object<\/h3>\n\n\n\n<p>The value of the <code>arguments<\/code> object inside the function is the number of actual arguments that you pass to the function. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">add<\/span>(<span class=\"hljs-params\">x, y = <span class=\"hljs-number\">1<\/span>, z = <span class=\"hljs-number\">2<\/span><\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log( <span class=\"hljs-built_in\">arguments<\/span>.length );\n    <span class=\"hljs-keyword\">return<\/span> x + y + z;\n}\n\nadd(<span class=\"hljs-number\">10<\/span>); <span class=\"hljs-comment\">\/\/ 1<\/span>\nadd(<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>); <span class=\"hljs-comment\">\/\/ 2<\/span>\nadd(<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span>); <span class=\"hljs-comment\">\/\/ 3<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Now, you should understand the JavaScript default function parameters and how to use them effectively.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"510\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/\"\n\t\t\t\tdata-post-title=\"JavaScript Default Parameters\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"510\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/\"\n\t\t\t\tdata-post-title=\"JavaScript Default Parameters\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>This tutorial teaches you how to use JavaScript default parameters for functions and shows you various examples of functions that use default parameters.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":42,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>The Beginner&#039;s Guide to JavaScript Default Parameters<\/title>\n<meta name=\"description\" content=\"This tutorial teaches you how to use JavaScript default parameters for functions and shows you various examples of functions that use default parameters.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"The Beginner&#039;s Guide to JavaScript Default Parameters\" \/>\n<meta property=\"og:description\" content=\"This tutorial teaches you how to use JavaScript default parameters for functions and shows you various examples of functions that use default parameters.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-08-17T04:51:10+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"5 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/\",\"name\":\"The Beginner's Guide to JavaScript Default Parameters\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2016-08-27T10:17:58+00:00\",\"dateModified\":\"2022-08-17T04:51:10+00:00\",\"description\":\"This tutorial teaches you how to use JavaScript default parameters for functions and shows you various examples of functions that use default parameters.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Default Parameters\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"The Beginner's Guide to JavaScript Default Parameters","description":"This tutorial teaches you how to use JavaScript default parameters for functions and shows you various examples of functions that use default parameters.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/","og_locale":"en_US","og_type":"article","og_title":"The Beginner's Guide to JavaScript Default Parameters","og_description":"This tutorial teaches you how to use JavaScript default parameters for functions and shows you various examples of functions that use default parameters.","og_url":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-08-17T04:51:10+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"5 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/","url":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/","name":"The Beginner's Guide to JavaScript Default Parameters","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2016-08-27T10:17:58+00:00","dateModified":"2022-08-17T04:51:10+00:00","description":"This tutorial teaches you how to use JavaScript default parameters for functions and shows you various examples of functions that use default parameters.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-default-parameters\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":3,"name":"JavaScript Default Parameters"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/510"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=510"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/510\/revisions"}],"predecessor-version":[{"id":90231,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/510\/revisions\/90231"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=510"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
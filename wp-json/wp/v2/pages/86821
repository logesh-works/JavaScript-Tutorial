{"id":86821,"date":"2020-04-29T21:18:06","date_gmt":"2020-04-30T04:18:06","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=86821"},"modified":"2022-01-15T23:50:59","modified_gmt":"2022-01-16T07:50:59","slug":"javascript-string-type","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-string-type\/","title":{"rendered":"JavaScript String Type"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about the JavaScript <code>String<\/code> type and how to manipulate strings effectively.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to JavaScript String type<\/h2>\n\n\n\n<p>The <code>String<\/code> type is <a href=\"https:\/\/www.javascripttutorial.net\/javascript-objects\/\">object<\/a> wrapper of the <a href=\"https:\/\/www.javascripttutorial.net\/javascript-string\/\">string primitive type<\/a> and can be created by using the <code>String<\/code> constructor as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> str = <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">String<\/span>(<span class=\"hljs-string\">'JavaScript String Type'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>String<\/code> type has a property named <code>length<\/code> that specifies the number of characters in the string.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(str.length); <span class=\"hljs-comment\">\/\/ 22<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the value of the <code>length<\/code> property is <code>22<\/code> that also is the number of characters in the string <code>'JavaScript String Type'<\/code>.<\/p>\n\n\n\n<p>To get the primitive string value, you use one of the following methods of the String object: <code>valueOf(),<\/code> <code>toString(),<\/code> and <code>toLocaleString().<\/code><\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">console<\/span><span class=\"hljs-selector-class\">.log<\/span>(<span class=\"hljs-selector-tag\">str<\/span><span class=\"hljs-selector-class\">.valueOf<\/span>());\n<span class=\"hljs-selector-tag\">console<\/span><span class=\"hljs-selector-class\">.log<\/span>(<span class=\"hljs-selector-tag\">str<\/span><span class=\"hljs-selector-class\">.toString<\/span>());\n<span class=\"hljs-selector-tag\">console<\/span><span class=\"hljs-selector-class\">.log<\/span>(<span class=\"hljs-selector-tag\">str<\/span><span class=\"hljs-selector-class\">.toLocaleString<\/span>());<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To access an individual character in a string, you use square bracket notation <code>[]<\/code> with a numeric index. The index of the first character is zero as shown in this example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(str&#91;<span class=\"hljs-number\">0<\/span>]); <span class=\"hljs-comment\">\/\/ J<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The square bracket notation was introduced in ES5. Prior to ES5, you use the\u00a0<code>charAt()<\/code> method, which is more verbose:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(str.charAt(<span class=\"hljs-number\">0<\/span>)); <span class=\"hljs-comment\">\/\/ J<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>When you call a method on a primitive string variable or a literal string, it is converted to an instance of the <code>String<\/code> type. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-string\">'literal string'<\/span>.toUpperCase();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This feature is known as <a href=\"https:\/\/www.javascripttutorial.net\/javascript-primitive-wrapper-types\/\">primitive wrapper types in JavaScript<\/a>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">String manipulation<\/h2>\n\n\n\n<p>The <code>String<\/code> type provides many useful methods for manipulating strings effectively. We will examine each of them in the following section.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Concatenating strings<\/h3>\n\n\n\n<p>To concatenate two or more strings you use the <code>concat()<\/code> method as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> firstName = <span class=\"hljs-string\">'John'<\/span>;\n<span class=\"hljs-keyword\">let<\/span> fullName = firstName.concat(<span class=\"hljs-string\">' '<\/span>,<span class=\"hljs-string\">'Doe'<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(fullName); <span class=\"hljs-comment\">\/\/ \"John Doe\"<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(firstName); <span class=\"hljs-comment\">\/\/ \"John\"<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>concat()<\/code> method concatenates two or more strings and returns the result string. Note that the <code>concat()<\/code> method does not modify the original string.<\/p>\n\n\n\n<p>Besides the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-string-concat\/\">concat()<\/a><\/code> method, you can also use the addition operator (<code>+<\/code>) for concatenating strings. In practice, the addition operator is used more often than the <code>concat()<\/code> method.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> firstName = <span class=\"hljs-string\">'John'<\/span>;\n<span class=\"hljs-keyword\">let<\/span> fullName = firstName + <span class=\"hljs-string\">' '<\/span> + <span class=\"hljs-string\">'Doe'<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(fullName); <span class=\"hljs-comment\">\/\/ \"John Doe\"<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">2) Extracting substrings<\/h3>\n\n\n\n<p>To extract a substring from a string, you use the <code>substr()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">substr<\/span>(<span class=\"hljs-selector-tag\">startIndex<\/span>,<span class=\"hljs-selector-attr\">&#91;length]<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>substr()<\/code> method accepts two arguments. <\/p>\n\n\n\n<p>The first argument <code>startIndex<\/code> is the location at which the characters are being extracted, while the second argument <code>length<\/code> specifies the number of characters to extract.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> str = <span class=\"hljs-string\">\"JavaScript String\"<\/span>;\n\n<span class=\"hljs-built_in\">console<\/span>.log(str.substr(<span class=\"hljs-number\">0<\/span>, <span class=\"hljs-number\">10<\/span>)); <span class=\"hljs-comment\">\/\/ \"JavaScript\"<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(str.substr(<span class=\"hljs-number\">11<\/span>,<span class=\"hljs-number\">6<\/span>)); <span class=\"hljs-comment\">\/\/ \"String\"<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you omit the <code>length<\/code>&nbsp;argument, the <code>substr()<\/code> method extracts the characters to the end of the string.<\/p>\n\n\n\n<p>Sometimes, you want to extract a substring from a string using starting and ending indexes. In this case, you use the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-substring\/\">substring()<\/a><\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">substring(startIndex,endIndex)<\/code><\/span><\/pre>\n\n\n<p>See the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> str = <span class=\"hljs-string\">\"JavaScript String\"<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(str.substring(<span class=\"hljs-number\">4<\/span>, <span class=\"hljs-number\">10<\/span>)); <span class=\"hljs-comment\">\/\/ \"Script\"<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">3) Locating substrings<\/h3>\n\n\n\n<p>To locate a substring in a string, you use the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-string-indexof\/\">indexOf()<\/a><\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">string<\/span><span class=\"hljs-selector-class\">.indexOf<\/span>(<span class=\"hljs-selector-tag\">substring<\/span>,<span class=\"hljs-selector-attr\">&#91;fromIndex]<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>indexOf()<\/code> method accepts two arguments: a substring to locate and the <code>fromIndex<\/code>&nbsp;at which the method starts searching forward in the string.<\/p>\n\n\n\n<p>The <code>indexOf()<\/code> returns the index of the first occurrence\u00a0of the substring in the string. If the substring is not found, the <code>indexOf()<\/code> method returns <code>-1<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> str = <span class=\"hljs-string\">\"This is a string\"<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(str.indexOf(<span class=\"hljs-string\">\"is\"<\/span>)); <span class=\"hljs-comment\">\/\/ 2<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example uses the <code>fromIndex<\/code> argument:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(str.indexOf(<span class=\"hljs-string\">'is'<\/span>, <span class=\"hljs-number\">3<\/span>)); <span class=\"hljs-comment\">\/\/5<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To find the location of&nbsp;the last occurrence of a substring in a string, you use the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-string-lastindexof\/\">lastIndexOf()<\/a><\/code> method.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">string<\/span><span class=\"hljs-selector-class\">.lastIndexOf<\/span>(<span class=\"hljs-selector-tag\">substring<\/span>,<span class=\"hljs-selector-attr\">&#91;fromIndex]<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Unlike the <code>indexOf()<\/code> method, the <code>lastindexOf()<\/code> method searches backward from the <code>fromIndex<\/code> argument.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(str.lastIndexOf(<span class=\"hljs-string\">'is'<\/span>)); <span class=\"hljs-comment\">\/\/ 5<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>lastIndexOf()<\/code> method also returns <code>-1<\/code> if the substring is not found in the string as shown in this example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(str.lastIndexOf(<span class=\"hljs-string\">'are'<\/span>)); <span class=\"hljs-comment\">\/\/ -1<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">4) Removing whitespace characters<\/h3>\n\n\n\n<p>To remove&nbsp;all leading and trailing whitespace characters of a string, you use the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-string-trim\/\">trim()<\/a><\/code> method. <\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-18\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> rawString = <span class=\"hljs-string\">' Hi  '<\/span>;\n<span class=\"hljs-keyword\">let<\/span> strippedString = rawString.trim();\n<span class=\"hljs-built_in\">console<\/span>.log(strippedString); <span class=\"hljs-comment\">\/\/ \"Hi\"<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-18\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p class=\"note\">Note that the <code>trim()<\/code> method creates&nbsp;a copy of the original string with whitespace characters stripped, it doesn&#8217;t change the original string.<\/p>\n\n\n\n<p>ES6 introduced two new methods for removing whitespace characters from a string:<\/p>\n\n\n\n<ul><li><code><a href=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-string-trimstart\/\">trimStart()<\/a><\/code> returns a string with whitespace stripped from the beginning of a string.<\/li><li><code><a href=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-string-trimend\/\">trimEnd()<\/a><\/code> returns a string with the whitespace stripped from the end of a string.<\/li><\/ul>\n\n\n\n<h3 class=\"wp-block-heading\">5) Changing cases<\/h3>\n\n\n\n<p>To change cases of a string, you use <code>toLowerCase()<\/code> and <code>toUpperCase()<\/code> methods:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-19\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> greeting = <span class=\"hljs-string\">'Hello'<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(greeting.toLowerCase()); <span class=\"hljs-comment\">\/\/ 'hello'<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(greeting.toUpperCase()); <span class=\"hljs-comment\">\/\/ 'HELLO';<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-19\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In some languages, the rules for converting a string to lowercase and uppercase are very specific. <\/p>\n\n\n\n<p>Therefore, it is safer to use the <code>toLocaleLowerCase()<\/code> and <code>toLocaleUpperCase()<\/code> methods, especially when you don&#8217;t know which language the code will deal with.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">6) Comparing strings<\/h3>\n\n\n\n<p>To compare two strings, you use the <code>localeCompare()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-20\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">first<\/span><span class=\"hljs-selector-class\">.localeCompare<\/span>(<span class=\"hljs-selector-tag\">second<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-20\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>localeCompare()<\/code> returns one of three values: -1, 0, and 1.<\/p>\n\n\n\n<ul><li>If the first string comes before the second string alphabetically, the method returns -1.<\/li><li>If the first string comes after the second string&nbsp;alphabetically, the method returns 1.<\/li><li>If two strings are equal, the method returns 0.<\/li><\/ul>\n\n\n\n<p>For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-21\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'A'<\/span>.localeCompare(<span class=\"hljs-string\">'B'<\/span>)); <span class=\"hljs-comment\">\/\/ -1<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'B'<\/span>.localeCompare(<span class=\"hljs-string\">'B'<\/span>)); <span class=\"hljs-comment\">\/\/ 0<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'C'<\/span>.localeCompare(<span class=\"hljs-string\">'B'<\/span>)); <span class=\"hljs-comment\">\/\/ 1<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-21\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">7) Matching patterns<\/h3>\n\n\n\n<p>The <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-string-match\/\">match()<\/a><\/code> method allows you to match a string with a specified <a href=\"https:\/\/www.javascripttutorial.net\/javascript-regular-expression\/\">regular expression<\/a> and get an array of results. <\/p>\n\n\n\n<p>The <code>match()<\/code> method returns <a href=\"https:\/\/www.javascripttutorial.net\/javascript-data-types\/#null\">null<\/a> if it does not find any match. Otherwise, it returns an array containing the entire match and any parentheses-capture matched results.<\/p>\n\n\n\n<p>If the global flag (<code>g<\/code>) is not set, the element zero of the array contains the&nbsp;entire match. Here is an example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-22\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> expression = <span class=\"hljs-string\">'1 + 2 = 3'<\/span>;\r\n<span class=\"hljs-keyword\">let<\/span> matches = expression.match(<span class=\"hljs-regexp\">\/\\d+\/<\/span>);\r\n<span class=\"hljs-built_in\">console<\/span>.log(matches&#91;<span class=\"hljs-number\">0<\/span>]); <span class=\"hljs-comment\">\/\/ \"1\"<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-22\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">1<\/code><\/span><\/pre>\n\n\n<p>In this example, the pattern matches any number in the <code>expression<\/code> string.<\/p>\n\n\n\n<p>In case the global flag ( <code>g<\/code>) is set, the elements of the result array contain all matches as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-23\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> expression = <span class=\"hljs-string\">'1 + 2 = 3'<\/span>;\n<span class=\"hljs-keyword\">let<\/span> matches = expression.match(<span class=\"hljs-regexp\">\/\\d+\/g<\/span>);\n\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">const<\/span> match <span class=\"hljs-keyword\">of<\/span> matches) {\n  <span class=\"hljs-built_in\">console<\/span>.log(match);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-23\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">1\r\n2\r\n3<\/code><\/span><\/pre>\n\n\n<p>In this example, the <code>matches<\/code> array contains all the matches including <code>1<\/code>, <code>2<\/code>, and <code>3<\/code> in the <code>expression<\/code> string.<\/p>\n\n\n\n<p>If you only need to find out if a string matches a regular expression, you use the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-string-search\/\">search()<\/a><\/code> method instead. <\/p>\n\n\n\n<p>Similar to the <code>match()<\/code> method, the <code>search()<\/code> method accepts a regular expression and returns the position of the string where the first match is found. In case no match is found, it returns -1.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-24\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> str = <span class=\"hljs-string\">\"This is a test of search()\"<\/span>;\n<span class=\"hljs-keyword\">let<\/span> pos = str.search(<span class=\"hljs-regexp\">\/is\/<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(pos); <span class=\"hljs-comment\">\/\/ 2<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-24\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">8) Replacing substrings<\/h3>\n\n\n\n<p>To replace a substring in a string, you use the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-string-replace\/\">replace()<\/a><\/code> method.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-25\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">string<\/span><span class=\"hljs-selector-class\">.replace<\/span>(<span class=\"hljs-selector-tag\">regularExpression<\/span>, <span class=\"hljs-selector-tag\">replaceText<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-25\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The first argument of the <code>replace()<\/code> method could be a regular expression or a string.&nbsp;If it is a regular expression, the <code>replace()<\/code> method will find the matches and replace them with the second argument ( <code>replaceText<\/code>). In case it is a string, the <code>replace()<\/code> method will perform an exact search and carry the replacement.<\/p>\n\n\n\n<p>The <code>replace()<\/code> method returns a copy of the original string after making the replacements.<\/p>\n\n\n\n<p>The following example illustrates how to use a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-regular-expression\/\">regular expression<\/a> to replace <code>the<\/code> with <code>a<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-26\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> str = <span class=\"hljs-string\">\"the baby kicks the ball\"<\/span>;\n\n<span class=\"hljs-comment\">\/\/ replace \"the\" with \"a\"<\/span>\n<span class=\"hljs-keyword\">let<\/span> newStr = str.replace(<span class=\"hljs-regexp\">\/the\/g<\/span>, <span class=\"hljs-string\">\"a\"<\/span>);\n\n<span class=\"hljs-built_in\">console<\/span>.log(newStr); <span class=\"hljs-comment\">\/\/ \"a baby kicks a ball\"<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(str); <span class=\"hljs-comment\">\/\/ \"the baby kicks the ball\"<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-26\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>And&nbsp;the following example shows how to replace <code>kicks<\/code> with <code>holds<\/code> by using the first argument as a literal string.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-27\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">newStr = str.replace(<span class=\"hljs-string\">'kicks'<\/span>, <span class=\"hljs-string\">'holds'<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(newStr); <span class=\"hljs-comment\">\/\/ \"the baby holds the ball\"<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-27\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned about the JavaScript String type and how to manipulate strings effectively.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"86821\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-string-type\/\"\n\t\t\t\tdata-post-title=\"JavaScript String Type\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"86821\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-string-type\/\"\n\t\t\t\tdata-post-title=\"JavaScript String Type\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn about the JavaScript String type and how to manipulate strings effectively.\t<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":100,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript String Type<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn about the JavaScript String type and how to manipulate strings effectively.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-string-type\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript String Type\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn about the JavaScript String type and how to manipulate strings effectively.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-string-type\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-16T07:50:59+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"6 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-string-type\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-string-type\/\",\"name\":\"JavaScript String Type\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-04-30T04:18:06+00:00\",\"dateModified\":\"2022-01-16T07:50:59+00:00\",\"description\":\"In this tutorial, you will learn about the JavaScript String type and how to manipulate strings effectively.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-string-type\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-string-type\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-string-type\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript String Type\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript String Type","description":"In this tutorial, you will learn about the JavaScript String type and how to manipulate strings effectively.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-string-type\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript String Type","og_description":"In this tutorial, you will learn about the JavaScript String type and how to manipulate strings effectively.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-string-type\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-01-16T07:50:59+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"6 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-string-type\/","url":"https:\/\/www.javascripttutorial.net\/javascript-string-type\/","name":"JavaScript String Type","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-04-30T04:18:06+00:00","dateModified":"2022-01-16T07:50:59+00:00","description":"In this tutorial, you will learn about the JavaScript String type and how to manipulate strings effectively.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-string-type\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-string-type\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-string-type\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript String Type"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86821"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=86821"}],"version-history":[{"count":4,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86821\/revisions"}],"predecessor-version":[{"id":89014,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86821\/revisions\/89014"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=86821"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
{"id":87169,"date":"2020-05-21T17:30:08","date_gmt":"2020-05-22T00:30:08","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=87169"},"modified":"2020-05-21T17:38:58","modified_gmt":"2020-05-22T00:38:58","slug":"javascript-dispatchevent","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/","title":{"rendered":"JavaScript dispatchEvent"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to programmatically create and dispatch events using <code>Event<\/code> constructor and <code>dispatchEvent()<\/code> method.<\/p>\n\n\n\n<p>Typically, events are generated by user actions such as <a href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-mouse-events\/\">mouse clicks<\/a> and <a href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-keyboard-events\/\">key presses<\/a>. In addition, events can be generated from code.<\/p>\n\n\n\n<p>To generate an event programmatically, you follow these steps:<\/p>\n\n\n\n<ul><li>First, create a new <code>Event<\/code> object using <code>Event<\/code> constructor.<\/li><li>Then, trigger the event using <code>element.dispatchEvent()<\/code> method.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Event constructor<\/h2>\n\n\n\n<p>To create a new event, you use the <code>Event<\/code> constructor like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> event = <span class=\"hljs-keyword\">new<\/span> Event(type, &#91;,options]);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>Event<\/code> constructor accepts two parameters:<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">type<\/h3>\n\n\n\n<p>is a string that specifies the event type such as <code>'click'<\/code>.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">options<\/h3>\n\n\n\n<p>is an object with two optional properties:<\/p>\n\n\n\n<ul><li><code>bubbles<\/code>: is a boolean value that determines if the event bubbles or not. If it is <code>true<\/code> then the event is bubbled and vice versa.<\/li><li><code>cancelable<\/code>: is also a boolean value that specifies whether the event is cancelable when it is <code>true<\/code>.<\/li><\/ul>\n\n\n\n<p>By default, the <code>options<\/code> object is:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{ <span class=\"hljs-attribute\">bubbles<\/span>: false, cancelable: false}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>For example, the following creates a new <code>click<\/code> event with the default <code>options<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> clickEvent = <span class=\"hljs-keyword\">new<\/span> Event(<span class=\"hljs-string\">'click'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">dispatchEvent method<\/h2>\n\n\n\n<p>After creating an event, you can fire it on a target element using the <code>dispatchEvent()<\/code> method like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">element<\/span><span class=\"hljs-selector-class\">.dispatchEvent<\/span>(<span class=\"hljs-selector-tag\">event<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>For example, the following code shows how to create the <code>click<\/code> event and fire it on a button:<\/p>\n\n\n\n<p>HTML:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"btn\"<\/span>&gt;<\/span>Test<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">button<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>JavaScript:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> btn = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'.btn'<\/span>);\n\n btn.addEventListener(<span class=\"hljs-string\">'click'<\/span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\"><\/span>) <\/span>{\n        alert(<span class=\"hljs-string\">'Mouse Clicked'<\/span>);\n });\n\n<span class=\"hljs-keyword\">let<\/span> clickEvent = <span class=\"hljs-keyword\">new<\/span> Event(<span class=\"hljs-string\">'click'<\/span>);\nbtn.dispatchEvent(clickEvent);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p><a href=\"\/sample\/dom\/dispatchevent\/\" target=\"_blank\" rel=\"noreferrer noopener\">Click this link to see the demo<\/a>.<\/p>\n\n\n\n<p>In this example, the event handler is executed as if the <code>click<\/code> event were generated by user actions.<\/p>\n\n\n\n<p>If the event comes from the user actions, the <code>event.isTrusted<\/code> property is set to <code>true<\/code>. In case the event is generated by code, the <code>event.isTrusted<\/code> is <code>false<\/code>. Therefore, you can examine the value of <code>event.isTrusted<\/code> property to check the &#8220;authenticity&#8221; of the event.<\/p>\n\n\n\n<p>The <code>Event<\/code> is the base type of <code>UIEvent<\/code> which is the base type of other specific event types such as <code>MouseEvent<\/code>, <code>TouchEvent<\/code>, <code>FocusEvent<\/code>, and <code>KeyboardEvent<\/code>.<\/p>\n\n\n\n<p>It&#8217;s a good practice to use the specialized event constructor like MouseEvent instead of using the generic <code>Event<\/code> type because these constructors provide more information specific to the events.<\/p>\n\n\n\n<p>For example, the <code>MouseEvent<\/code> event has many other properties such as <code>clientX<\/code> and <code>clientY<\/code> that specify the horizontal and vertical coordinates at which the event occurred relative to the viewport:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> clickEvent = <span class=\"hljs-keyword\">new<\/span> MouseEvent(<span class=\"hljs-string\">\"click\"<\/span>, {\n    <span class=\"hljs-attr\">bubbles<\/span>: <span class=\"hljs-literal\">true<\/span>,\n    <span class=\"hljs-attr\">cancelable<\/span>: <span class=\"hljs-literal\">true<\/span>,\n    <span class=\"hljs-attr\">clientX<\/span>: <span class=\"hljs-number\">150<\/span>,\n    <span class=\"hljs-attr\">clientY<\/span>: <span class=\"hljs-number\">150<\/span>\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following link shows the full list of properties of the <a href=\"https:\/\/www.w3.org\/TR\/uievents\/#idl-mouseevent\" target=\"_blank\" rel=\"noreferrer noopener\">MouseEvent<\/a><\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Use the specific event constructor such as <code>MouseEvent<\/code> and call <code>dispatchEvent()<\/code> method on an element to generate an event from code.<\/li><li>Use <code>event.isTrusted<\/code> to examine whether the event is generated from code or user actions.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"87169\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/\"\n\t\t\t\tdata-post-title=\"JavaScript dispatchEvent\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"87169\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/\"\n\t\t\t\tdata-post-title=\"JavaScript dispatchEvent\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to programmatically create and dispatch events using the Event constructor and dispatchEvent() method.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":85107,"menu_order":48,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript dispatchEvent(): Generate Events programmatically<\/title>\n<meta name=\"description\" content=\"In this tutorial, you&#039;ll learn how to programmatically create and dispatch events using Event constructor and dispatchEvent() method.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript dispatchEvent(): Generate Events programmatically\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you&#039;ll learn how to programmatically create and dispatch events using Event constructor and dispatchEvent() method.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2020-05-22T00:38:58+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/\",\"name\":\"JavaScript dispatchEvent(): Generate Events programmatically\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-05-22T00:30:08+00:00\",\"dateModified\":\"2020-05-22T00:38:58+00:00\",\"description\":\"In this tutorial, you'll learn how to programmatically create and dispatch events using Event constructor and dispatchEvent() method.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript DOM\",\"item\":\"https:\/\/www.javascripttutorial.net\/javascript-dom\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript dispatchEvent\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript dispatchEvent(): Generate Events programmatically","description":"In this tutorial, you'll learn how to programmatically create and dispatch events using Event constructor and dispatchEvent() method.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript dispatchEvent(): Generate Events programmatically","og_description":"In this tutorial, you'll learn how to programmatically create and dispatch events using Event constructor and dispatchEvent() method.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/","og_site_name":"PriFix Tutorial","article_modified_time":"2020-05-22T00:38:58+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/","url":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/","name":"JavaScript dispatchEvent(): Generate Events programmatically","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-05-22T00:30:08+00:00","dateModified":"2020-05-22T00:38:58+00:00","description":"In this tutorial, you'll learn how to programmatically create and dispatch events using Event constructor and dispatchEvent() method.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-dispatchevent\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"JavaScript DOM","item":"https:\/\/www.javascripttutorial.net\/javascript-dom\/"},{"@type":"ListItem","position":3,"name":"JavaScript dispatchEvent"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87169"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=87169"}],"version-history":[{"count":5,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87169\/revisions"}],"predecessor-version":[{"id":87174,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/87169\/revisions\/87174"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/85107"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=87169"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
{"id":84662,"date":"2019-12-16T02:21:47","date_gmt":"2019-12-16T10:21:47","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=84662"},"modified":"2022-08-16T23:06:03","modified_gmt":"2022-08-17T06:06:03","slug":"javascript-call-function","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/javascript-call\/","title":{"rendered":"JavaScript call() Method"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about the JavaScript <code>call()<\/code> method and how to use it more effectively.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the JavaScript call() method<\/h2>\n\n\n\n<p>In JavaScript, a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-function\/\">function<\/a> is an instance of the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-function-type\/\">Function<\/a><\/code> type. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">add<\/span>(<span class=\"hljs-params\">x, y<\/span>) <\/span>{\n  <span class=\"hljs-keyword\">return<\/span> x + y;\n}\n\n<span class=\"hljs-built_in\">console<\/span>.log(add <span class=\"hljs-keyword\">instanceof<\/span> <span class=\"hljs-built_in\">Function<\/span>); <span class=\"hljs-comment\">\/\/ true<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>Function.prototype<\/code> type has the <code>call()<\/code> method with the following syntax:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">functionName.call(thisArg, arg1, arg2, ...);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax, the <code>call()<\/code> method calls a function <code>functionName<\/code> with the arguments (<code>arg1<\/code>, <code>arg2<\/code>, &#8230;) and the <code>this<\/code> set to <code>thisArg<\/code> object inside the function.<\/p>\n\n\n\n<ul><li>The <code>thisArg<\/code> is the object that the <code>this<\/code> object references inside the function <code>functionName<\/code>.<\/li><li>The <code>arg1<\/code>, <code>arg2<\/code>, .. are the function arguments passed into the <code>functionName<\/code>.<\/li><\/ul>\n\n\n\n<p>The <code>call()<\/code> method returns the result of calling the <code>functionName()<\/code>. <\/p>\n\n\n\n<p>The following example defines the <code>add()<\/code> function and calls it normally:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">add<\/span>(<span class=\"hljs-params\">x, y<\/span>) <\/span>{\n  <span class=\"hljs-keyword\">return<\/span> x + y;\n}\n\n<span class=\"hljs-keyword\">let<\/span> result = add(<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(result); <span class=\"hljs-comment\">\/\/ 30<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following calls the <code>add()<\/code> function but use the <code>call()<\/code> method instead:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">add<\/span>(<span class=\"hljs-params\">x, y<\/span>) <\/span>{\n  <span class=\"hljs-keyword\">return<\/span> x + y;\n}\n\n<span class=\"hljs-keyword\">let<\/span> result = add.call(<span class=\"hljs-keyword\">this<\/span>, <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(result); <span class=\"hljs-comment\">\/\/ 30<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>By default, the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-this\/\">this<\/a><\/code> inside the function is set to the <a href=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-globalthis\/\">global object<\/a> i.e., <code>window<\/code> in the web browsers and <code>global<\/code> in Node.js.<\/p>\n\n\n\n<p class=\"note\">Note that in the strict mode, the <code>this<\/code>&nbsp;inside the function is set to <code>undefined<\/code> instead of the global object.<\/p>\n\n\n\n<p>Consider the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var<\/span> greeting = <span class=\"hljs-string\">'Hi'<\/span>;\n\n<span class=\"hljs-keyword\">var<\/span> messenger = {\n    <span class=\"hljs-attr\">greeting<\/span>: <span class=\"hljs-string\">'Hello'<\/span>\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">say<\/span>(<span class=\"hljs-params\">name<\/span>) <\/span>{\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-keyword\">this<\/span>.greeting + <span class=\"hljs-string\">' '<\/span> + name);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Inside the <code>say()<\/code> function, we reference the <code>greeting<\/code> via the <code>this<\/code> value. If you just invoke the <code>say()<\/code> function via the <code>call()<\/code> method as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">say.call(<span class=\"hljs-keyword\">this<\/span>,<span class=\"hljs-string\">'John'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>It&#8217;ll show the following output to the console:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-string\">\"Hi John\"<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, when you invoke the <code>call()<\/code> method of <code>say<\/code> function object and pass the <code>messenger<\/code> object as the <code>this<\/code> value:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">say.call(messenger,<span class=\"hljs-string\">'John'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The output will be:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-string\">\"Hello John\"<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this case, the <code>this<\/code> value inside the <code>say()<\/code> function references the <code>messenger<\/code> object, not the global object.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Using the JavaScript call() method to chain constructors for an object<\/h2>\n\n\n\n<p>You can use the <code>call()<\/code> method for chaining constructors of an object. Consider the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">Box<\/span>(<span class=\"hljs-params\">height, width<\/span>) <\/span>{\n  <span class=\"hljs-keyword\">this<\/span>.height = height;\n  <span class=\"hljs-keyword\">this<\/span>.width = width;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">Widget<\/span>(<span class=\"hljs-params\">height, width, color<\/span>) <\/span>{\n  Box.call(<span class=\"hljs-keyword\">this<\/span>, height, width);\n  <span class=\"hljs-keyword\">this<\/span>.color = color;\n}\n\n<span class=\"hljs-keyword\">let<\/span> widget = <span class=\"hljs-keyword\">new<\/span> Widget(<span class=\"hljs-string\">'red'<\/span>, <span class=\"hljs-number\">100<\/span>, <span class=\"hljs-number\">200<\/span>);\n\n<span class=\"hljs-built_in\">console<\/span>.log(widget);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">Widget { <span class=\"hljs-attr\">height<\/span>: <span class=\"hljs-string\">'red'<\/span>, <span class=\"hljs-attr\">width<\/span>: <span class=\"hljs-number\">100<\/span>, <span class=\"hljs-attr\">color<\/span>: <span class=\"hljs-number\">200<\/span> }<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example:<\/p>\n\n\n\n<ul><li>First, initialize the <code>Box<\/code> object with two properties: <code>height<\/code> and <code>width<\/code>.<\/li><li>Second, invoke the <code>call()<\/code> method of the <code>Box<\/code> object inside the <code>Widget<\/code> object, set the <code>this<\/code> value to the <code>Widget<\/code> object.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Using the JavaScript call() method for function borrowing<\/h2>\n\n\n\n<p>The following example illustrates how to use the call() method for borrowing functions:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> car = {\n  <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'car'<\/span>,\n  start() {\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Start the '<\/span> + <span class=\"hljs-keyword\">this<\/span>.name);\n  },\n  speedUp() {\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Speed up the '<\/span> + <span class=\"hljs-keyword\">this<\/span>.name);\n  },\n  stop() {\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Stop the '<\/span> + <span class=\"hljs-keyword\">this<\/span>.name);\n  },\n};\n\n<span class=\"hljs-keyword\">const<\/span> aircraft = {\n  <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'aircraft'<\/span>,\n  fly() {\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Fly'<\/span>);\n  },\n};\n\ncar.start.call(aircraft);\ncar.speedUp.call(aircraft);\naircraft.fly();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">Start the aircraft\nSpeed up the aircraft\nFly<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, define a car object with one property name and three methods <code>start<\/code>, <code>speedUp<\/code>, and <code>stop<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> car = {\n  <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'car'<\/span>,\n  start() {\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Start the '<\/span> + <span class=\"hljs-keyword\">this<\/span>.name);\n  },\n  speedUp() {\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Speed up the '<\/span> + <span class=\"hljs-keyword\">this<\/span>.name);\n  },\n  stop() {\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Stop the '<\/span> + <span class=\"hljs-keyword\">this<\/span>.name);\n  },\n};<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, define the aircraft object with one property name and a method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> aircraft = {\n  <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'aircraft'<\/span>,\n  fly() {\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Fly'<\/span>);\n  },\n};<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, call the <code>start()<\/code> and <code>speedUp()<\/code> method of the <code>car<\/code> object and the <code>fly()<\/code> method of the <code>aircraft<\/code> object. However, passing the <code>aircraft<\/code> as the first argument into the <code>start()<\/code> and <code>speedUp()<\/code> methods:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">car.start.call(aircraft);\ncar.speedUp.call(aircraft);\naircraft.fly();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Inside the <code>start()<\/code> and <code>speedUp()<\/code> methods, the <code>this<\/code> references the <code>aircraft<\/code> object, not the <code>car<\/code> object. Therefore, the <code>this.name<\/code> returns the <code>'aircraf'<\/code> string. Hence, the methods output the following message:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"plaintext\" data-shcb-language-slug=\"plaintext\"><span><code class=\"hljs language-plaintext\">Start the aircraft\nSpeed up the aircraft<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">plaintext<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">plaintext<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Technically, the <code>aircraft<\/code> object borrows the <code>start()<\/code> and <code>speedUp()<\/code> method of the <code>car<\/code> object. And function borrowing refers to an object that uses a method of another object.<\/p>\n\n\n\n<p>The following example illustrates how the <code>arguments<\/code> object borrows the <code>filter()<\/code> method of the <code>Array.prototype<\/code> via the <code>call()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-18\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">isOdd<\/span>(<span class=\"hljs-params\">number<\/span>) <\/span>{\n  <span class=\"hljs-keyword\">return<\/span> number % <span class=\"hljs-number\">2<\/span>;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">getOddNumbers<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n  <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-built_in\">Array<\/span>.prototype.filter.call(<span class=\"hljs-built_in\">arguments<\/span>, isOdd);\n}\n\n<span class=\"hljs-keyword\">let<\/span> results = getOddNumbers(<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">4<\/span>, <span class=\"hljs-number\">8<\/span>, <span class=\"hljs-number\">9<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(results);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-18\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-19\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">&#91; <span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">9<\/span> ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-19\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, define the <code>isOdd()<\/code> function that returns true if the number is an odd number:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-20\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">isOdd<\/span>(<span class=\"hljs-params\">number<\/span>) <\/span>{\n  <span class=\"hljs-keyword\">return<\/span> number % <span class=\"hljs-number\">2<\/span>;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-20\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, define the <code>getOddNumbers()<\/code> function that accepts any number of arguments and returns an array that contains only odd numbers:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-21\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">getOddNumbers<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n  <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-built_in\">Array<\/span>.prototype.filter.call(<span class=\"hljs-built_in\">arguments<\/span>, isOdd);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-21\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>arguments<\/code> object borrows the filter() method of the <code>Array.prototype<\/code> object. <\/p>\n\n\n\n<p>Third, call the <code>getOddNumbers()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-22\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> results = getOddNumbers(<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">4<\/span>, <span class=\"hljs-number\">8<\/span>, <span class=\"hljs-number\">9<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(results);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-22\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned about the JavaScript <code>call()<\/code> method and how to use it more effectively.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"84662\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-call\/\"\n\t\t\t\tdata-post-title=\"JavaScript call() Method\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"84662\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/javascript-call\/\"\n\t\t\t\tdata-post-title=\"JavaScript call() Method\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn about the JavaScript call() method and how to apply it in various contexts.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":75,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript call() Method and Its Practical Applications<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn about the JavaScript call() method and how to apply it in various contexts.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/javascript-call\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript call() Method and Its Practical Applications\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn about the JavaScript call() method and how to apply it in various contexts.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/javascript-call\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-08-17T06:06:03+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-call\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/javascript-call\/\",\"name\":\"JavaScript call() Method and Its Practical Applications\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2019-12-16T10:21:47+00:00\",\"dateModified\":\"2022-08-17T06:06:03+00:00\",\"description\":\"In this tutorial, you will learn about the JavaScript call() method and how to apply it in various contexts.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-call\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/javascript-call\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/javascript-call\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript call() Method\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript call() Method and Its Practical Applications","description":"In this tutorial, you will learn about the JavaScript call() method and how to apply it in various contexts.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/javascript-call\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript call() Method and Its Practical Applications","og_description":"In this tutorial, you will learn about the JavaScript call() method and how to apply it in various contexts.","og_url":"https:\/\/www.javascripttutorial.net\/javascript-call\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-08-17T06:06:03+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/javascript-call\/","url":"https:\/\/www.javascripttutorial.net\/javascript-call\/","name":"JavaScript call() Method and Its Practical Applications","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2019-12-16T10:21:47+00:00","dateModified":"2022-08-17T06:06:03+00:00","description":"In this tutorial, you will learn about the JavaScript call() method and how to apply it in various contexts.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/javascript-call\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/javascript-call\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/javascript-call\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript call() Method"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/84662"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=84662"}],"version-history":[{"count":5,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/84662\/revisions"}],"predecessor-version":[{"id":90234,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/84662\/revisions\/90234"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=84662"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
{"id":84780,"date":"2019-12-21T06:30:39","date_gmt":"2019-12-21T14:30:39","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=84780"},"modified":"2022-08-16T23:42:12","modified_gmt":"2022-08-17T06:42:12","slug":"javascript-yield","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/","title":{"rendered":"JavaScript yield"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about the JavaScript <code>yield<\/code> keyword and how to use it in generator functions.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the JavaScript <code>yield<\/code> keyword<\/h2>\n\n\n\n<p>The <code>yield<\/code> keyword allows you to pause and resume a <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-generators\/\">generator<\/a> function (<code>function*<\/code>).<\/p>\n\n\n\n<p>The following shows the syntax of the <code>yield<\/code> keyword:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">&#91;variable_name] = <span class=\"hljs-keyword\">yield<\/span> &#91;expression];\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax:<\/p>\n\n\n\n<ul><li>The <code>expression<\/code> specifies the value to return from a generator function via the iteration protocol. If you omit the <code>expression<\/code>, the <code>yield<\/code> returns <code>undefined<\/code>.<\/li><li>The <code>variable_name<\/code> stores the optional value passed to the <code>next()<\/code> method of the iterator object.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript <code>yield<\/code> examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the <code>yield<\/code> keyword.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">A) Returning a value<\/h3>\n\n\n\n<p>The following trivial example illustrates how to use the <code>yield<\/code> keyword to return a value from a generator function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>* <span class=\"hljs-title\">foo<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{ \n    <span class=\"hljs-keyword\">yield<\/span> <span class=\"hljs-number\">1<\/span>;\n    <span class=\"hljs-keyword\">yield<\/span> <span class=\"hljs-number\">2<\/span>;\n    <span class=\"hljs-keyword\">yield<\/span> <span class=\"hljs-number\">3<\/span>;\n}\n\n<span class=\"hljs-keyword\">let<\/span> f = foo();\n\n<span class=\"hljs-built_in\">console<\/span>.log(f.next());\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{ <span class=\"hljs-attribute\">value<\/span>: <span class=\"hljs-number\">1<\/span>, done: false }\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>As you can see the value that follows the <code>yield<\/code> is added to the <code>value<\/code> property of the return object when the <code>next()<\/code> is called:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">yield<\/span> <span class=\"hljs-number\">1<\/span>;\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">B) Returning <code>undefined<\/code><\/h3>\n\n\n\n<p>This example illustrates how to use the <code>yield<\/code> keyword to return <code>undefined<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>* <span class=\"hljs-title\">bar<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">yield<\/span>;\n}\n\n<span class=\"hljs-keyword\">let<\/span> b = bar();\n<span class=\"hljs-built_in\">console<\/span>.log(b.next()); \n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<p>Output:<\/p>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{ <span class=\"hljs-attribute\">value<\/span>: undefined, done: false }\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">C) Passing a value to the <code>next()<\/code> method<\/h3>\n\n\n\n<p>In the following example, the <code>yield<\/code> keyword is an expression that evaluates the argument passed to the <code>next()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>* <span class=\"hljs-title\">generate<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">let<\/span> result = <span class=\"hljs-keyword\">yield<\/span>;\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">`result is <span class=\"hljs-subst\">${result}<\/span>`<\/span>);\n}\n\n<span class=\"hljs-keyword\">let<\/span> g = generate();\n<span class=\"hljs-built_in\">console<\/span>.log(g.next()); \n\n<span class=\"hljs-built_in\">console<\/span>.log(g.next(<span class=\"hljs-number\">1000<\/span>));\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The first call <code>g.next()<\/code> returns the following object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{ <span class=\"hljs-attribute\">value<\/span>: undefined, done: false }\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The second call g.next() carries the following tasks:<\/p>\n\n\n\n<ul><li>Evaluate <code>yield<\/code> to 1000.<\/li><li>Assign <code>result<\/code> the value of <code>yield<\/code>, which is <code>1000<\/code>.<\/li><li>Output the message and return the object<\/li><\/ul>\n\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">result<\/span> <span class=\"hljs-selector-tag\">is<\/span> 1000\n{ <span class=\"hljs-attribute\">value<\/span>: undefined, done: true }\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">D) Using <code>yield<\/code> in an array<\/h3>\n\n\n\n<p>The following example uses the <code>yield<\/code> keyword as elements of an <a href=\"https:\/\/www.javascripttutorial.net\/javascript-array\/\">array<\/a>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>* <span class=\"hljs-title\">baz<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">let<\/span> arr = &#91;<span class=\"hljs-keyword\">yield<\/span>, <span class=\"hljs-keyword\">yield<\/span>];\n    <span class=\"hljs-built_in\">console<\/span>.log(arr);\n}\n\n<span class=\"hljs-keyword\">var<\/span> z = baz();\n\n<span class=\"hljs-built_in\">console<\/span>.log(z.next());  \n<span class=\"hljs-built_in\">console<\/span>.log(z.next(<span class=\"hljs-number\">1<\/span>)); \n<span class=\"hljs-built_in\">console<\/span>.log(z.next(<span class=\"hljs-number\">2<\/span>));\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The first call <code>z.next()<\/code> sets the first element of the <code>arr<\/code> array to 1 and returns the following object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{ <span class=\"hljs-attribute\">value<\/span>: undefined, done: false }\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The second call <code>z.next()<\/code> sets the second of the <code>arr<\/code> array to 2 and returns the following object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{ <span class=\"hljs-attribute\">value<\/span>: undefined, done: false }\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The third call <code>z.next()<\/code> shows the contents of the <code>arr<\/code> array and returns the following object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-attr\">&#91; 1, 2 ]<\/span>\n{ <span class=\"hljs-attribute\">value<\/span>: undefined, done: true }\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">E) Using <code>yield<\/code> to return an array<\/h3>\n\n\n\n<p>The following generator function uses the <code>yield<\/code> keyword to return an array:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>* <span class=\"hljs-title\">yieldArray<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">yield<\/span> <span class=\"hljs-number\">1<\/span>;\n    <span class=\"hljs-keyword\">yield<\/span> &#91; <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span>, <span class=\"hljs-number\">40<\/span> ];\n}\n\n<span class=\"hljs-keyword\">let<\/span> y = yieldArray();\n\n<span class=\"hljs-built_in\">console<\/span>.log(y.next()); \n<span class=\"hljs-built_in\">console<\/span>.log(y.next()); \n<span class=\"hljs-built_in\">console<\/span>.log(y.next());\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The first call <code>y.next()<\/code> returns the following object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{ <span class=\"hljs-attribute\">value<\/span>: <span class=\"hljs-number\">1<\/span>, done: false }\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The second call <code>y.next()<\/code> returns the following object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{ <span class=\"hljs-attribute\">value<\/span>: &#91; <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span>, <span class=\"hljs-number\">40<\/span> ], done: false }\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this case, <code>yield<\/code> sets the array <code>[ 20, 30, 40 ]<\/code> as the value of the <code>value<\/code> property of the return object.<\/p>\n\n\n\n<p>The third call <code>y.next()<\/code> returns the following object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{ <span class=\"hljs-attribute\">value<\/span>: undefined, done: true }\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">F) Using the <code>yield<\/code> to return individual elements of an array<\/h3>\n\n\n\n<p>See the following generator function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-18\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span>* <span class=\"hljs-title\">yieldArrayElements<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">yield<\/span> <span class=\"hljs-number\">1<\/span>;\n    <span class=\"hljs-keyword\">yield<\/span>* &#91; <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span>, <span class=\"hljs-number\">40<\/span> ];\n}\n\n<span class=\"hljs-keyword\">let<\/span> a = yieldArrayElements();\n\n<span class=\"hljs-built_in\">console<\/span>.log(a.next()); <span class=\"hljs-comment\">\/\/ { value: 1, done: false }<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(a.next()); <span class=\"hljs-comment\">\/\/ { value: 20, done: false }<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(a.next()); <span class=\"hljs-comment\">\/\/ { value: 30, done: false }<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(a.next()); <span class=\"hljs-comment\">\/\/ { value: 40, done: false }<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-18\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, <code>yield*<\/code> is the new syntax. The <code>yield*<\/code> expression is used to delegate to another iterable object or generator.<\/p>\n\n\n\n<p>As a result, the following expression returns the individual elements of the array <code>[20, 30, 40]<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-19\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">yield<\/span>* &#91;<span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span>, <span class=\"hljs-number\">40<\/span>];\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-19\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned about the JavaScript <code>yield<\/code> keyword and how to use it in function generators.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"84780\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/\"\n\t\t\t\tdata-post-title=\"JavaScript yield\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"84780\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/\"\n\t\t\t\tdata-post-title=\"JavaScript yield\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn about the JavaScript yield keyword and how to use it in the generator functions.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":96,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript yield<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn about the JavaScript yield keyword and how to use it in generator functions.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript yield\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn about the JavaScript yield keyword and how to use it in generator functions.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-08-17T06:42:12+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/\",\"name\":\"JavaScript yield\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2019-12-21T14:30:39+00:00\",\"dateModified\":\"2022-08-17T06:42:12+00:00\",\"description\":\"In this tutorial, you will learn about the JavaScript yield keyword and how to use it in generator functions.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript yield\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript yield","description":"In this tutorial, you will learn about the JavaScript yield keyword and how to use it in generator functions.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript yield","og_description":"In this tutorial, you will learn about the JavaScript yield keyword and how to use it in generator functions.","og_url":"https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-08-17T06:42:12+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/","url":"https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/","name":"JavaScript yield","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2019-12-21T14:30:39+00:00","dateModified":"2022-08-17T06:42:12+00:00","description":"In this tutorial, you will learn about the JavaScript yield keyword and how to use it in generator functions.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/es6\/javascript-yield\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript yield"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/84780"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=84780"}],"version-history":[{"count":2,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/84780\/revisions"}],"predecessor-version":[{"id":90249,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/84780\/revisions\/90249"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=84780"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
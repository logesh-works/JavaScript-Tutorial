{"id":505,"date":"2016-08-26T20:02:59","date_gmt":"2016-08-27T03:02:59","guid":{"rendered":"http:\/\/www.javascripttutorial.net\/?page_id=505"},"modified":"2022-01-22T00:03:40","modified_gmt":"2022-01-22T08:03:40","slug":"javascript-const","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/","title":{"rendered":"JavaScript const: Declaring Constants in ES6"},"content":{"rendered":"\r\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to define constants by using the JavaScript <code>const<\/code> keyword.<\/p>\r\n\r\n\r\n\r\n<h2 class=\"wp-block-heading\">Introduction to the JavaScript const keyword<\/h2>\r\n\r\n\r\n\r\n<p>ES6 provides a new way of declaring a constant by using the <code>const<\/code> keyword. The <code>const<\/code> keyword creates a read-only reference to a value.<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> CONSTANT_NAME = value;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>By convention, the constant identifiers are in uppercase.<\/p>\r\n\r\n\r\n\r\n<p>Like the <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-let\/\">let<\/a> keyword, the <code>const<\/code> keyword declares blocked-scope variables. However, the block-scoped variables declared by the const keyword can&#8217;t be <strong>reassigned<\/strong>.<\/p>\r\n\r\n\r\n\r\n<p>The variables declared by the <code>let<\/code> keyword are mutable. It means that you can change their values anytime you want as shown in the following example:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> a = <span class=\"hljs-number\">10<\/span>;\r\na = <span class=\"hljs-number\">20<\/span>;\r\na = a + <span class=\"hljs-number\">5<\/span>;\r\n<span class=\"hljs-built_in\">console<\/span>.log(a); <span class=\"hljs-comment\">\/\/ 25<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>However, variables created by the <code>const<\/code> keyword are &#8220;immutable&#8221;. In other words, you can&#8217;t reassign them to different values. <\/p>\r\n\r\n\r\n\r\n<p>If you attempt to reassign a variable declared by the <code>const<\/code> keyword, you&#8217;ll get a <code>TypeError<\/code> like this:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> RATE = <span class=\"hljs-number\">0.1<\/span>;\r\nRATE = <span class=\"hljs-number\">0.2<\/span>; <span class=\"hljs-comment\">\/\/ TypeError<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Unlike the let keyword, you need to initialize the value to the variable declared by the const keyword. <\/p>\r\n\r\n\r\n\r\n<p>The following example causes a <code>SyntaxError<\/code> due to missing the initializer in the <code>const<\/code> variable declaration:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> RED; <span class=\"hljs-comment\">\/\/ SyntaxError<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<h2 class=\"wp-block-heading\">JavaScript const and Objects<\/h2>\r\n\r\n\r\n\r\n<p>The <code>const<\/code> keyword ensures that the variable it creates is read-only. However, it doesn&#8217;t mean that the actual value to which the <code>const<\/code> variable reference is immutable. For example:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> person = { <span class=\"hljs-attr\">age<\/span>: <span class=\"hljs-number\">20<\/span> };\r\nperson.age = <span class=\"hljs-number\">30<\/span>; <span class=\"hljs-comment\">\/\/ OK<\/span>\r\n<span class=\"hljs-built_in\">console<\/span>.log(person.age); <span class=\"hljs-comment\">\/\/ 30<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Even though the <code>person<\/code> variable is a constant, you can change the value of its property. <\/p>\r\n\r\n\r\n\r\n<p>However, you cannot reassign a different value to the <code>person<\/code> constant like this:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">person = { <span class=\"hljs-attr\">age<\/span>: <span class=\"hljs-number\">40<\/span> }; <span class=\"hljs-comment\">\/\/ TypeError<\/span>\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>If you want the value of the&nbsp;<code>person<\/code> object to be immutable, you have to freeze it by using the <code>Object.freeze()<\/code> method:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> person = <span class=\"hljs-built_in\">Object<\/span>.freeze({<span class=\"hljs-attr\">age<\/span>: <span class=\"hljs-number\">20<\/span>});\r\nperson.age = <span class=\"hljs-number\">30<\/span>; <span class=\"hljs-comment\">\/\/ TypeError<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Note that <code>Object.freeze()<\/code> is shallow, meaning that it can freeze the properties of the object, not the objects referenced by the properties. <\/p>\r\n\r\n\r\n\r\n<p>For example, the <code>company<\/code>&nbsp;object is constant and frozen.<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> company = <span class=\"hljs-built_in\">Object<\/span>.freeze({\r\n    <span class=\"hljs-attr\">name<\/span>: <span class=\"hljs-string\">'ABC corp'<\/span>,\r\n    <span class=\"hljs-attr\">address<\/span>: {\r\n        <span class=\"hljs-attr\">street<\/span>: <span class=\"hljs-string\">'North 1st street'<\/span>,\r\n        <span class=\"hljs-attr\">city<\/span>: <span class=\"hljs-string\">'San Jose'<\/span>,\r\n        <span class=\"hljs-attr\">state<\/span>: <span class=\"hljs-string\">'CA'<\/span>,\r\n        <span class=\"hljs-attr\">zipcode<\/span>: <span class=\"hljs-number\">95134<\/span>\r\n    }\r\n});<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>But the <code>company.address<\/code> object is not immutable, you can add a new property to the <code>company.address<\/code> object as follows:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">company.address.country = <span class=\"hljs-string\">'USA'<\/span>; <span class=\"hljs-comment\">\/\/ OK<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<h2 class=\"wp-block-heading\">JavaScript const and Arrays<\/h2>\r\n\r\n\r\n\r\n<p>Consider the following example:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> colors = &#91;<span class=\"hljs-string\">'red'<\/span>];\r\ncolors.push(<span class=\"hljs-string\">'green'<\/span>);\r\n<span class=\"hljs-built_in\">console<\/span>.log(colors); <span class=\"hljs-comment\">\/\/ &#91;\"red\", \"green\"]<\/span>\r\n\r\ncolors.pop();\r\ncolors.pop();\r\n<span class=\"hljs-built_in\">console<\/span>.log(colors); <span class=\"hljs-comment\">\/\/ &#91;]<\/span>\r\n\r\ncolors = &#91;]; <span class=\"hljs-comment\">\/\/ TypeError<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>In this example, we declare an array <code>colors<\/code> that has one element using the <code>const<\/code> keyword. Then, we can change the array&#8217;s elements by adding the <code>green<\/code> color. However, we cannot reassign the array <code>colors<\/code> to another array.<\/p>\r\n\r\n\r\n\r\n<h2 class=\"wp-block-heading\">JavaScript <code>const<\/code> in a <code>for<\/code> loop<\/h2>\r\n\r\n\r\n\r\n<p>ES6 provides a new construct called <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-for-of\/\"><code>for...of<\/code><\/a> that allows you to create a loop iterating over iterable objects such as <a href=\"https:\/\/www.javascripttutorial.net\/javascript-array\/\">arrays<\/a>, <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-map\/\">maps<\/a>, and <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-set\/\">sets<\/a>.<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> scores = &#91;<span class=\"hljs-number\">75<\/span>, <span class=\"hljs-number\">80<\/span>, <span class=\"hljs-number\">95<\/span>];\r\n\r\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> score <span class=\"hljs-keyword\">of<\/span> scores) {\r\n\t<span class=\"hljs-built_in\">console<\/span>.log(score);\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>If you don&#8217;t intend to modify the <code>score<\/code> variable inside the loop, you can use the <code>const<\/code> keyword instead:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> scores = &#91;<span class=\"hljs-number\">75<\/span>, <span class=\"hljs-number\">80<\/span>, <span class=\"hljs-number\">95<\/span>];\r\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">const<\/span> score <span class=\"hljs-keyword\">of<\/span> scores) {\r\n    <span class=\"hljs-built_in\">console<\/span>.log(score);\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>In this example, the <code>for...of<\/code>&nbsp; &nbsp;creates a new binding for the <code>const<\/code> keyword in each loop iteration. In other words, a new <code>score<\/code> constant is created in each iteration.<\/p>\r\n\r\n\r\n\r\n<p>Notice that the <code>const<\/code> will not work in an imperative <a href=\"https:\/\/www.javascripttutorial.net\/javascript-for-loop\/\">for <\/a>loop. Trying to use the <code>const<\/code> keyword to declare a variable in the imperative <code>for<\/code> loop will result in a <code>TypeError<\/code>:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">const<\/span> i = <span class=\"hljs-number\">0<\/span>; i &lt; scores.length; i++) { <span class=\"hljs-comment\">\/\/ TypeError<\/span>\r\n    <span class=\"hljs-built_in\">console<\/span>.log(scores&#91;i]);\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>The reason is that the declaration is only evaluated once before the loop body starts.<\/p>\r\n\r\n\r\n\r\n<h2 class=\"wp-block-heading\">Summary<\/h2>\r\n\r\n\r\n\r\n<ul><li>The <code>const<\/code> keyword creates a read-only reference to a value. The readonly reference cannot be reassigned but the value can be change.<\/li><li>The variables declared by the const keyword are blocked-scope and cannot be redeclared.<\/li><\/ul>\r\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"505\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/\"\n\t\t\t\tdata-post-title=\"JavaScript const: Declaring Constants in ES6\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"505\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/\"\n\t\t\t\tdata-post-title=\"JavaScript const: Declaring Constants in ES6\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to define constants by using the JavaScript const keyword.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":114,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript const: Declaring Constants in ES6<\/title>\n<meta name=\"description\" content=\"This tutorial shows you how to use the JavaScript const keyword to declare constants whose values are immutable.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript const: Declaring Constants in ES6\" \/>\n<meta property=\"og:description\" content=\"This tutorial shows you how to use the JavaScript const keyword to declare constants whose values are immutable.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-22T08:03:40+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/\",\"name\":\"JavaScript const: Declaring Constants in ES6\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2016-08-27T03:02:59+00:00\",\"dateModified\":\"2022-01-22T08:03:40+00:00\",\"description\":\"This tutorial shows you how to use the JavaScript const keyword to declare constants whose values are immutable.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript const: Declaring Constants in ES6\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript const: Declaring Constants in ES6","description":"This tutorial shows you how to use the JavaScript const keyword to declare constants whose values are immutable.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript const: Declaring Constants in ES6","og_description":"This tutorial shows you how to use the JavaScript const keyword to declare constants whose values are immutable.","og_url":"https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-01-22T08:03:40+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/","url":"https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/","name":"JavaScript const: Declaring Constants in ES6","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2016-08-27T03:02:59+00:00","dateModified":"2022-01-22T08:03:40+00:00","description":"This tutorial shows you how to use the JavaScript const keyword to declare constants whose values are immutable.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/es6\/javascript-const\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript const: Declaring Constants in ES6"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/505"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=505"}],"version-history":[{"count":4,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/505\/revisions"}],"predecessor-version":[{"id":88372,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/505\/revisions\/88372"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=505"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
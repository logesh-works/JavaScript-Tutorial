{"id":89431,"date":"2022-01-26T01:13:32","date_gmt":"2022-01-26T09:13:32","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=89431"},"modified":"2022-02-14T17:16:52","modified_gmt":"2022-02-15T01:16:52","slug":"javascript-array-push","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/","title":{"rendered":"JavaScript Array Push"},"content":{"rendered":"\r\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the JavaScript Array <code>push()<\/code> method to add one or more elements to the end of an array.<\/p>\r\n\r\n\r\n\r\n<h2 class=\"wp-block-heading\" id=\"introduction-to-the-javascript-array-push-method\">Introduction to the JavaScript Array push() method<\/h2>\r\n\r\n\r\n\r\n<p>The <code>Array.prototype.push()<\/code> method adds one or more elements to the end of an array and returns the new array&#8217;s length.<\/p>\r\n\r\n\r\n\r\n<p>The following shows the syntax of the <code>push()<\/code> method:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">push(newElement);\r\npush(newElement1,newElement2);\r\npush(newElement1,newElement2,...,newElementN);<\/code><\/span><\/pre>\r\n\r\n\r\n<p>The <code>push()<\/code> method returns the new value of the <code>length<\/code> property of the array object on which you call the method.<\/p>\r\n\r\n\r\n\r\n<h3 class=\"wp-block-heading\" id=\"javascript-array-push-method-examples\">JavaScript Array push() method examples<\/h3>\r\n\r\n\r\n\r\n<p>Let&#8217;s take some examples of using the <code>push()<\/code> method.<\/p>\r\n\r\n\r\n\r\n<h3 class=\"wp-block-heading\" id=\"1-using-the-array-push-to-append-one-element-to-an-array\">1) Using the array push() to append one element to an array<\/h3>\r\n\r\n\r\n\r\n<p>The following example adds the number <code>40<\/code> to the end of the <code>numbers<\/code> array:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> numbers = &#91;<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span>];\r\n\r\n<span class=\"hljs-keyword\">const<\/span> length = numbers.push(<span class=\"hljs-number\">40<\/span>);\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(length);\r\n<span class=\"hljs-built_in\">console<\/span>.log(numbers);\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Output:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\"><span class=\"hljs-number\">4<\/span>\r\n&#91; <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span>, <span class=\"hljs-number\">40<\/span> ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>How it works.<\/p>\r\n\r\n\r\n\r\n<p>First, define the <code>numbers<\/code> array that has three numbers:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> numbers = &#91;<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span>];<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Second, add the number <code>40<\/code> to the end of the <code>numbers<\/code> array using the <code>push()<\/code> method and assign the return value to the <code>length<\/code> variable:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> length = numbers.push(<span class=\"hljs-number\">40<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Third, output the <code>length<\/code> variable and the <code>numbers<\/code> array:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(length);\r\n<span class=\"hljs-built_in\">console<\/span>.log(numbers);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>The following picture illustrates how the example works:<\/p>\r\n\r\n\r\n\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Array-Push-example.svg\"><img decoding=\"async\" class=\"wp-image-89434\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Array-Push-example.svg\" alt=\"\" \/><\/a><\/figure>\r\n<\/div>\r\n\r\n\r\n\r\n<h3 class=\"wp-block-heading\" id=\"2-using-the-array-push-to-add-multiple-elements-to-the-end-of-an-array\">2) Using the array push() to add multiple elements to the end of an array<\/h3>\r\n\r\n\r\n\r\n<p>The following example shows how to use the <code>push()<\/code> method to add multiple elements to the end of an array:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> numbers = &#91;<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span>];\r\n\r\n<span class=\"hljs-keyword\">const<\/span> length = numbers.push(<span class=\"hljs-number\">40<\/span>, <span class=\"hljs-number\">50<\/span>);\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(length);\r\n<span class=\"hljs-built_in\">console<\/span>.log(numbers);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Output:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\"><span class=\"hljs-number\">5<\/span>\r\n&#91; <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span>, <span class=\"hljs-number\">40<\/span>, <span class=\"hljs-number\">50<\/span> ]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>The following picture illustrates how it works:<\/p>\r\n\r\n\r\n\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Array-Push-Multiple-Elements.svg\"><img decoding=\"async\" class=\"wp-image-89435\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Array-Push-Multiple-Elements.svg\" alt=\"\" \/><\/a><\/figure>\r\n<\/div>\r\n\r\n\r\n\r\n<h3 class=\"wp-block-heading\" id=\"3-using-the-push-to-append-elements-of-an-array-to-another-array\">3) Using the push() to append elements of an array to another array<\/h3>\r\n\r\n\r\n\r\n<p>Suppose you have two arrays <code>colors<\/code> and <code>cmyk<\/code>:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> colors = &#91;<span class=\"hljs-string\">'red'<\/span>, <span class=\"hljs-string\">'green'<\/span>, <span class=\"hljs-string\">'blue'<\/span>];\r\n<span class=\"hljs-keyword\">let<\/span> cmyk = &#91;<span class=\"hljs-string\">'cyan'<\/span>, <span class=\"hljs-string\">'magenta'<\/span>, <span class=\"hljs-string\">'yellow'<\/span>, <span class=\"hljs-string\">'back'<\/span>];<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>And you want to append the elements of the <code>cmyk<\/code> to the <code>colors<\/code> array.<\/p>\r\n\r\n\r\n\r\n<p>To do that, you may use a <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-for-of\/\">for...of<\/a><\/code> loop that iterates over the elements of the <code>cmyk <\/code>array and use the <code>push()<\/code> method to append each element to the <code>colors<\/code> array like this:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> colors = &#91;<span class=\"hljs-string\">'red'<\/span>, <span class=\"hljs-string\">'green'<\/span>, <span class=\"hljs-string\">'blue'<\/span>];\r\n<span class=\"hljs-keyword\">let<\/span> cmyk = &#91;<span class=\"hljs-string\">'cyan'<\/span>, <span class=\"hljs-string\">'magenta'<\/span>, <span class=\"hljs-string\">'yellow'<\/span>, <span class=\"hljs-string\">'back'<\/span>];\r\n\r\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">const<\/span> color <span class=\"hljs-keyword\">of<\/span> cmyk) {\r\n  colors.push(color);\r\n}\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(colors);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Output:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91;'red', 'green', 'blue', 'cyan', 'magenta', 'yellow', 'back']<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Starting from ES6, you can use the <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-spread\/\">spread operator<\/a> (<code>...<\/code>) to spread the elements of the <code>cmyk<\/code> array and push them to the <code>colors<\/code> array at the same time like this:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> colors = &#91;<span class=\"hljs-string\">'red'<\/span>, <span class=\"hljs-string\">'green'<\/span>, <span class=\"hljs-string\">'blue'<\/span>];\r\n<span class=\"hljs-keyword\">let<\/span> cmyk = &#91;<span class=\"hljs-string\">'cyan'<\/span>, <span class=\"hljs-string\">'magenta'<\/span>, <span class=\"hljs-string\">'yellow'<\/span>, <span class=\"hljs-string\">'back'<\/span>];\r\n\r\ncolors.push(...cmyk);\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(colors);\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<h2 class=\"wp-block-heading\" id=\"using-javascript-array-push-method-with-array-like-objects\">Using JavaScript Array push() method with array-like objects<\/h2>\r\n\r\n\r\n\r\n<p>The <code>Array.prototype.push()<\/code> method is designed to be generic on purpose. Therefore, you can call the <code>push()<\/code> method with the <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-call\/\">call()<\/a><\/code> or <code><a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-apply-method\/\">apply()<\/a><\/code> on the array-like objects.<\/p>\r\n\r\n\r\n\r\n<p>Under the hood, the\u00a0<code>push()<\/code>\u00a0method uses the\u00a0<code>length<\/code>\u00a0property to determine the position for inserting the elements. If the <code>push()<\/code> method cannot convert the <code>length<\/code>\u00a0property into a number, it&#8217;ll use <code>0<\/code> as the value for the index.<\/p>\r\n\r\n\r\n\r\n<p>See the following example:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> greetings = {\r\n  <span class=\"hljs-number\">0<\/span>: <span class=\"hljs-string\">'Hi'<\/span>,\r\n  <span class=\"hljs-number\">1<\/span>: <span class=\"hljs-string\">'Hello'<\/span>,\r\n  <span class=\"hljs-attr\">length<\/span>: <span class=\"hljs-number\">2<\/span>,\r\n  append(message) {\r\n    &#91;].push.call(<span class=\"hljs-keyword\">this<\/span>, message);\r\n  },\r\n};\r\ngreetings.append(<span class=\"hljs-string\">'Howdy'<\/span>);\r\ngreetings.append(<span class=\"hljs-string\">'Bonjour'<\/span>);\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(greetings);\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Output:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">{\r\n  <span class=\"hljs-string\">'0'<\/span>: <span class=\"hljs-string\">'Hi'<\/span>,\r\n  <span class=\"hljs-string\">'1'<\/span>: <span class=\"hljs-string\">'Hello'<\/span>,\r\n  <span class=\"hljs-string\">'2'<\/span>: <span class=\"hljs-string\">'Howdy'<\/span>,\r\n  <span class=\"hljs-string\">'3'<\/span>: <span class=\"hljs-string\">'Bonjour'<\/span>,\r\n  <span class=\"hljs-attr\">length<\/span>: <span class=\"hljs-number\">4<\/span>,\r\n  <span class=\"hljs-attr\">add<\/span>: &#91;<span class=\"hljs-built_in\">Function<\/span>: add]\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>How it works.<\/p>\r\n\r\n\r\n\r\n<p>First, define the <code>greetings<\/code> object that has three properties <code>1<\/code>, <code>2<\/code>, and <code>length<\/code> and one method <code>append()<\/code>:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> greetings = {\r\n  <span class=\"hljs-number\">0<\/span>: <span class=\"hljs-string\">'Hi'<\/span>,\r\n  <span class=\"hljs-number\">1<\/span>: <span class=\"hljs-string\">'Hello'<\/span>,\r\n  <span class=\"hljs-attr\">length<\/span>: <span class=\"hljs-number\">2<\/span>,\r\n  append(message) {\r\n    &#91;].push.call(<span class=\"hljs-keyword\">this<\/span>, message);\r\n  },\r\n};<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>The <code>append()<\/code> method calls the <code>push()<\/code> method of an array object to append the <code>message<\/code> to the <code>greetings<\/code> object.<\/p>\r\n\r\n\r\n\r\n<p>Second, call <code>append()<\/code> method of the <code>greetings<\/code> object:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">greetings.append(<span class=\"hljs-string\">'Howdy'<\/span>);\r\ngreetings.append(<span class=\"hljs-string\">'Bonjour'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>In each call, the <code>push()<\/code> uses the <code>length<\/code> property of the <code>greetings<\/code> object to determine the position where it appends the new element and increases the <code>length<\/code> property by one.<\/p>\r\n\r\n\r\n\r\n<p>As a result, the <code>greetings<\/code> object has two more elements at the index <code>2<\/code> and <code>3<\/code>. And the <code>length<\/code> property is <code>4<\/code> after the calls.<\/p>\r\n\r\n\r\n\r\n<p>Third, output the <code>greetings<\/code> object to the console:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(greetings);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>To allow the append() method to accepts a number of messages, you can modify the method like this:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> greetings = {\r\n  <span class=\"hljs-number\">0<\/span>: <span class=\"hljs-string\">'Hi'<\/span>,\r\n  <span class=\"hljs-number\">1<\/span>: <span class=\"hljs-string\">'Hello'<\/span>,\r\n  <span class=\"hljs-attr\">length<\/span>: <span class=\"hljs-number\">2<\/span>,\r\n  append() {\r\n    &#91;].push.call(<span class=\"hljs-keyword\">this<\/span>, ...arguments);\r\n  },\r\n};\r\ngreetings.append(<span class=\"hljs-string\">'Howdy'<\/span>, <span class=\"hljs-string\">'Bonjour'<\/span>);\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(greetings);\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>How it works.<\/p>\r\n\r\n\r\n\r\n<p>First, remove the message parameter from the append method.<\/p>\r\n\r\n\r\n\r\n<p>Second, spread out the elements of the <code>arguments<\/code> object and push them to the <code>greetings<\/code> object.<\/p>\r\n\r\n\r\n\r\n<h2 class=\"wp-block-heading\" id=\"summary\">Summary<\/h2>\r\n\r\n\r\n\r\n<ul>\r\n<li>Use the JavaScript array <code>push()<\/code> method to append one or more elements to an array.<\/li>\r\n<li>The <code>push()<\/code> method also works with an array-like object.<\/li>\r\n<\/ul>\r\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"89431\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/\"\n\t\t\t\tdata-post-title=\"JavaScript Array Push\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"89431\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/\"\n\t\t\t\tdata-post-title=\"JavaScript Array Push\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>The JavaScript Array push() method adds one or more elements to the end of an array and returns the array&#8217;s length.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":89577,"menu_order":1,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Array Push<\/title>\n<meta name=\"description\" content=\"The JavaScript Array push() method adds one or more elements to the end of an array and returns the array&#039;s length.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Array Push\" \/>\n<meta property=\"og:description\" content=\"The JavaScript Array push() method adds one or more elements to the end of an array and returns the array&#039;s length.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-15T01:16:52+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Array-Push-example.svg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/\",\"name\":\"JavaScript Array Push\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2022-01-26T09:13:32+00:00\",\"dateModified\":\"2022-02-15T01:16:52+00:00\",\"description\":\"The JavaScript Array push() method adds one or more elements to the end of an array and returns the array's length.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript Array Methods\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-methods\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Array Push\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Array Push","description":"The JavaScript Array push() method adds one or more elements to the end of an array and returns the array's length.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Array Push","og_description":"The JavaScript Array push() method adds one or more elements to the end of an array and returns the array's length.","og_url":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-02-15T01:16:52+00:00","og_image":[{"url":"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/JavaScript-Array-Push-example.svg"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/","url":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/","name":"JavaScript Array Push","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2022-01-26T09:13:32+00:00","dateModified":"2022-02-15T01:16:52+00:00","description":"The JavaScript Array push() method adds one or more elements to the end of an array and returns the array's length.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-push\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"JavaScript Array Methods","item":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-methods\/"},{"@type":"ListItem","position":3,"name":"JavaScript Array Push"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/89431"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=89431"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/89431\/revisions"}],"predecessor-version":[{"id":89586,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/89431\/revisions\/89586"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/89577"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=89431"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
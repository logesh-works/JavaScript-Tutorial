{"id":86380,"date":"2020-04-04T21:35:10","date_gmt":"2020-04-05T04:35:10","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?page_id=86380"},"modified":"2022-08-18T18:04:32","modified_gmt":"2022-08-19T01:04:32","slug":"javascript-promise-finally","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/","title":{"rendered":"JavaScript Promise finally()"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the JavaScript Promise <code>finally()<\/code> method to execute the code once the promise is settled, regardless of its outcome.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"introduction-to-the-javascript-promise-finally-method\">Introduction to the JavaScript Promise finally() method<\/h2>\n\n\n\n<p>Suppose that you have a <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-promises\/\">promise<\/a>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">promise\n    .then(<span class=\"hljs-function\"><span class=\"hljs-params\">result<\/span> =&gt;<\/span> { ...})\n    .catch(<span class=\"hljs-function\"><span class=\"hljs-params\">error<\/span> =&gt;<\/span> { ... })\n    .finally(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> { ... })<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>finally()<\/code> method is always executed whether the promise is fulfilled or rejected. In other words, the <code>finally()<\/code> method is executed when the promise is settled. <\/p>\n\n\n\n<p>The <code>finally()<\/code> method was introduced in ES2018. In the <code>finally()<\/code> method, you can place the code that cleans up the resource when the promise is settled, regardless of its outcome. <\/p>\n\n\n\n<p>By using the <code>finally()<\/code> method, you can avoid duplicate code in the <code>then()<\/code> and <code>catch()<\/code> methods like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">promise\n    .then(<span class=\"hljs-function\"><span class=\"hljs-params\">result<\/span> =&gt;<\/span> {\n        <span class=\"hljs-comment\">\/\/ process the result<\/span>\n        <span class=\"hljs-comment\">\/\/ clean up the resources<\/span>\n    })\n    .catch(<span class=\"hljs-function\"><span class=\"hljs-params\">error<\/span> =&gt;<\/span> {\n        <span class=\"hljs-comment\">\/\/ handle the error<\/span>\n        <span class=\"hljs-comment\">\/\/ clean up the resources<\/span>\n    });\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Now, you can move the clean up the resources part to the <code>finally()<\/code> method as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">promise\n    .then(<span class=\"hljs-function\"><span class=\"hljs-params\">result<\/span> =&gt;<\/span> {\n        <span class=\"hljs-comment\">\/\/ process the result<\/span>\n    })\n    .catch(<span class=\"hljs-function\"><span class=\"hljs-params\">error<\/span> =&gt;<\/span> {\n        <span class=\"hljs-comment\">\/\/ handle the error<\/span>\n    })\n    .finally(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n        <span class=\"hljs-comment\">\/\/ clean up the resources<\/span>\n    });\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>finally()<\/code> method is similar to the <code>finally<\/code> block in the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-try-catch-finally\/\">try...catch...finally<\/a><\/code> statement. In synchronous code, you use the <code>finally<\/code> block to clean up the resources. In asynchronous code, you use the <code>finally()<\/code> method instead.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"the-javascript-promise-finally-method-example\">The JavaScript Promise finally() method example<\/h2>\n\n\n\n<p>The following defines a <code>Connection<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Connection<\/span> <\/span>{\n    execute(query) {\n        <span class=\"hljs-keyword\">if<\/span> (query != <span class=\"hljs-string\">'Insert'<\/span> &amp;&amp; query != <span class=\"hljs-string\">'Update'<\/span> &amp;&amp; query != <span class=\"hljs-string\">'Delete'<\/span>) {\n            <span class=\"hljs-keyword\">throw<\/span> <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Error<\/span>(<span class=\"hljs-string\">`The <span class=\"hljs-subst\">${query}<\/span> is not supported`<\/span>);\n        }\n        <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">`Execute the <span class=\"hljs-subst\">${query}<\/span>`<\/span>);\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">this<\/span>;\n    }\n    close() {\n        <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'Close the connection'<\/span>)\n    }\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>Connection<\/code> class has two methods: <code>execute()<\/code> and <code>close()<\/code>:<\/p>\n\n\n\n<ul><li>The <code>execute()<\/code> method will only execute the insert, update, or delete query. It will issue an error if you pass into another query that is not in the list.<\/li><li>The <code>close()<\/code> method closes the connection, kind of cleaning up the resource.<\/li><\/ul>\n\n\n\n<p>The following <code>connect()<\/code> function returns a promise that resolves to a new <code>Connection<\/code> if the success flag is set to true:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> success = <span class=\"hljs-literal\">true<\/span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">connect<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-built_in\">Promise<\/span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject<\/span>) =&gt;<\/span> {\n        <span class=\"hljs-keyword\">if<\/span> (success)\n            resolve(<span class=\"hljs-keyword\">new<\/span> Connection());\n        <span class=\"hljs-keyword\">else<\/span>\n            reject(<span class=\"hljs-string\">'Could not open the database connection'<\/span>);\n    });\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example uses the <code>finally()<\/code> method to close the connection:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> globalConnection;\n\nconnect()\n    .then(<span class=\"hljs-function\">(<span class=\"hljs-params\">connection<\/span>) =&gt;<\/span> {\n        globalConnection = connection;\n        <span class=\"hljs-keyword\">return<\/span> globalConnection.execute(<span class=\"hljs-string\">'Insert'<\/span>);\n    })\n    .then(<span class=\"hljs-function\">(<span class=\"hljs-params\">connection<\/span>) =&gt;<\/span> {\n        globalConnection = connection;\n        <span class=\"hljs-keyword\">return<\/span> connection.execute(<span class=\"hljs-string\">'Select'<\/span>);\n    })\n    .catch(<span class=\"hljs-built_in\">console<\/span>.log)\n    .finally(<span class=\"hljs-function\"><span class=\"hljs-params\">()<\/span> =&gt;<\/span> {\n        <span class=\"hljs-keyword\">if<\/span> (globalConnection) {\n            globalConnection.<span class=\"hljs-string\">`close()`<\/span>;\n        }\n    });\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example:<\/p>\n\n\n\n<ul><li>The <code>connect()<\/code> function resolves to a new <code>Connection<\/code>&nbsp; object because the <code>success<\/code> flag is set to <code>true<\/code>.<\/li><li>The first <code>then()<\/code> method executes the <code>Insert<\/code> query and returns a <code>Connection<\/code> object. The <code>globalConnection<\/code> is used to save the connection.<\/li><li>The second <code>then()<\/code> method executes the <code>Select<\/code> query and issues an error. The <code>catch()<\/code> method shows the error message and the <code>finally()<\/code> method closes the connection.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"summary\">Summary<\/h2>\n\n\n\n<ul><li>The <code>finally()<\/code> method schedule a function to execute when the promise is settled, either fulfilled or rejected.<\/li><li>It&#8217;s good practice to place the code that cleans up the resources in the <code>finally()<\/code> method once the promise is settled, regardless of its outcome.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"86380\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/\"\n\t\t\t\tdata-post-title=\"JavaScript Promise finally()\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"86380\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/\"\n\t\t\t\tdata-post-title=\"JavaScript Promise finally()\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the JavaScript Promise finally() method to execute the code once the promise is settled, regardless of its result.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":91,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Promise finally()<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to use the JavaScript Promise finally() method to execute the code once the promise is settled.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Promise finally()\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn how to use the JavaScript Promise finally() method to execute the code once the promise is settled.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-08-19T01:04:32+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/\",\"name\":\"JavaScript Promise finally()\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-04-05T04:35:10+00:00\",\"dateModified\":\"2022-08-19T01:04:32+00:00\",\"description\":\"In this tutorial, you will learn how to use the JavaScript Promise finally() method to execute the code once the promise is settled.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Promise finally()\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Promise finally()","description":"In this tutorial, you will learn how to use the JavaScript Promise finally() method to execute the code once the promise is settled.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Promise finally()","og_description":"In this tutorial, you will learn how to use the JavaScript Promise finally() method to execute the code once the promise is settled.","og_url":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-08-19T01:04:32+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/","url":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/","name":"JavaScript Promise finally()","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-04-05T04:35:10+00:00","dateModified":"2022-08-19T01:04:32+00:00","description":"In this tutorial, you will learn how to use the JavaScript Promise finally() method to execute the code once the promise is settled.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/es-next\/javascript-promise-finally\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":3,"name":"JavaScript Promise finally()"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86380"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=86380"}],"version-history":[{"count":5,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86380\/revisions"}],"predecessor-version":[{"id":90340,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/86380\/revisions\/90340"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=86380"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
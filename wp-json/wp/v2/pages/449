{"id":449,"date":"2016-08-21T20:22:07","date_gmt":"2016-08-22T03:22:07","guid":{"rendered":"http:\/\/https://jsprifix.netlify.app/\/?page_id=449"},"modified":"2022-02-14T18:03:11","modified_gmt":"2022-02-15T02:03:11","slug":"javascript-array-reduce","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/","title":{"rendered":"JavaScript Array reduce &#038; reduceRight: Reducing an Array Into a Value"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the JavaScript Array <code>reduce()<\/code> and <code>reduceRight()<\/code> methods to reduce an array to a value.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the JavaScript Array reduce() method<\/h2>\n\n\n\n<p>Suppose that you have an <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array\/\">array<\/a> of numbers, like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> numbers = &#91;<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>];<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>and you want to calculate the total of elements of the array.<\/p>\n\n\n\n<p>Typically, you use a <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-for-loop\/\"><code>for<\/code> loop<\/a>  to iterate over the elements and add them up as shown in the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> numbers = &#91;<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>];\n\n<span class=\"hljs-keyword\">let<\/span> sum = <span class=\"hljs-number\">0<\/span>;\n<span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">let<\/span> i = <span class=\"hljs-number\">0<\/span>; i &lt; numbers.length; i++) {\n    sum += numbers&#91;i];\n}\n\n<span class=\"hljs-built_in\">console<\/span>.log(sum);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">6<\/code><\/span><\/pre>\n\n\n<p>The script is simple and straightforward:<\/p>\n\n\n\n<ul><li>First, declare an array of three numbers 1, 2 and 3.<\/li><li>Second, declare the <code>sum<\/code> <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-variables\/\">variable<\/a> and set its value to zero.<\/li><li>Third, in the <code>for<\/code> loop, add up the elements of the <code>numbers<\/code> array to the <code>sum<\/code> variable.&nbsp;After the loop, the value of the <code>sum<\/code> variable is 6.<\/li><\/ul>\n\n\n\n<p>What we have done was to <strong>reduce <\/strong>an array into a value.<\/p>\n\n\n\n<p>The <code>Array.prototype<\/code> allows you to reduce an array to a single value using the <code>reduce()<\/code> method like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> numbers = &#91;<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>];\r\n<span class=\"hljs-keyword\">let<\/span> sum = numbers.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">previousValue, currentValue<\/span>) <\/span>{\r\n    <span class=\"hljs-keyword\">return<\/span> previousValue + currentValue;\r\n});\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(sum);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>It&#8217;s pretty simple, isn&#8217;t it?<\/p>\n\n\n\n<p>Let&#8217;s take a look at the <code>reduce()<\/code> method in detail.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript Array reduce() method in detail<\/h2>\n\n\n\n<p>The following illustrates the syntax of the <code>reduce()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">array<\/span><span class=\"hljs-selector-class\">.reduce<\/span>(<span class=\"hljs-selector-tag\">callbackFn<\/span> <span class=\"hljs-selector-attr\">&#91;, initialValue]<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>reduce()<\/code> method takes two arguments: <\/p>\n\n\n\n<ul><li>A <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-callback\/\">callback function<\/a> <code>callbackFn<\/code>. The function is often referred to as a reducer.<\/li><li>An optional initial value.<\/li><\/ul>\n\n\n\n<p>The\u00a0<code>reduce()<\/code>\u00a0method calls the\u00a0<code>callbackFn()<\/code>\u00a0function for every element in the array. <\/p>\n\n\n\n<p>The\u00a0<code>reducer()<\/code>\u00a0function returns a value that results from executing the <code>callbackFn<\/code> to completion over the entire array.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) The callbackFn() function argument<\/h3>\n\n\n\n<p>The <code>callbackFn<\/code> function has the following syntax:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">callbackFn<\/span><span class=\"hljs-params\">(previousValue, currentValue, currentIndex, array)<\/span> <\/span>{ <span class=\"hljs-comment\">\/**\/<\/span>}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>callbackFn<\/code> function takes four arguments:<\/p>\n\n\n\n<p><code>previousValue<\/code><\/p>\n\n\n\n<p>The value returned from the previous call of the <code>callbackFn<\/code> function. On the first call, the <code>initialValue<\/code> is the <code>previousValue<\/code> if you pass the <code>initialValue<\/code>. Otherwise, its value is the <code>array[0]<\/code>.<\/p>\n\n\n\n<p><code>currentValue<\/code><\/p>\n\n\n\n<p>The value of the current array element. On the first call, it is <code>array[0]<\/code> if you pas the <code>initialValue<\/code> or <code>array[1]<\/code> otherwise.<\/p>\n\n\n\n<p><code>currentIndex<\/code><\/p>\n\n\n\n<p>The index of the <code>currentValue<\/code> in the array. On the first call, it&#8217;s <code>0<\/code> if you pass the initialValue or 1 otherwise.<\/p>\n\n\n\n<p><code>array<\/code><\/p>\n\n\n\n<p>The array to loop through.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">2) The initialValue argument<\/h3>\n\n\n\n<p>The <code>initialValue<\/code> argument is optional. <\/p>\n\n\n\n<p>If you specify the <code>initialValue<\/code>, the <code>callbackFn<\/code> function will initialize the <code>previousValue<\/code> to the <code>initialValue<\/code> and <code>currentValue<\/code> to the first array&#8217;s element on the first call.<\/p>\n\n\n\n<p>If you <strong>don&#8217;t<\/strong> specify the <code>initialValue<\/code>, the  the <code>callbackFn<\/code> function will initialize the <code>previousValue<\/code> to the first array&#8217;s element (<code>array[0]<\/code>) in the array and the <code>currentValue<\/code> to the second array&#8217;s element (<code>array[1]<\/code>).<\/p>\n\n\n\n<p>The following table illustrates the logic\u00a0when the <code>reduce()<\/code> method executes the <code>callbackFn()<\/code> function for the first time according to the <code>initialValue<\/code> argument:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th><code>initialValue<\/code><\/th><th>\u00a0<code>previousValue<\/code><\/th><th>&nbsp;<code>currentValue<\/code><\/th><\/tr><\/thead><tbody><tr><td>passed<\/td><td><code>initialValue <\/code><\/td><td><code>array[0] <\/code><\/td><\/tr><tr><td>not passed<\/td><td><code>array[0] <\/code><\/td><td><span style=\"line-height: 1.5;\"><code>array[1] <\/code><\/span><\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p>The following example shows the progress of the reduce() function with an <code>initialValue<\/code> as 100:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> numbers = &#91;<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>];\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">getOrdinalSuffix<\/span>(<span class=\"hljs-params\">i<\/span>) <\/span>{\r\n  <span class=\"hljs-keyword\">let<\/span> j = i % <span class=\"hljs-number\">10<\/span>, k = i % <span class=\"hljs-number\">100<\/span>;\r\n  <span class=\"hljs-keyword\">if<\/span> (j == <span class=\"hljs-number\">1<\/span> &amp;&amp; k != <span class=\"hljs-number\">11<\/span>) <span class=\"hljs-keyword\">return<\/span> i + <span class=\"hljs-string\">'st'<\/span>;\r\n  <span class=\"hljs-keyword\">if<\/span> (j == <span class=\"hljs-number\">2<\/span> &amp;&amp; k != <span class=\"hljs-number\">12<\/span>) <span class=\"hljs-keyword\">return<\/span> i + <span class=\"hljs-string\">'nd'<\/span>;  \r\n  <span class=\"hljs-keyword\">if<\/span> (j == <span class=\"hljs-number\">3<\/span> &amp;&amp; k != <span class=\"hljs-number\">13<\/span>) <span class=\"hljs-keyword\">return<\/span> i + <span class=\"hljs-string\">'rd'<\/span>;\r\n  <span class=\"hljs-keyword\">return<\/span> i + <span class=\"hljs-string\">'th'<\/span>;\r\n}\r\n\r\n<span class=\"hljs-keyword\">let<\/span> call = <span class=\"hljs-number\">1<\/span>;\r\n<span class=\"hljs-keyword\">let<\/span> sum = numbers.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">previousValue, currentValue, currentIndex, array<\/span>) <\/span>{\r\n    <span class=\"hljs-keyword\">let<\/span> result = previousValue + currentValue;\r\n\r\n    <span class=\"hljs-comment\">\/\/ show the 1st call, 2nd call, etc.<\/span>\r\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${getOrdinalSuffix(call)}<\/span> call`<\/span>);\r\n    call++;\r\n\r\n    <span class=\"hljs-comment\">\/\/ show the immediate values<\/span>\r\n    <span class=\"hljs-built_in\">console<\/span>.table({ previousValue, currentValue, currentIndex, result });\r\n\r\n    <span class=\"hljs-keyword\">return<\/span> result;\r\n},<span class=\"hljs-number\">100<\/span>);\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">`Result: <span class=\"hljs-subst\">${sum}<\/span>`<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"plaintext\" data-shcb-language-slug=\"plaintext\"><span><code class=\"hljs language-plaintext\">1st call\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502    (index)    \u2502 Values \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 previousValue \u2502  100   \u2502\r\n\u2502 currentValue  \u2502   1    \u2502\r\n\u2502 currentIndex  \u2502   0    \u2502\r\n\u2502    result     \u2502  101   \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n2nd call\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502    (index)    \u2502 Values \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 previousValue \u2502  101   \u2502\r\n\u2502 currentValue  \u2502   2    \u2502\r\n\u2502 currentIndex  \u2502   1    \u2502\r\n\u2502    result     \u2502  103   \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n3rd call\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502    (index)    \u2502 Values \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 previousValue \u2502  103   \u2502\r\n\u2502 currentValue  \u2502   3    \u2502\r\n\u2502 currentIndex  \u2502   2    \u2502\r\n\u2502    result     \u2502  106   \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\nResult: 106<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">plaintext<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">plaintext<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>And the following illustrates the <code>reduce()<\/code> method without the <code>initialValue<\/code> argument:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"plaintext\" data-shcb-language-slug=\"plaintext\"><span><code class=\"hljs language-plaintext\">1st call\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502    (index)    \u2502 Values \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 previousValue \u2502   1    \u2502\r\n\u2502 currentValue  \u2502   2    \u2502\r\n\u2502 currentIndex  \u2502   1    \u2502\r\n\u2502    result     \u2502   3    \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n2nd call\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502    (index)    \u2502 Values \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 previousValue \u2502   3    \u2502\r\n\u2502 currentValue  \u2502   3    \u2502\r\n\u2502 currentIndex  \u2502   2    \u2502\r\n\u2502    result     \u2502   6    \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\nResult: 6<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">plaintext<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">plaintext<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">More JavaScript Array reduce() examples<\/h2>\n\n\n\n<p>Suppose that you have the following <code>shoppingCart<\/code> array of product objects:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> shoppingCart = &#91;\r\n  {\r\n    <span class=\"hljs-attr\">product<\/span>: <span class=\"hljs-string\">'phone'<\/span>,\r\n    <span class=\"hljs-attr\">qty<\/span>: <span class=\"hljs-number\">1<\/span>,\r\n    <span class=\"hljs-attr\">price<\/span>: <span class=\"hljs-number\">500<\/span>,\r\n  },\r\n  {\r\n    <span class=\"hljs-attr\">product<\/span>: <span class=\"hljs-string\">'Screen Protector'<\/span>,\r\n    <span class=\"hljs-attr\">qty<\/span>: <span class=\"hljs-number\">1<\/span>,\r\n    <span class=\"hljs-attr\">price<\/span>: <span class=\"hljs-number\">10<\/span>,\r\n  },\r\n  {\r\n    <span class=\"hljs-attr\">product<\/span>: <span class=\"hljs-string\">'Memory Card'<\/span>,\r\n    <span class=\"hljs-attr\">qty<\/span>: <span class=\"hljs-number\">2<\/span>,\r\n    <span class=\"hljs-attr\">price<\/span>: <span class=\"hljs-number\">20<\/span>,\r\n  },\r\n];<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To calculate the total amount of the products in the shopping cart, you can use the <code>reduce()<\/code> method, like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> total = shoppingCart.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">previousValue, currentValue<\/span>) <\/span>{\r\n  <span class=\"hljs-keyword\">return<\/span> previousValue + currentValue.qty * currentValue.price;\r\n}, <span class=\"hljs-number\">0<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">550<\/code><\/span><\/pre>\n\n\n<p>Notice that in this example, we passed in the <code>initialValue<\/code> argument to the <code>reduce()<\/code> method.<\/p>\n\n\n\n<p>If we didn&#8217;t do so, the <code>reduce()<\/code> method would\u00a0take the first element of the <code>shoppingCart<\/code> array, which is an object, as an initial value and perform the calculation on this object. Hence, it would cause an\u00a0incorrect\u00a0result.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">JavaScript Array reduceRight() method<\/h2>\n\n\n\n<p>The <code>reduceRight()<\/code> method works in the same way as the <code>reduce()<\/code> method, but in the opposite direction.<\/p>\n\n\n\n<p>The <code>reduce()<\/code> method starts at the first element and travels\u00a0toward the last, whereas the <code>reduceRight()<\/code> method starts at the last element and travels backward the first.<\/p>\n\n\n\n<p>See the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> numbers = &#91;<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>];\r\n\r\n<span class=\"hljs-keyword\">let<\/span> sum = numbers.reduceRight(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> (<span class=\"hljs-params\">previousValue, currentValue<\/span>) <\/span>{\r\n  <span class=\"hljs-built_in\">console<\/span>.log({ previousValue, currentValue });\r\n  <span class=\"hljs-keyword\">return<\/span> previousValue + currentValue;\r\n});\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">`Result:<span class=\"hljs-subst\">${sum}<\/span>`<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{ <span class=\"hljs-attribute\">previousValue<\/span>: <span class=\"hljs-number\">3<\/span>, currentValue: <span class=\"hljs-number\">2<\/span> }\r\n{ <span class=\"hljs-attribute\">previousValue<\/span>: <span class=\"hljs-number\">5<\/span>, currentValue: <span class=\"hljs-number\">1<\/span> }\r\n<span class=\"hljs-selector-tag\">Result<\/span><span class=\"hljs-selector-pseudo\">:6<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following picture illustrates the difference between the <code>reduce()<\/code> and <code>reduceRight()<\/code> methods:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/javascript-array-reduce.svg\"><img decoding=\"async\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/javascript-array-reduce.svg\" alt=\"javascript array reduce\" class=\"wp-image-88760\"\/><\/a><\/figure>\n\n\n\n<p>In this tutorial, you have learned how to use the JavaScript array <code>reduce()<\/code> and <code>reduceRight()<\/code> methods to reduce an array into a value.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"449\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/\"\n\t\t\t\tdata-post-title=\"JavaScript Array reduce &#038; reduceRight: Reducing an Array Into a Value\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"449\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/\"\n\t\t\t\tdata-post-title=\"JavaScript Array reduce &#038; reduceRight: Reducing an Array Into a Value\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the JavaScript Array reduce() and reduceRight() methods to reduce an array to a value.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":89577,"menu_order":13,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>JavaScript Array reduce &amp; reduceRight: Reducing an Array Into a Value<\/title>\n<meta name=\"description\" content=\"This tutorial shows you how to reduce an array into a value by using the JavaScript array reduce() and reduceRight() methods.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"JavaScript Array reduce &amp; reduceRight: Reducing an Array Into a Value\" \/>\n<meta property=\"og:description\" content=\"This tutorial shows you how to reduce an array into a value by using the JavaScript array reduce() and reduceRight() methods.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-15T02:03:11+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/javascript-array-reduce.svg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"5 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/\",\"name\":\"JavaScript Array reduce & reduceRight: Reducing an Array Into a Value\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2016-08-22T03:22:07+00:00\",\"dateModified\":\"2022-02-15T02:03:11+00:00\",\"description\":\"This tutorial shows you how to reduce an array into a value by using the JavaScript array reduce() and reduceRight() methods.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript Array Methods\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-array-methods\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Array reduce &#038; reduceRight: Reducing an Array Into a Value\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"JavaScript Array reduce & reduceRight: Reducing an Array Into a Value","description":"This tutorial shows you how to reduce an array into a value by using the JavaScript array reduce() and reduceRight() methods.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/","og_locale":"en_US","og_type":"article","og_title":"JavaScript Array reduce & reduceRight: Reducing an Array Into a Value","og_description":"This tutorial shows you how to reduce an array into a value by using the JavaScript array reduce() and reduceRight() methods.","og_url":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-02-15T02:03:11+00:00","og_image":[{"url":"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2022\/01\/javascript-array-reduce.svg"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"5 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/","url":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/","name":"JavaScript Array reduce & reduceRight: Reducing an Array Into a Value","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2016-08-22T03:22:07+00:00","dateModified":"2022-02-15T02:03:11+00:00","description":"This tutorial shows you how to reduce an array into a value by using the JavaScript array reduce() and reduceRight() methods.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-reduce\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"JavaScript Array Methods","item":"https:\/\/https://jsprifix.netlify.app/\/javascript-array-methods\/"},{"@type":"ListItem","position":3,"name":"JavaScript Array reduce &#038; reduceRight: Reducing an Array Into a Value"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/449"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=449"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/449\/revisions"}],"predecessor-version":[{"id":88763,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/449\/revisions\/88763"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/89577"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=449"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
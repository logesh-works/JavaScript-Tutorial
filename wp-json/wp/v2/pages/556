{"id":556,"date":"2016-09-01T01:20:56","date_gmt":"2016-09-01T08:20:56","guid":{"rendered":"http:\/\/www.javascripttutorial.net\/?page_id=556"},"modified":"2022-02-14T17:15:59","modified_gmt":"2022-02-15T01:15:59","slug":"destructuring","status":"publish","type":"page","link":"https:\/\/www.javascripttutorial.net\/es6\/destructuring\/","title":{"rendered":"ES6 Destructuring Assignment"},"content":{"rendered":"\r\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the ES6 destructuring\u00a0assignment that allows you to destructure an array into individual variables.<\/p>\r\n\r\n\r\n\r\n<p>ES6 provides a new feature called destructing assignment that allows you to <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-object-destructuring\/\">destructure properties of an object<\/a> or elements of an <a href=\"https:\/\/www.javascripttutorial.net\/javascript-array\/\">array<\/a> into individual variables.<\/p>\r\n\r\n\r\n\r\n<p>Let&#8217;s start with the array destructuring.<\/p>\r\n\r\n\r\n\r\n<h2 class=\"wp-block-heading\">Introduction to JavaScript Array destructuring<\/h2>\r\n\r\n\r\n\r\n<p>Assuming that you have a function that returns an array of numbers as follows:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">getScores<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\r\n   <span class=\"hljs-keyword\">return<\/span> &#91;<span class=\"hljs-number\">70<\/span>, <span class=\"hljs-number\">80<\/span>, <span class=\"hljs-number\">90<\/span>];\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>The following invokes the <code>getScores()<\/code> function and assigns the returned value to a variable:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> scores = getScores();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>To get the individual score, you need to do like this:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> x = scores&#91;<span class=\"hljs-number\">0<\/span>], \r\n    y = scores&#91;<span class=\"hljs-number\">1<\/span>], \r\n    z = scores&#91;<span class=\"hljs-number\">2<\/span>];<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Prior to ES6, there was no direct way to assign the elements of the returned array to multiple variables such as <code>x<\/code>, <code>y<\/code> and <code>z<\/code>.<\/p>\r\n\r\n\r\n\r\n<p>Fortunately, starting from ES6, you can use the destructing assignment as follows:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> &#91;x, y, z] = getScores();\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(x); <span class=\"hljs-comment\">\/\/ 70<\/span>\r\n<span class=\"hljs-built_in\">console<\/span>.log(y); <span class=\"hljs-comment\">\/\/ 80<\/span>\r\n<span class=\"hljs-built_in\">console<\/span>.log(z); <span class=\"hljs-comment\">\/\/ 90<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>The variables <code>x<\/code>, <code>y<\/code> and <code>z<\/code> will take the values of the first, second, and third elements of the returned array.<\/p>\r\n\r\n\r\n\r\n<p>Note that the square brackets <code>[]<\/code> look like the array syntax but they are not.<\/p>\r\n\r\n\r\n\r\n<p>If the <code>getScores()<\/code> function returns an array of two elements, the third variable will be <code>undefined<\/code>, like this:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">getScores<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\r\n   <span class=\"hljs-keyword\">return<\/span> &#91;<span class=\"hljs-number\">70<\/span>, <span class=\"hljs-number\">80<\/span>];\r\n}\r\n\r\n<span class=\"hljs-keyword\">let<\/span> &#91;x, y, z] = getScores();\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(x); <span class=\"hljs-comment\">\/\/ 70<\/span>\r\n<span class=\"hljs-built_in\">console<\/span>.log(y); <span class=\"hljs-comment\">\/\/ 80<\/span>\r\n<span class=\"hljs-built_in\">console<\/span>.log(z); <span class=\"hljs-comment\">\/\/ undefined<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>In case the <code>getScores()<\/code> function returns an array that has more than three elements, the remaining elements are discarded. For example:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">getScores<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\r\n   <span class=\"hljs-keyword\">return<\/span> &#91;<span class=\"hljs-number\">70<\/span>, <span class=\"hljs-number\">80<\/span>, <span class=\"hljs-number\">90<\/span>, <span class=\"hljs-number\">100<\/span>];\r\n}\r\n\r\n<span class=\"hljs-keyword\">let<\/span> &#91;x, y, z] = getScores();\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(x); <span class=\"hljs-comment\">\/\/ 70<\/span>\r\n<span class=\"hljs-built_in\">console<\/span>.log(y); <span class=\"hljs-comment\">\/\/ 80<\/span>\r\n<span class=\"hljs-built_in\">console<\/span>.log(z); <span class=\"hljs-comment\">\/\/ 90<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<h2 class=\"wp-block-heading\">Array Destructuring Assignment and Rest syntax<\/h2>\r\n\r\n\r\n\r\n<p>It&#8217;s possible to take all remaining elements of an array and put them in a new array by using the <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-rest-parameters\/\">rest\u00a0syntax<\/a> <code>(...)<\/code>:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> &#91;x, y ,...args] = getScores();\r\n<span class=\"hljs-built_in\">console<\/span>.log(x); <span class=\"hljs-comment\">\/\/ 70<\/span>\r\n<span class=\"hljs-built_in\">console<\/span>.log(y); <span class=\"hljs-comment\">\/\/ 80<\/span>\r\n<span class=\"hljs-built_in\">console<\/span>.log(args); <span class=\"hljs-comment\">\/\/ &#91;90, 100]<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>The variables <code>x<\/code> and <code>y<\/code> receive values of the first two elements of the returned array. And the <code>args<\/code> variable receives all the remaining arguments, which are the last two elements of the returned array.<\/p>\r\n\r\n\r\n\r\n<p>Note that it&#8217;s possible to destructure an array in the assignment that separates from the variable&#8217;s declaration. For example:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> a, b;\r\n&#91;a, b] = &#91;<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>];\r\n<span class=\"hljs-built_in\">console<\/span>.log(a); <span class=\"hljs-comment\">\/\/ 10<\/span>\r\n<span class=\"hljs-built_in\">console<\/span>.log(b); <span class=\"hljs-comment\">\/\/ 20<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<h2 class=\"wp-block-heading\">Setting default values<\/h2>\r\n\r\n\r\n\r\n<p>See the following example:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">getItems<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\r\n    <span class=\"hljs-keyword\">return<\/span> &#91;<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>];\r\n}\r\n\r\n<span class=\"hljs-keyword\">let<\/span> items = getItems();\r\n<span class=\"hljs-keyword\">let<\/span> thirdItem = items&#91;<span class=\"hljs-number\">2<\/span>] != <span class=\"hljs-literal\">undefined<\/span> ? items&#91;<span class=\"hljs-number\">2<\/span>] : <span class=\"hljs-number\">0<\/span>;\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(thirdItem); <span class=\"hljs-comment\">\/\/ 0<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>How it works:<\/p>\r\n\r\n\r\n\r\n<ul>\r\n<li>First, declare the <code>getItems()<\/code> function that returns an array of two numbers.<\/li>\r\n<li>Then, assign the items variable to the returned array of the getItems() function.<\/li>\r\n<li>Finally, check if the third element exists in the array. If not, assign the value 0 to the <code>thirdItem<\/code> variable.<\/li>\r\n<\/ul>\r\n\r\n\r\n\r\n<p>It&#8217;ll be simpler with the destructuring assignment with a default value:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> &#91;, , thirdItem = <span class=\"hljs-number\">0<\/span>] = getItems();\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(thirdItem); <span class=\"hljs-comment\">\/\/ 0<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>If the value taken from the array is <code>undefined<\/code>, you can assign the variable a default value, like this:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> a, b;\r\n&#91;a = <span class=\"hljs-number\">1<\/span>, b = <span class=\"hljs-number\">2<\/span>] = &#91;<span class=\"hljs-number\">10<\/span>];\r\n<span class=\"hljs-built_in\">console<\/span>.log(a); <span class=\"hljs-comment\">\/\/ 10<\/span>\r\n<span class=\"hljs-built_in\">console<\/span>.log(b); <span class=\"hljs-comment\">\/\/ 2<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>If the <code>getItems()<\/code> function doesn&#8217;t return an array and you expect an array, the destructing assignment will result in an error. For example:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">getItems<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\r\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">null<\/span>;\r\n}\r\n\r\n<span class=\"hljs-keyword\">let<\/span> &#91;x = <span class=\"hljs-number\">1<\/span>, y = <span class=\"hljs-number\">2<\/span>] = getItems();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Error:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">Uncaught <span class=\"hljs-built_in\">TypeError<\/span>: getItems is not a <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">or<\/span> <span class=\"hljs-title\">its<\/span> <span class=\"hljs-title\">return<\/span> <span class=\"hljs-title\">value<\/span> <span class=\"hljs-title\">is<\/span> <span class=\"hljs-title\">not<\/span> <span class=\"hljs-title\">iterable<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>A typical way to solve this is to fallback the returned value of the <code>getItems()<\/code> function to an empty array like this:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">getItems<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\r\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">null<\/span>;\r\n}\r\n\r\n<span class=\"hljs-keyword\">let<\/span> &#91;a = <span class=\"hljs-number\">10<\/span>, b = <span class=\"hljs-number\">20<\/span>] = getItems() || &#91;];\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(a); <span class=\"hljs-comment\">\/\/ 10<\/span>\r\n<span class=\"hljs-built_in\">console<\/span>.log(b); <span class=\"hljs-comment\">\/\/ 20<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<h2 class=\"wp-block-heading\">Nested array destructuring<\/h2>\r\n\r\n\r\n\r\n<p>The following function returns an array that contains an element which is another array, or nested array:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">getProfile<\/span>(<span class=\"hljs-params\"><\/span>) <\/span>{\r\n    <span class=\"hljs-keyword\">return<\/span> &#91;\r\n        <span class=\"hljs-string\">'John'<\/span>,\r\n        <span class=\"hljs-string\">'Doe'<\/span>,\r\n        &#91;<span class=\"hljs-string\">'Red'<\/span>, <span class=\"hljs-string\">'Green'<\/span>, <span class=\"hljs-string\">'Blue'<\/span>]\r\n    ];\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>Since the third element of the returned array is another array, you need to use the nested array destructuring syntax to destructure it, like this:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> &#91;\r\n    firstName,\r\n    lastName,\r\n    &#91;\r\n        color1,\r\n        color2,\r\n        color3\r\n    ]\r\n] = getProfile();\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(color1, color2, color3); <span class=\"hljs-comment\">\/\/ Red Green Blue<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<h2 class=\"wp-block-heading\">Array Destructuring Assignment Applications<\/h2>\r\n\r\n\r\n\r\n<p>Let&#8217;s see some practical examples of using the array destructuring assignment syntax.<\/p>\r\n\r\n\r\n\r\n<h3 class=\"wp-block-heading\">1) Swapping variables<\/h3>\r\n\r\n\r\n\r\n<p>The array destructuring makes it easy to swap values of variables without using a temporary variable:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> a = <span class=\"hljs-number\">10<\/span>, \r\n    b = <span class=\"hljs-number\">20<\/span>;\r\n\r\n&#91;a, b] = &#91;b, a];\r\n\r\n<span class=\"hljs-built_in\">console<\/span>.log(a); <span class=\"hljs-comment\">\/\/ 20<\/span>\r\n<span class=\"hljs-built_in\">console<\/span>.log(b); <span class=\"hljs-comment\">\/\/ 10<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<h3 class=\"wp-block-heading\">2) Functions that return multiple values<\/h3>\r\n\r\n\r\n\r\n<p>In JavaScript, a function can return a value. However, you can return an array that contains multiple values, for example:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-18\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">stat<\/span>(<span class=\"hljs-params\">a, b<\/span>) <\/span>{\r\n    <span class=\"hljs-keyword\">return<\/span> &#91;\r\n        a + b,\r\n        (a + b) \/ <span class=\"hljs-number\">2<\/span>,\r\n        a - b\r\n    ]\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-18\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>And then you use the array destructuring assignment syntax to destructure the elements of the return array into variables:<\/p>\r\n\r\n\r\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-19\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> &#91;sum, average, difference] = stat(<span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">10<\/span>);\r\n<span class=\"hljs-built_in\">console<\/span>.log(sum, average, difference); <span class=\"hljs-comment\">\/\/ 30, 15, 10<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-19\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\r\n\r\n\r\n<p>In this tutorial, you have learned how to use the ES6 destructuring assignment to destructure elements in an array into individual variables.<\/p>\r\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"556\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es6\/destructuring\/\"\n\t\t\t\tdata-post-title=\"ES6 Destructuring Assignment\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"556\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/es6\/destructuring\/\"\n\t\t\t\tdata-post-title=\"ES6 Destructuring Assignment\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the ES6 destructuring feature that allows you to destructure an object or an array into individual variables<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":89577,"menu_order":25,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>ES6 Destructuring Assignment Explained By Examples<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to use ES6 destructuring that allows you to destructure an object or an array into individual variables.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/es6\/destructuring\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"ES6 Destructuring Assignment Explained By Examples\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn how to use ES6 destructuring that allows you to destructure an object or an array into individual variables.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/es6\/destructuring\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-15T01:15:59+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es6\/destructuring\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/es6\/destructuring\/\",\"name\":\"ES6 Destructuring Assignment Explained By Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2016-09-01T08:20:56+00:00\",\"dateModified\":\"2022-02-15T01:15:59+00:00\",\"description\":\"In this tutorial, you will learn how to use ES6 destructuring that allows you to destructure an object or an array into individual variables.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/es6\/destructuring\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/es6\/destructuring\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/es6\/destructuring\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript Array Methods\",\"item\":\"https:\/\/www.javascripttutorial.net\/javascript-array-methods\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"ES6 Destructuring Assignment\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"ES6 Destructuring Assignment Explained By Examples","description":"In this tutorial, you will learn how to use ES6 destructuring that allows you to destructure an object or an array into individual variables.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/es6\/destructuring\/","og_locale":"en_US","og_type":"article","og_title":"ES6 Destructuring Assignment Explained By Examples","og_description":"In this tutorial, you will learn how to use ES6 destructuring that allows you to destructure an object or an array into individual variables.","og_url":"https:\/\/www.javascripttutorial.net\/es6\/destructuring\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-02-15T01:15:59+00:00","twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/es6\/destructuring\/","url":"https:\/\/www.javascripttutorial.net\/es6\/destructuring\/","name":"ES6 Destructuring Assignment Explained By Examples","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2016-09-01T08:20:56+00:00","dateModified":"2022-02-15T01:15:59+00:00","description":"In this tutorial, you will learn how to use ES6 destructuring that allows you to destructure an object or an array into individual variables.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/es6\/destructuring\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/es6\/destructuring\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/es6\/destructuring\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"JavaScript Array Methods","item":"https:\/\/www.javascripttutorial.net\/javascript-array-methods\/"},{"@type":"ListItem","position":3,"name":"ES6 Destructuring Assignment"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/556"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=556"}],"version-history":[{"count":5,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/556\/revisions"}],"predecessor-version":[{"id":89584,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/556\/revisions\/89584"}],"up":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/pages\/89577"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=556"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
{"id":84598,"date":"2019-12-08T01:10:35","date_gmt":"2019-12-08T09:10:35","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?page_id=84598"},"modified":"2022-01-25T17:43:13","modified_gmt":"2022-01-26T01:43:13","slug":"javascript-execution-context","status":"publish","type":"page","link":"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/","title":{"rendered":"JavaScript Execution Context"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about the JavaScript execution context to deeply understand how JavaScript code gets executed.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"introduction-to-the-javascript-execution-context\">Introduction to the JavaScript execution context<\/h2>\n\n\n\n<p>Let&#8217;s start with the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> x = <span class=\"hljs-number\">10<\/span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">timesTen<\/span>(<span class=\"hljs-params\">a<\/span>)<\/span>{\n    <span class=\"hljs-keyword\">return<\/span> a * <span class=\"hljs-number\">10<\/span>;\n}\n\n<span class=\"hljs-keyword\">let<\/span> y = timesTen(x);\n\n<span class=\"hljs-built_in\">console<\/span>.log(y); <span class=\"hljs-comment\">\/\/ 100<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example:<\/p>\n\n\n\n<ul><li>First, declare the <code>x<\/code> variable and initialize its value with <code>10<\/code>.<\/li><li>Second, declare the <code>timesTen()<\/code>  function that accepts an argument and returns a value that is the result of multiplication of  the argument with <code>10<\/code>.<\/li><li>Third, call the <code>timesTen()<\/code> function with the argument as the value of the <code>x<\/code> variable and store result in the variable <code>y<\/code>.<\/li><li>Finally, output the variable <code>y<\/code> to the <a href=\"https:\/\/https://jsprifix.netlify.app/\/web-development-tools\/\">Console<\/a>.<\/li><\/ul>\n\n\n\n<p>Behind the scene, JavaScript does many things. in this tutorial, you will focus on execution contexts.<\/p>\n\n\n\n<p>When the JavaScript engine executes the JavaScript code, it creates execution contexts. <\/p>\n\n\n\n<p>Each execution context has two phases: the creation phase and the execution phase.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"the-creation-phase\">The creation phase<\/h2>\n\n\n\n<p>When the JavaScript engine executes a script for the first time, it creates the global execution context. During this phase, the JavaScript engine performs the following tasks:<\/p>\n\n\n\n<ul><li>Create the <a href=\"https:\/\/https://jsprifix.netlify.app/\/es-next\/javascript-globalthis\/\">global object<\/a> i.e., <code>window<\/code> in the web browser or <code>global<\/code> in Node.js.<\/li><li>Create the <code>this<\/code> object and bind it to the global object.<\/li><li>Setup a memory heap for storing <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-variables\/\">variables<\/a> and <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-function\/\">function<\/a> references.<\/li><li>Store the function declarations in the memory heap and variables within the global execution context with the initial values as <code>undefined<\/code>.<\/li><\/ul>\n\n\n\n<p>When the JavaScript engine executes the code example above, it does the following in the creation phase:<\/p>\n\n\n\n<ul><li>First, store the variables <code>x<\/code> and <code>y<\/code> and function declaration <code>timesTen()<\/code> in the global execution context.<\/li><li>Second, initialize the variables <code>x<\/code> and <code>y<\/code> to <code>undefined<\/code>.<\/li><\/ul>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" loading=\"lazy\" width=\"296\" height=\"317\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2019\/12\/javascript-execution-context-global-execution-context-in-creation-phase.png\" alt=\"javascript execution context - global execution context in creation phase\" class=\"wp-image-84599\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2019\/12\/javascript-execution-context-global-execution-context-in-creation-phase.png 296w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2019\/12\/javascript-execution-context-global-execution-context-in-creation-phase-280x300.png 280w\" sizes=\"(max-width: 296px) 100vw, 296px\" \/><\/figure>\n\n\n\n<p>After the creation phase, the global execution context moves to the execution phase.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"the-execution-phase\">The execution phase<\/h2>\n\n\n\n<p>During the execution phase, the JavaScript engine executes the code line by line, assigns the values to variables, and executes the function calls.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" loading=\"lazy\" width=\"296\" height=\"317\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2019\/12\/javascript-execution-context-global-execution-context-in-execution-phase.png\" alt=\"javascript execution context - global execution context in execution phase\" class=\"wp-image-84600\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2019\/12\/javascript-execution-context-global-execution-context-in-execution-phase.png 296w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2019\/12\/javascript-execution-context-global-execution-context-in-execution-phase-280x300.png 280w\" sizes=\"(max-width: 296px) 100vw, 296px\" \/><\/figure>\n\n\n\n<p>For each function call, the JavaScript engine creates a new <strong>function execution context<\/strong>. <\/p>\n\n\n\n<p>The function execution context is similar to the global execution context. But instead of creating the global object, the JavaScript engine creates the <code>arguments<\/code> object that is a reference to all the parameters of the function:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" loading=\"lazy\" width=\"258\" height=\"449\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2019\/12\/javascript-execution-context-function-execution-context-in-creation-phase.png\" alt=\"javascript execution context - function execution context in creation phase\" class=\"wp-image-84601\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2019\/12\/javascript-execution-context-function-execution-context-in-creation-phase.png 258w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2019\/12\/javascript-execution-context-function-execution-context-in-creation-phase-172x300.png 172w\" sizes=\"(max-width: 258px) 100vw, 258px\" \/><\/figure>\n\n\n\n<p>In our example, the function execution context creates the <code>arguments<\/code> object that references all parameters passed into the function, sets <code>this<\/code> value to the global object, and initializes the <code>a<\/code> parameter to <code>undefined<\/code>.<\/p>\n\n\n\n<p>During the execution phase of the function execution context, the JavaScript engine assigns <code>10<\/code> to the parameter <code>a<\/code> and returns the result (<code>100<\/code>) to the global execution context:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" loading=\"lazy\" width=\"259\" height=\"448\" src=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2019\/12\/javascript-execution-context-function-execution-context-in-execution-phase.png\" alt=\"javascript execution context - function execution context in execution phase\" class=\"wp-image-84602\" srcset=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2019\/12\/javascript-execution-context-function-execution-context-in-execution-phase.png 259w, https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2019\/12\/javascript-execution-context-function-execution-context-in-execution-phase-173x300.png 173w\" sizes=\"(max-width: 259px) 100vw, 259px\" \/><\/figure>\n\n\n\n<p>To keep track of all the execution contexts, including the global execution context and function execution contexts, the JavaScript engine uses the <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-call-stack\/\">call stack<\/a>, which you will learn in the next tutorial.<\/p>\n\n\n\n<p>In this tutorial, you have learned about the JavaScript execution contexts, including the global execution context and function execution contexts.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"84598\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/\"\n\t\t\t\tdata-post-title=\"JavaScript Execution Context\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"84598\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/\"\n\t\t\t\tdata-post-title=\"JavaScript Execution Context\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn about the JavaScript execution context to deeply understand how JavaScript code gets executed.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":14,"menu_order":118,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Understanding JavaScript Execution Context By Examples<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn about the JavaScript execution context to deeply understand how JavaScript code get executed.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Understanding JavaScript Execution Context By Examples\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn about the JavaScript execution context to deeply understand how JavaScript code get executed.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-26T01:43:13+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2019\/12\/javascript-execution-context-global-execution-context-in-creation-phase.png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/\",\"name\":\"Understanding JavaScript Execution Context By Examples\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2019-12-08T09:10:35+00:00\",\"dateModified\":\"2022-01-26T01:43:13+00:00\",\"description\":\"In this tutorial, you will learn about the JavaScript execution context to deeply understand how JavaScript code get executed.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PriFix Tutorial\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"JavaScript Execution Context\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Understanding JavaScript Execution Context By Examples","description":"In this tutorial, you will learn about the JavaScript execution context to deeply understand how JavaScript code get executed.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/","og_locale":"en_US","og_type":"article","og_title":"Understanding JavaScript Execution Context By Examples","og_description":"In this tutorial, you will learn about the JavaScript execution context to deeply understand how JavaScript code get executed.","og_url":"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/","og_site_name":"PriFix Tutorial","article_modified_time":"2022-01-26T01:43:13+00:00","og_image":[{"url":"https:\/\/https://jsprifix.netlify.app/\/wp-content\/uploads\/2019\/12\/javascript-execution-context-global-execution-context-in-creation-phase.png"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/","url":"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/","name":"Understanding JavaScript Execution Context By Examples","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2019-12-08T09:10:35+00:00","dateModified":"2022-01-26T01:43:13+00:00","description":"In this tutorial, you will learn about the JavaScript execution context to deeply understand how JavaScript code get executed.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/javascript-execution-context\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"PriFix Tutorial","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":3,"name":"JavaScript Execution Context"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/84598"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=84598"}],"version-history":[{"count":4,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/84598\/revisions"}],"predecessor-version":[{"id":89414,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/84598\/revisions\/89414"}],"up":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/pages\/14"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=84598"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
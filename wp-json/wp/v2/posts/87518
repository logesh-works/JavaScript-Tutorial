{"id":87518,"date":"2020-09-08T20:13:07","date_gmt":"2020-09-09T03:13:07","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?p=87518"},"modified":"2020-09-08T20:54:50","modified_gmt":"2020-09-09T03:54:50","slug":"javascript-string-equals","status":"publish","type":"post","link":"https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/","title":{"rendered":"How to Check if Two Strings are Equal in JavaScript"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to check if two strings are equal in JavaScript.<\/p>\n\n\n\n<p>Suppose you have the following two strings:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> s1 = <span class=\"hljs-string\">'Hi'<\/span>;\n<span class=\"hljs-keyword\">const<\/span> s2 = <span class=\"hljs-string\">'Hi'<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Since <code>s1<\/code> and <code>s2<\/code> have the same characters, they are equal when you compare them using the <code>===<\/code> operator:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(s1 === s2); <span class=\"hljs-comment\">\/\/ true<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Consider the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> s1 = <span class=\"hljs-string\">'caf\u00e9'<\/span>;\r\n<span class=\"hljs-keyword\">const<\/span> s2 = <span class=\"hljs-string\">'cafe\u0301'<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(s1===s2); <span class=\"hljs-comment\">\/\/ false<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example,  <code>s1<\/code> and <code>s2<\/code> look the same. But the comparison s1 === s2 evaluates to <code>false<\/code>.  <\/p>\n\n\n\n<p>To understand how it works, you first need to know the concept of grapheme and combining characters.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">What is a grapheme<\/h2>\n\n\n\n<p>A\u00a0grapheme\u00a0is the smallest functional unit of a\u00a0writing system.<\/p>\n\n\n\n<p>For example, the string <code>caf\u00e9<\/code> has four letters: <code>c<\/code>, <code>a<\/code>, <code>f<\/code>, and <code>\u00e9<\/code> (or <code>e<\/code>  with <code>acute<\/code>).  The way you see that each character is a unit of writing is called grapheme.<\/p>\n\n\n\n<p>And some grapheme can be represented using different sequence of characters.<\/p>\n\n\n\n<p>There are some characters that when you place them after a character, it modify the previous character. These characters are called combining characters.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">What is a combining character<\/h2>\n\n\n\n<p>A combining character is a character that applies to the precedent base character to create a grapheme.<\/p>\n\n\n\n<p>In our example, the <code>\u00e9<\/code> is an atomic grapheme. And you can encode it using the lowercase <code>e<\/code> (base character) and a combining character (\u25cc\u0301):<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">e + \u25cc\u0301 = \u00e9<\/code><\/span><\/pre>\n\n\n<p>In JavaScript, the character \u00e9 is represented as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> c1 = <span class=\"hljs-string\">'e\\u0301'<\/span>;\r\n<span class=\"hljs-built_in\">console<\/span>.log(c1); <span class=\"hljs-comment\">\/\/ <\/span>\re\u0301<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>\\u0301<\/code>\u00a0is the\u00a0Unicode escape sequence\u00a0of the combining character \u25cc\u0301.<\/p>\n\n\n\n<p>In addition, you can encode the same grapheme \u00e9 using the lowercase <code>e<\/code> with acute character:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> c2 = <span class=\"hljs-string\">'\u00e9'<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(c2);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Now, if you compare the <code>c1<\/code> and <code>c2<\/code>  of the same grapheme <code>\u00e9<\/code>, you find that they aren&#8217;t equal:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> c1 = <span class=\"hljs-string\">'e\\u0301'<\/span>;\r\n<span class=\"hljs-keyword\">const<\/span> c2 = <span class=\"hljs-string\">'\u00e9'<\/span>;\r\n<span class=\"hljs-built_in\">console<\/span>.log(c1 === c2); <span class=\"hljs-comment\">\/\/ false<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To safely compare these string, you use the <code>normalize()<\/code> method. This method returns the Unicode normalization form of a string. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> c1 = <span class=\"hljs-string\">'e\\u0301'<\/span>;\r\n<span class=\"hljs-built_in\">console<\/span>.log(c1.normalize()); <span class=\"hljs-comment\">\/\/ <\/span>\r\u00e9<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Hence, <code>c1<\/code> and <code>c2<\/code> will be equal after normalization:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> c1 = <span class=\"hljs-string\">'e\\u0301'<\/span>;\r\n<span class=\"hljs-keyword\">const<\/span> c2 = <span class=\"hljs-string\">'\u00e9'<\/span>;\r\n<span class=\"hljs-built_in\">console<\/span>.log(c1.normalize() === c2.normalize()); <span class=\"hljs-comment\">\/\/ true<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Similarly, comparing the following strings also returns <code>true<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> s1 = <span class=\"hljs-string\">'caf\u00e9'<\/span>;\r\n<span class=\"hljs-keyword\">const<\/span> s2 = <span class=\"hljs-string\">'cafe\u0301'<\/span>;\n<span class=\"hljs-built_in\">console<\/span>.log(s1.normalize() === s2.normalize()); <span class=\"hljs-comment\">\/\/ true<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Generally, if the strings contain only ASCII characters, you use the === operator to check if they are equal.<\/li><li>When the strings contain characters that include combining characters, you normalize them first before comparing them for equality.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"87518\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/\"\n\t\t\t\tdata-post-title=\"How to Check if Two Strings are Equal in JavaScript\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"87518\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/\"\n\t\t\t\tdata-post-title=\"How to Check if Two Strings are Equal in JavaScript\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to check if two strings are equal in JavaScript.<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[48],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>How to Check if Two Strings are Equal in JavaScript<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"How to Check if Two Strings are Equal in JavaScript\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you&#039;ll learn how to check if two strings are equal in JavaScript.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:published_time\" content=\"2020-09-09T03:13:07+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-09-09T03:54:50+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/\",\"name\":\"How to Check if Two Strings are Equal in JavaScript\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2020-09-09T03:13:07+00:00\",\"dateModified\":\"2020-09-09T03:54:50+00:00\",\"author\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#\/schema\/person\/de065bcdc4997575755c1e47d48d8fcb\"},\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"How to Check if Two Strings are Equal in JavaScript\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#\/schema\/person\/de065bcdc4997575755c1e47d48d8fcb\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/3139684520a3179a9df82b22cd9096c6?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/3139684520a3179a9df82b22cd9096c6?s=96&d=mm&r=g\",\"caption\":\"admin\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"How to Check if Two Strings are Equal in JavaScript","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/","og_locale":"en_US","og_type":"article","og_title":"How to Check if Two Strings are Equal in JavaScript","og_description":"In this tutorial, you'll learn how to check if two strings are equal in JavaScript.","og_url":"https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/","og_site_name":"PriFix Tutorial","article_published_time":"2020-09-09T03:13:07+00:00","article_modified_time":"2020-09-09T03:54:50+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/","url":"https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/","name":"How to Check if Two Strings are Equal in JavaScript","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2020-09-09T03:13:07+00:00","dateModified":"2020-09-09T03:54:50+00:00","author":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#\/schema\/person\/de065bcdc4997575755c1e47d48d8fcb"},"breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/string\/javascript-string-equals\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"How to Check if Two Strings are Equal in JavaScript"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/https://jsprifix.netlify.app/\/#\/schema\/person\/de065bcdc4997575755c1e47d48d8fcb","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/https://jsprifix.netlify.app/\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/3139684520a3179a9df82b22cd9096c6?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/3139684520a3179a9df82b22cd9096c6?s=96&d=mm&r=g","caption":"admin"}}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/posts\/87518"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=87518"}],"version-history":[{"count":5,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/posts\/87518\/revisions"}],"predecessor-version":[{"id":87531,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/posts\/87518\/revisions\/87531"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=87518"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/categories?post=87518"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/tags?post=87518"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
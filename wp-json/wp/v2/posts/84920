{"id":84920,"date":"2020-01-03T01:44:29","date_gmt":"2020-01-03T09:44:29","guid":{"rendered":"https:\/\/https://jsprifix.netlify.app/\/?p=84920"},"modified":"2020-03-28T21:21:17","modified_gmt":"2020-03-29T04:21:17","slug":"javascript-merge-objects","status":"publish","type":"post","link":"https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/","title":{"rendered":"JavaScript Merge Objects"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to merge two or more JavaScript objects and create a new object that combines the properties of all the objects.<\/p>\n\n\n\n<p>To merge <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-objects\/\">objects<\/a> into a new one that has all <a href=\"https:\/\/https://jsprifix.netlify.app/\/javascript-object-properties\/\">properties<\/a> of the merged objects, you have two options:<\/p>\n\n\n\n<ul><li>Use a spread operator ( <code>...<\/code>)<\/li><li>Use the <code>Object.assign()<\/code> method<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Merge objects using the spread operator (<code>...<\/code>)<\/h2>\n\n\n\n<p><a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/\">ES6<\/a> introduced the <a href=\"https:\/\/https://jsprifix.netlify.app/\/es6\/javascript-spread\/\">spread operator<\/a> (<code>...<\/code>) which can be used to merge two or more objects and create a new one that has properties of the merged objects.<\/p>\n\n\n\n<p>The following example uses the spread operator (<code>...<\/code>) to merge the <code>person<\/code> and <code>job<\/code> objects into the <code>employee<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {\n    <span class=\"hljs-attr\">firstName<\/span>: <span class=\"hljs-string\">'John'<\/span>,\n    <span class=\"hljs-attr\">lastName<\/span>: <span class=\"hljs-string\">'Doe'<\/span>,\n    <span class=\"hljs-attr\">age<\/span>: <span class=\"hljs-number\">25<\/span>,\n    <span class=\"hljs-attr\">ssn<\/span>: <span class=\"hljs-string\">'123-456-2356'<\/span>\n};\n\n\n<span class=\"hljs-keyword\">let<\/span> job = {\n    <span class=\"hljs-attr\">jobTitle<\/span>: <span class=\"hljs-string\">'JavaScript Developer'<\/span>,\n    <span class=\"hljs-attr\">location<\/span>: <span class=\"hljs-string\">'USA'<\/span>\n};\n\n<span class=\"hljs-keyword\">let<\/span> employee = {\n    ...person,\n    ...job\n};\n\n<span class=\"hljs-built_in\">console<\/span>.log(employee);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<p>Output:<\/p>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{\n    <span class=\"hljs-attribute\">firstName<\/span>: <span class=\"hljs-string\">'John'<\/span>,\n    lastName: <span class=\"hljs-string\">'Doe'<\/span>,\n    age: <span class=\"hljs-number\">25<\/span>,\n    ssn: <span class=\"hljs-string\">'123-456-2356'<\/span>,\n    jobTitle: <span class=\"hljs-string\">'JavaScript Developer'<\/span>,\n    location: <span class=\"hljs-string\">'USA'<\/span>\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<p>If objects have a property with the same name, then the right-most object property overwrites the previous one. For example:<\/p>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> job = {\n    <span class=\"hljs-attr\">jobTitle<\/span>: <span class=\"hljs-string\">'JavaScript Developer'<\/span>,\n    <span class=\"hljs-attr\">country<\/span>: <span class=\"hljs-string\">'USA'<\/span>\n};\n\n<span class=\"hljs-keyword\">let<\/span> location = {\n    <span class=\"hljs-attr\">city<\/span>: <span class=\"hljs-string\">'London'<\/span>,\n    <span class=\"hljs-attr\">country<\/span>: <span class=\"hljs-string\">'England'<\/span>\n};\n\n<span class=\"hljs-keyword\">let<\/span> remoteJob = {\n    ...job,\n    ...location\n};\n\n<span class=\"hljs-built_in\">console<\/span>.log(remoteJob);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<p>Output:<\/p>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{\n    <span class=\"hljs-attribute\">jobTitle<\/span>: <span class=\"hljs-string\">'JavaScript Developer'<\/span>,\n    country: <span class=\"hljs-string\">'England'<\/span>,\n    city: <span class=\"hljs-string\">'London'<\/span>\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<p>In this example, the <code>job<\/code> and <code>location<\/code> has the same property <code>country<\/code>. When we merged these objects, the result object (<code>remoteJob<\/code>) has the <code>country<\/code> property with the value from the second object (<code>location<\/code>).<\/p>\n<h2>Merge objects using <code>Object.assign()<\/code> method<\/h2>\n<p>The <code>Object.assign()<\/code> method allows you to copy all enumerable own properties from one or more source objects to a target object, and return the target object:<\/p>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">Object<\/span>.assign(target, sourceObj1, sourceObj2, ...);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<p>Similar to spread operator ( <code>...<\/code>), if the source objects have the same property name, the later object will overwrite the previous object. See the following example:<\/p>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {\n    <span class=\"hljs-attr\">firstName<\/span>: <span class=\"hljs-string\">'John'<\/span>,\n    <span class=\"hljs-attr\">lastName<\/span>: <span class=\"hljs-string\">'Doe'<\/span>,\n    <span class=\"hljs-attr\">age<\/span>: <span class=\"hljs-number\">25<\/span>,\n    <span class=\"hljs-attr\">ssn<\/span>: <span class=\"hljs-string\">'123-456-2356'<\/span>\n};\n\n\n<span class=\"hljs-keyword\">let<\/span> job = {\n    <span class=\"hljs-attr\">jobTitle<\/span>: <span class=\"hljs-string\">'JavaScript Developer'<\/span>,\n    <span class=\"hljs-attr\">country<\/span>: <span class=\"hljs-string\">'USA'<\/span>\n};\n\n\n<span class=\"hljs-keyword\">let<\/span> employee = <span class=\"hljs-built_in\">Object<\/span>.assign(person, job);\n<span class=\"hljs-built_in\">console<\/span>.log(employee);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<p>Output:<\/p>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">{\n    <span class=\"hljs-attribute\">firstName<\/span>: <span class=\"hljs-string\">'John'<\/span>,\n    lastName: <span class=\"hljs-string\">'Doe'<\/span>,\n    age: <span class=\"hljs-number\">25<\/span>,\n    ssn: <span class=\"hljs-string\">'123-456-2356'<\/span>,\n    jobTitle: <span class=\"hljs-string\">'JavaScript Developer'<\/span>,\n    country: <span class=\"hljs-string\">'USA'<\/span>\n}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<h2>The Shallow Merge<\/h2>\n<p>Both the spread operator ( <code>...<\/code>) and <code>Object.assign()<\/code> method perform a shallow merge. It means that if an object has a property that references to another object, the property of the original object and result target object will reference the same object. For example:<\/p>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> person = {\n    <span class=\"hljs-attr\">firstName<\/span>: <span class=\"hljs-string\">'John'<\/span>,\n    <span class=\"hljs-attr\">lastName<\/span>: <span class=\"hljs-string\">'Doe'<\/span>,\n    <span class=\"hljs-attr\">age<\/span>: <span class=\"hljs-number\">25<\/span>,\n    <span class=\"hljs-attr\">ssn<\/span>: <span class=\"hljs-string\">'123-456-2356'<\/span>,\n    <span class=\"hljs-attr\">contact<\/span>: {\n        <span class=\"hljs-attr\">phone<\/span>: <span class=\"hljs-string\">'408-989-8745'<\/span>,\n        <span class=\"hljs-attr\">email<\/span>: <span class=\"hljs-string\">'john.doe@example.com'<\/span>\n    }\n};\n\n\n<span class=\"hljs-keyword\">let<\/span> job = {\n    <span class=\"hljs-attr\">jobTitle<\/span>: <span class=\"hljs-string\">'JavaScript Developer'<\/span>,\n    <span class=\"hljs-attr\">location<\/span>: <span class=\"hljs-string\">'USA'<\/span>\n};\n\n<span class=\"hljs-keyword\">let<\/span> employee = { ...person,  ...job };\n\n<span class=\"hljs-built_in\">console<\/span>.log(employee.contact === person.contact);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<p>Output:<\/p>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-literal\">true<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<p>In this example, the <code>person<\/code> object has the <code>contact<\/code> property that references to an object. After merging, the <code>person<\/code> and <code>employee<\/code> object have the <code>contact<\/code> property that reference to the same object.<\/p>\n<h2>The Deep Merge<\/h2>\n<p>To recursively merge own and inherited enumerable string keyed properties of source objects to a target object, you can use the <a href=\"https:\/\/www.npmjs.com\/package\/lodash.merge\" target=\"_blank\" rel=\"noopener noreferrer\">Lodash ._merge()<\/a> method:<\/p>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">_<span class=\"hljs-selector-class\">.merge<\/span>(<span class=\"hljs-selector-tag\">object<\/span>, <span class=\"hljs-selector-attr\">&#91;sources]<\/span>)\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<p>In this tutorial, you have learned how to merge objects in JavaScript using the spread operator (<code>...<\/code>) and <code>Object.assign()<\/code> method.<\/p><div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"84920\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/\"\n\t\t\t\tdata-post-title=\"JavaScript Merge Objects\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"84920\"\n\t\t\t\tdata-post-url=\"https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/\"\n\t\t\t\tdata-post-title=\"JavaScript Merge Objects\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Merge objects into a single object using the spread operator (&#8230;) or Object.assign() method.<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[27],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>How to Merge Objects in JavaScript<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to merge objects and create a new object that combines the properties of all the objects.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"How to Merge Objects in JavaScript\" \/>\n<meta property=\"og:description\" content=\"In this tutorial, you will learn how to merge objects and create a new object that combines the properties of all the objects.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:published_time\" content=\"2020-01-03T09:44:29+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-03-29T04:21:17+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/\",\"name\":\"How to Merge Objects in JavaScript\",\"isPartOf\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\"},\"datePublished\":\"2020-01-03T09:44:29+00:00\",\"dateModified\":\"2020-03-29T04:21:17+00:00\",\"author\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#\/schema\/person\/de065bcdc4997575755c1e47d48d8fcb\"},\"description\":\"In this tutorial, you will learn how to merge objects and create a new object that combines the properties of all the objects.\",\"breadcrumb\":{\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/https://jsprifix.netlify.app/\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"JavaScript Merge Objects\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#website\",\"url\":\"https:\/\/https://jsprifix.netlify.app/\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#\/schema\/person\/de065bcdc4997575755c1e47d48d8fcb\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/https://jsprifix.netlify.app/\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/3139684520a3179a9df82b22cd9096c6?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/3139684520a3179a9df82b22cd9096c6?s=96&d=mm&r=g\",\"caption\":\"admin\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"How to Merge Objects in JavaScript","description":"In this tutorial, you will learn how to merge objects and create a new object that combines the properties of all the objects.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/","og_locale":"en_US","og_type":"article","og_title":"How to Merge Objects in JavaScript","og_description":"In this tutorial, you will learn how to merge objects and create a new object that combines the properties of all the objects.","og_url":"https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/","og_site_name":"PriFix Tutorial","article_published_time":"2020-01-03T09:44:29+00:00","article_modified_time":"2020-03-29T04:21:17+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/","url":"https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/","name":"How to Merge Objects in JavaScript","isPartOf":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#website"},"datePublished":"2020-01-03T09:44:29+00:00","dateModified":"2020-03-29T04:21:17+00:00","author":{"@id":"https:\/\/https://jsprifix.netlify.app/\/#\/schema\/person\/de065bcdc4997575755c1e47d48d8fcb"},"description":"In this tutorial, you will learn how to merge objects and create a new object that combines the properties of all the objects.","breadcrumb":{"@id":"https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/https://jsprifix.netlify.app/\/object\/javascript-merge-objects\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/https://jsprifix.netlify.app/\/"},{"@type":"ListItem","position":2,"name":"JavaScript Merge Objects"}]},{"@type":"WebSite","@id":"https:\/\/https://jsprifix.netlify.app/\/#website","url":"https:\/\/https://jsprifix.netlify.app/\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/https://jsprifix.netlify.app/\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/https://jsprifix.netlify.app/\/#\/schema\/person\/de065bcdc4997575755c1e47d48d8fcb","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/https://jsprifix.netlify.app/\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/3139684520a3179a9df82b22cd9096c6?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/3139684520a3179a9df82b22cd9096c6?s=96&d=mm&r=g","caption":"admin"}}]}},"_links":{"self":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/posts\/84920"}],"collection":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/comments?post=84920"}],"version-history":[{"count":1,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/posts\/84920\/revisions"}],"predecessor-version":[{"id":86277,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/posts\/84920\/revisions\/86277"}],"wp:attachment":[{"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/media?parent=84920"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/categories?post=84920"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/https://jsprifix.netlify.app/\/wp-json\/wp\/v2\/tags?post=84920"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
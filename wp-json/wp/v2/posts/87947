{"id":87947,"date":"2020-09-28T18:55:03","date_gmt":"2020-09-29T01:55:03","guid":{"rendered":"https:\/\/www.javascripttutorial.net\/?p=87947"},"modified":"2020-09-28T18:56:25","modified_gmt":"2020-09-29T01:56:25","slug":"javascript-null","status":"publish","type":"post","link":"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/","title":{"rendered":"An Essential Guide to JavaScript null"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the JavaScript <code>null<\/code> and how to handle it effectively.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">What is null in JavaScript<\/h2>\n\n\n\n<p>JavaScript <code>null<\/code> is a primitive type that contains a special value <code>null<\/code>.<\/p>\n\n\n\n<p>JavaScript uses the <code>null<\/code> value to represent the <strong>intentional absence of any object value<\/strong>.<\/p>\n\n\n\n<p>If you find a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-variables\/\">variable<\/a> or a <a href=\"https:\/\/www.javascripttutorial.net\/javascript-function\/\">function<\/a> that returns <code>null<\/code>, it means that the expected object couldn&#8217;t be created. <\/p>\n\n\n\n<p>The following example defines the <code>Circle<\/code> <a href=\"https:\/\/www.javascripttutorial.net\/es6\/javascript-class\/\">class<\/a> whose constructor accepts an argument <code>radius<\/code>. The <code>Circle<\/code> class has a static method called <code>create()<\/code> that returns a new <code>Circle<\/code> object with a specified radius.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Circle<\/span> <\/span>{\n    <span class=\"hljs-keyword\">constructor<\/span>(radius) {\n        <span class=\"hljs-keyword\">this<\/span>.radius = radius;\n    }\n    <span class=\"hljs-keyword\">get<\/span> area() {\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-built_in\">Math<\/span>.PI * <span class=\"hljs-built_in\">Math<\/span>.pow(<span class=\"hljs-keyword\">this<\/span>.radius, <span class=\"hljs-number\">2<\/span>);\n    }\n\n    <span class=\"hljs-keyword\">static<\/span> create(radius) {\n        <span class=\"hljs-keyword\">return<\/span> radius &gt; <span class=\"hljs-number\">0<\/span> ? <span class=\"hljs-keyword\">new<\/span> Circle(radius) : <span class=\"hljs-literal\">null<\/span>\n;\n    }\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This creates a new <code>Circle<\/code> object with the radius <code>10<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> c = Circle.create(<span class=\"hljs-number\">10<\/span>);\n<span class=\"hljs-built_in\">console<\/span>.log(c.area); <span class=\"hljs-comment\">\/\/ 31.41592653589793<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, the following example returns <code>null<\/code> because the <code>radius<\/code> argument isn&#8217;t passed into the <code>create()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> c2 = Circle.create();\n<span class=\"hljs-built_in\">console<\/span>.log(c2); <span class=\"hljs-comment\">\/\/ null<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Check if a value is null<\/h2>\n\n\n\n<p>To check if a value is <code>null<\/code> , you use the strict equality operator <code>===<\/code> like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">value === <span class=\"hljs-literal\">null<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> rect = <span class=\"hljs-literal\">null<\/span>;\n<span class=\"hljs-keyword\">const<\/span> square = {\n    <span class=\"hljs-attr\">dimension<\/span>: <span class=\"hljs-number\">10<\/span>\n};\n\n<span class=\"hljs-built_in\">console<\/span>.log(rect === <span class=\"hljs-literal\">null<\/span>); <span class=\"hljs-comment\">\/\/ true<\/span>\n<span class=\"hljs-built_in\">console<\/span>.log(square === <span class=\"hljs-literal\">null<\/span>); <span class=\"hljs-comment\">\/\/ false<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>rect === null<\/code> evaluates to true because the <code>rect<\/code> variable is assigned to a <code>null<\/code> value. On the other hand, the <code>square === null<\/code> evaluates to <code>false<\/code> because it&#8217;s assigned to an object.<\/p>\n\n\n\n<p>To check if a value is not <code>null<\/code>, you use the strict inequality operator (<code>!==<\/code>):<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">value !== <span class=\"hljs-literal\">null<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">JavaScript null features<\/h2>\n\n\n\n<p>JavaScript null has the following features.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) null is falsy<\/h3>\n\n\n\n<p>Besides <code>false<\/code>, <code>0<\/code>, an empty string (<code>''<\/code>), <code>undefined<\/code>, <code>NaN<\/code>, <code>null<\/code> is a falsy value. It means that JavaScript will coerce <code>null<\/code> to <code>false<\/code> in conditionals. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> square = <span class=\"hljs-literal\">null<\/span>;\n<span class=\"hljs-keyword\">if<\/span> (square) {\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'The square is not null'<\/span>);\n} <span class=\"hljs-keyword\">else<\/span> {\n    <span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-string\">'The square is null'<\/span>);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">The square is <span class=\"hljs-literal\">null<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>square<\/code> variable is <code>null<\/code> therefore the <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-if-else\/\">if<\/a><\/code> statement evaluates it to <code>false<\/code> and executes the statement in the <code>else<\/code> clause.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">2) typeof null is object<\/h3>\n\n\n\n<p>The <code>typeof value<\/code> returns the type of the value. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-keyword\">typeof<\/span> <span class=\"hljs-number\">10<\/span>); <span class=\"hljs-comment\">\/\/ 'number'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Surprisingly,  the <code>typeof null<\/code> returns <code>'object'<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-keyword\">typeof<\/span> <span class=\"hljs-literal\">null<\/span>); <span class=\"hljs-comment\">\/\/ 'object'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In JavaScript, <code>null<\/code> is a primitive value, not an object. It turns out that this is a historical bug from the first version of JavaScript that may never be fixed.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">A common JavaScript null mistake<\/h2>\n\n\n\n<p>In JavaScript, you often call a function to get an object. And then you access the property of that object.<\/p>\n\n\n\n<p>However, if the function returns <code>null<\/code> instead of an object, you&#8217;ll get a <code>TypeError<\/code>. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> classList = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#save'<\/span>).classList;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we select an element with id <code>save<\/code> and access its <code>classList<\/code> property.<\/p>\n\n\n\n<p>If the page doesn&#8217;t have any element with the id <code>save<\/code>, the <code>document.querySelector('#save')<\/code> returns <code>null<\/code>.  Hence, accessing the <code>className<\/code> property of the <code>null<\/code> value results in an error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">Uncaught <span class=\"hljs-built_in\">TypeError<\/span>: Cannot read property <span class=\"hljs-string\">'classList'<\/span> <span class=\"hljs-keyword\">of<\/span> <span class=\"hljs-literal\">null<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To avoid this, you can use the <a href=\"https:\/\/www.javascripttutorial.net\/es-next\/javascript-optional-chaining-operator\/\">optional chaining operator<\/a> (<code>?.<\/code>)<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">object ?. property<\/code><\/span><\/pre>\n\n\n<p>The optional chaining operator returns <code>undefined<\/code> instead of throwing an error when you attempt to access a property of a <code>null<\/code> (or <code>undefined<\/code>) value.<\/p>\n\n\n\n<p>The following example uses the optional chaining operator that returns <code>undefined<\/code> instead of an error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> classList = <span class=\"hljs-built_in\">document<\/span>.querySelector(<span class=\"hljs-string\">'#save'<\/span>)?.classList;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">JavaScript null vs. undefined<\/h2>\n\n\n\n<p>Both <code>null<\/code> and <code><a href=\"https:\/\/www.javascripttutorial.net\/javascript-undefined\/\">undefined<\/a><\/code> are primitive values.<\/p>\n\n\n\n<p>The <code>undefined<\/code> is the value of an uninitialized vairable or object property.<\/p>\n\n\n\n<p>For example, when you declare a variable without initializing a value, the variable evaluates to <code>undefined<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let<\/span> counter;\n<span class=\"hljs-built_in\">console<\/span>.log(counter); <span class=\"hljs-comment\">\/\/ undefined<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>null<\/code> represents an <strong>intentional absence of  an object<\/strong> while the <code>undefined<\/code> represents an <strong>unintentional absence of a value<\/strong>.<\/p>\n\n\n\n<p>In other words, the <code>null<\/code> represents a missing object while the <code>undefined<\/code> represents an uninitialized variable.<\/p>\n\n\n\n<p>The <code>null<\/code> and <code>undefined<\/code> are equal when you use the loose equality operator (<code>==<\/code>):<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-literal\">null<\/span> == <span class=\"hljs-literal\">undefined<\/span>); <span class=\"hljs-comment\">\/\/ true<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The strict equality operator <code>===<\/code> differentiates the <code>null<\/code> and <code>undefined<\/code>. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">console<\/span>.log(<span class=\"hljs-literal\">null<\/span> === <span class=\"hljs-literal\">undefined<\/span>); <span class=\"hljs-comment\">\/\/ false<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Javascript <code>null<\/code> is a primitive type that has one value null.<\/li><li>JavaScript uses the null value to represent a missing object.<\/li><li>Use the strict equality operator (<code>===<\/code>) to check if a value is <code>null<\/code>.<\/li><li>The <code>typeof null<\/code> returns <code>'object'<\/code>, which is historical bug in JavaScript that may never be fixed.<\/li><li>Use the optional chaining operator (<code>?.<\/code>) to access the property of an object that may be <code>null<\/code>.<\/li><\/ul>\n\n\n\n<p><\/p>\n\n\n\n<p><\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"87947\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/\"\n\t\t\t\tdata-post-title=\"An Essential Guide to JavaScript null\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"87947\"\n\t\t\t\tdata-post-url=\"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/\"\n\t\t\t\tdata-post-title=\"An Essential Guide to JavaScript null\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn about the JavaScript null and how to handle it effectively.<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[27],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v20.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>An Essential Guide to JavaScript null<\/title>\n<meta name=\"description\" content=\"This tutorial helps you understand the JavaScript null and how to handle it effectively to make your code more robust.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"An Essential Guide to JavaScript null\" \/>\n<meta property=\"og:description\" content=\"This tutorial helps you understand the JavaScript null and how to handle it effectively to make your code more robust.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/\" \/>\n<meta property=\"og:site_name\" content=\"PriFix Tutorial\" \/>\n<meta property=\"article:published_time\" content=\"2020-09-29T01:55:03+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-09-29T01:56:25+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/\",\"url\":\"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/\",\"name\":\"An Essential Guide to JavaScript null\",\"isPartOf\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\"},\"datePublished\":\"2020-09-29T01:55:03+00:00\",\"dateModified\":\"2020-09-29T01:56:25+00:00\",\"author\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/#\/schema\/person\/de065bcdc4997575755c1e47d48d8fcb\"},\"description\":\"This tutorial helps you understand the JavaScript null and how to handle it effectively to make your code more robust.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.javascripttutorial.net\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"An Essential Guide to JavaScript null\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#website\",\"url\":\"https:\/\/www.javascripttutorial.net\/\",\"name\":\"PriFix Tutorial\",\"description\":\"A comprehensive PriFix Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.javascripttutorial.net\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#\/schema\/person\/de065bcdc4997575755c1e47d48d8fcb\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.javascripttutorial.net\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/3139684520a3179a9df82b22cd9096c6?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/3139684520a3179a9df82b22cd9096c6?s=96&d=mm&r=g\",\"caption\":\"admin\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"An Essential Guide to JavaScript null","description":"This tutorial helps you understand the JavaScript null and how to handle it effectively to make your code more robust.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/","og_locale":"en_US","og_type":"article","og_title":"An Essential Guide to JavaScript null","og_description":"This tutorial helps you understand the JavaScript null and how to handle it effectively to make your code more robust.","og_url":"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/","og_site_name":"PriFix Tutorial","article_published_time":"2020-09-29T01:55:03+00:00","article_modified_time":"2020-09-29T01:56:25+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/","url":"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/","name":"An Essential Guide to JavaScript null","isPartOf":{"@id":"https:\/\/www.javascripttutorial.net\/#website"},"datePublished":"2020-09-29T01:55:03+00:00","dateModified":"2020-09-29T01:56:25+00:00","author":{"@id":"https:\/\/www.javascripttutorial.net\/#\/schema\/person\/de065bcdc4997575755c1e47d48d8fcb"},"description":"This tutorial helps you understand the JavaScript null and how to handle it effectively to make your code more robust.","breadcrumb":{"@id":"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.javascripttutorial.net\/object\/javascript-null\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.javascripttutorial.net\/object\/javascript-null\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.javascripttutorial.net\/"},{"@type":"ListItem","position":2,"name":"An Essential Guide to JavaScript null"}]},{"@type":"WebSite","@id":"https:\/\/www.javascripttutorial.net\/#website","url":"https:\/\/www.javascripttutorial.net\/","name":"PriFix Tutorial","description":"A comprehensive PriFix Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.javascripttutorial.net\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/www.javascripttutorial.net\/#\/schema\/person\/de065bcdc4997575755c1e47d48d8fcb","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.javascripttutorial.net\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/3139684520a3179a9df82b22cd9096c6?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/3139684520a3179a9df82b22cd9096c6?s=96&d=mm&r=g","caption":"admin"}}]}},"_links":{"self":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/posts\/87947"}],"collection":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/comments?post=87947"}],"version-history":[{"count":5,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/posts\/87947\/revisions"}],"predecessor-version":[{"id":87953,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/posts\/87947\/revisions\/87953"}],"wp:attachment":[{"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/media?parent=87947"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/categories?post=87947"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.javascripttutorial.net\/wp-json\/wp\/v2\/tags?post=87947"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}